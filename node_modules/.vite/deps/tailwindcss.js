//#region node_modules/tailwindcss/dist/chunk-HTB5LLOP.mjs
var l = {
	inherit: "inherit",
	current: "currentcolor",
	transparent: "transparent",
	black: "#000",
	white: "#fff",
	slate: {
		50: "oklch(98.4% 0.003 247.858)",
		100: "oklch(96.8% 0.007 247.896)",
		200: "oklch(92.9% 0.013 255.508)",
		300: "oklch(86.9% 0.022 252.894)",
		400: "oklch(70.4% 0.04 256.788)",
		500: "oklch(55.4% 0.046 257.417)",
		600: "oklch(44.6% 0.043 257.281)",
		700: "oklch(37.2% 0.044 257.287)",
		800: "oklch(27.9% 0.041 260.031)",
		900: "oklch(20.8% 0.042 265.755)",
		950: "oklch(12.9% 0.042 264.695)"
	},
	gray: {
		50: "oklch(98.5% 0.002 247.839)",
		100: "oklch(96.7% 0.003 264.542)",
		200: "oklch(92.8% 0.006 264.531)",
		300: "oklch(87.2% 0.01 258.338)",
		400: "oklch(70.7% 0.022 261.325)",
		500: "oklch(55.1% 0.027 264.364)",
		600: "oklch(44.6% 0.03 256.802)",
		700: "oklch(37.3% 0.034 259.733)",
		800: "oklch(27.8% 0.033 256.848)",
		900: "oklch(21% 0.034 264.665)",
		950: "oklch(13% 0.028 261.692)"
	},
	zinc: {
		50: "oklch(98.5% 0 0)",
		100: "oklch(96.7% 0.001 286.375)",
		200: "oklch(92% 0.004 286.32)",
		300: "oklch(87.1% 0.006 286.286)",
		400: "oklch(70.5% 0.015 286.067)",
		500: "oklch(55.2% 0.016 285.938)",
		600: "oklch(44.2% 0.017 285.786)",
		700: "oklch(37% 0.013 285.805)",
		800: "oklch(27.4% 0.006 286.033)",
		900: "oklch(21% 0.006 285.885)",
		950: "oklch(14.1% 0.005 285.823)"
	},
	neutral: {
		50: "oklch(98.5% 0 0)",
		100: "oklch(97% 0 0)",
		200: "oklch(92.2% 0 0)",
		300: "oklch(87% 0 0)",
		400: "oklch(70.8% 0 0)",
		500: "oklch(55.6% 0 0)",
		600: "oklch(43.9% 0 0)",
		700: "oklch(37.1% 0 0)",
		800: "oklch(26.9% 0 0)",
		900: "oklch(20.5% 0 0)",
		950: "oklch(14.5% 0 0)"
	},
	stone: {
		50: "oklch(98.5% 0.001 106.423)",
		100: "oklch(97% 0.001 106.424)",
		200: "oklch(92.3% 0.003 48.717)",
		300: "oklch(86.9% 0.005 56.366)",
		400: "oklch(70.9% 0.01 56.259)",
		500: "oklch(55.3% 0.013 58.071)",
		600: "oklch(44.4% 0.011 73.639)",
		700: "oklch(37.4% 0.01 67.558)",
		800: "oklch(26.8% 0.007 34.298)",
		900: "oklch(21.6% 0.006 56.043)",
		950: "oklch(14.7% 0.004 49.25)"
	},
	red: {
		50: "oklch(97.1% 0.013 17.38)",
		100: "oklch(93.6% 0.032 17.717)",
		200: "oklch(88.5% 0.062 18.334)",
		300: "oklch(80.8% 0.114 19.571)",
		400: "oklch(70.4% 0.191 22.216)",
		500: "oklch(63.7% 0.237 25.331)",
		600: "oklch(57.7% 0.245 27.325)",
		700: "oklch(50.5% 0.213 27.518)",
		800: "oklch(44.4% 0.177 26.899)",
		900: "oklch(39.6% 0.141 25.723)",
		950: "oklch(25.8% 0.092 26.042)"
	},
	orange: {
		50: "oklch(98% 0.016 73.684)",
		100: "oklch(95.4% 0.038 75.164)",
		200: "oklch(90.1% 0.076 70.697)",
		300: "oklch(83.7% 0.128 66.29)",
		400: "oklch(75% 0.183 55.934)",
		500: "oklch(70.5% 0.213 47.604)",
		600: "oklch(64.6% 0.222 41.116)",
		700: "oklch(55.3% 0.195 38.402)",
		800: "oklch(47% 0.157 37.304)",
		900: "oklch(40.8% 0.123 38.172)",
		950: "oklch(26.6% 0.079 36.259)"
	},
	amber: {
		50: "oklch(98.7% 0.022 95.277)",
		100: "oklch(96.2% 0.059 95.617)",
		200: "oklch(92.4% 0.12 95.746)",
		300: "oklch(87.9% 0.169 91.605)",
		400: "oklch(82.8% 0.189 84.429)",
		500: "oklch(76.9% 0.188 70.08)",
		600: "oklch(66.6% 0.179 58.318)",
		700: "oklch(55.5% 0.163 48.998)",
		800: "oklch(47.3% 0.137 46.201)",
		900: "oklch(41.4% 0.112 45.904)",
		950: "oklch(27.9% 0.077 45.635)"
	},
	yellow: {
		50: "oklch(98.7% 0.026 102.212)",
		100: "oklch(97.3% 0.071 103.193)",
		200: "oklch(94.5% 0.129 101.54)",
		300: "oklch(90.5% 0.182 98.111)",
		400: "oklch(85.2% 0.199 91.936)",
		500: "oklch(79.5% 0.184 86.047)",
		600: "oklch(68.1% 0.162 75.834)",
		700: "oklch(55.4% 0.135 66.442)",
		800: "oklch(47.6% 0.114 61.907)",
		900: "oklch(42.1% 0.095 57.708)",
		950: "oklch(28.6% 0.066 53.813)"
	},
	lime: {
		50: "oklch(98.6% 0.031 120.757)",
		100: "oklch(96.7% 0.067 122.328)",
		200: "oklch(93.8% 0.127 124.321)",
		300: "oklch(89.7% 0.196 126.665)",
		400: "oklch(84.1% 0.238 128.85)",
		500: "oklch(76.8% 0.233 130.85)",
		600: "oklch(64.8% 0.2 131.684)",
		700: "oklch(53.2% 0.157 131.589)",
		800: "oklch(45.3% 0.124 130.933)",
		900: "oklch(40.5% 0.101 131.063)",
		950: "oklch(27.4% 0.072 132.109)"
	},
	green: {
		50: "oklch(98.2% 0.018 155.826)",
		100: "oklch(96.2% 0.044 156.743)",
		200: "oklch(92.5% 0.084 155.995)",
		300: "oklch(87.1% 0.15 154.449)",
		400: "oklch(79.2% 0.209 151.711)",
		500: "oklch(72.3% 0.219 149.579)",
		600: "oklch(62.7% 0.194 149.214)",
		700: "oklch(52.7% 0.154 150.069)",
		800: "oklch(44.8% 0.119 151.328)",
		900: "oklch(39.3% 0.095 152.535)",
		950: "oklch(26.6% 0.065 152.934)"
	},
	emerald: {
		50: "oklch(97.9% 0.021 166.113)",
		100: "oklch(95% 0.052 163.051)",
		200: "oklch(90.5% 0.093 164.15)",
		300: "oklch(84.5% 0.143 164.978)",
		400: "oklch(76.5% 0.177 163.223)",
		500: "oklch(69.6% 0.17 162.48)",
		600: "oklch(59.6% 0.145 163.225)",
		700: "oklch(50.8% 0.118 165.612)",
		800: "oklch(43.2% 0.095 166.913)",
		900: "oklch(37.8% 0.077 168.94)",
		950: "oklch(26.2% 0.051 172.552)"
	},
	teal: {
		50: "oklch(98.4% 0.014 180.72)",
		100: "oklch(95.3% 0.051 180.801)",
		200: "oklch(91% 0.096 180.426)",
		300: "oklch(85.5% 0.138 181.071)",
		400: "oklch(77.7% 0.152 181.912)",
		500: "oklch(70.4% 0.14 182.503)",
		600: "oklch(60% 0.118 184.704)",
		700: "oklch(51.1% 0.096 186.391)",
		800: "oklch(43.7% 0.078 188.216)",
		900: "oklch(38.6% 0.063 188.416)",
		950: "oklch(27.7% 0.046 192.524)"
	},
	cyan: {
		50: "oklch(98.4% 0.019 200.873)",
		100: "oklch(95.6% 0.045 203.388)",
		200: "oklch(91.7% 0.08 205.041)",
		300: "oklch(86.5% 0.127 207.078)",
		400: "oklch(78.9% 0.154 211.53)",
		500: "oklch(71.5% 0.143 215.221)",
		600: "oklch(60.9% 0.126 221.723)",
		700: "oklch(52% 0.105 223.128)",
		800: "oklch(45% 0.085 224.283)",
		900: "oklch(39.8% 0.07 227.392)",
		950: "oklch(30.2% 0.056 229.695)"
	},
	sky: {
		50: "oklch(97.7% 0.013 236.62)",
		100: "oklch(95.1% 0.026 236.824)",
		200: "oklch(90.1% 0.058 230.902)",
		300: "oklch(82.8% 0.111 230.318)",
		400: "oklch(74.6% 0.16 232.661)",
		500: "oklch(68.5% 0.169 237.323)",
		600: "oklch(58.8% 0.158 241.966)",
		700: "oklch(50% 0.134 242.749)",
		800: "oklch(44.3% 0.11 240.79)",
		900: "oklch(39.1% 0.09 240.876)",
		950: "oklch(29.3% 0.066 243.157)"
	},
	blue: {
		50: "oklch(97% 0.014 254.604)",
		100: "oklch(93.2% 0.032 255.585)",
		200: "oklch(88.2% 0.059 254.128)",
		300: "oklch(80.9% 0.105 251.813)",
		400: "oklch(70.7% 0.165 254.624)",
		500: "oklch(62.3% 0.214 259.815)",
		600: "oklch(54.6% 0.245 262.881)",
		700: "oklch(48.8% 0.243 264.376)",
		800: "oklch(42.4% 0.199 265.638)",
		900: "oklch(37.9% 0.146 265.522)",
		950: "oklch(28.2% 0.091 267.935)"
	},
	indigo: {
		50: "oklch(96.2% 0.018 272.314)",
		100: "oklch(93% 0.034 272.788)",
		200: "oklch(87% 0.065 274.039)",
		300: "oklch(78.5% 0.115 274.713)",
		400: "oklch(67.3% 0.182 276.935)",
		500: "oklch(58.5% 0.233 277.117)",
		600: "oklch(51.1% 0.262 276.966)",
		700: "oklch(45.7% 0.24 277.023)",
		800: "oklch(39.8% 0.195 277.366)",
		900: "oklch(35.9% 0.144 278.697)",
		950: "oklch(25.7% 0.09 281.288)"
	},
	violet: {
		50: "oklch(96.9% 0.016 293.756)",
		100: "oklch(94.3% 0.029 294.588)",
		200: "oklch(89.4% 0.057 293.283)",
		300: "oklch(81.1% 0.111 293.571)",
		400: "oklch(70.2% 0.183 293.541)",
		500: "oklch(60.6% 0.25 292.717)",
		600: "oklch(54.1% 0.281 293.009)",
		700: "oklch(49.1% 0.27 292.581)",
		800: "oklch(43.2% 0.232 292.759)",
		900: "oklch(38% 0.189 293.745)",
		950: "oklch(28.3% 0.141 291.089)"
	},
	purple: {
		50: "oklch(97.7% 0.014 308.299)",
		100: "oklch(94.6% 0.033 307.174)",
		200: "oklch(90.2% 0.063 306.703)",
		300: "oklch(82.7% 0.119 306.383)",
		400: "oklch(71.4% 0.203 305.504)",
		500: "oklch(62.7% 0.265 303.9)",
		600: "oklch(55.8% 0.288 302.321)",
		700: "oklch(49.6% 0.265 301.924)",
		800: "oklch(43.8% 0.218 303.724)",
		900: "oklch(38.1% 0.176 304.987)",
		950: "oklch(29.1% 0.149 302.717)"
	},
	fuchsia: {
		50: "oklch(97.7% 0.017 320.058)",
		100: "oklch(95.2% 0.037 318.852)",
		200: "oklch(90.3% 0.076 319.62)",
		300: "oklch(83.3% 0.145 321.434)",
		400: "oklch(74% 0.238 322.16)",
		500: "oklch(66.7% 0.295 322.15)",
		600: "oklch(59.1% 0.293 322.896)",
		700: "oklch(51.8% 0.253 323.949)",
		800: "oklch(45.2% 0.211 324.591)",
		900: "oklch(40.1% 0.17 325.612)",
		950: "oklch(29.3% 0.136 325.661)"
	},
	pink: {
		50: "oklch(97.1% 0.014 343.198)",
		100: "oklch(94.8% 0.028 342.258)",
		200: "oklch(89.9% 0.061 343.231)",
		300: "oklch(82.3% 0.12 346.018)",
		400: "oklch(71.8% 0.202 349.761)",
		500: "oklch(65.6% 0.241 354.308)",
		600: "oklch(59.2% 0.249 0.584)",
		700: "oklch(52.5% 0.223 3.958)",
		800: "oklch(45.9% 0.187 3.815)",
		900: "oklch(40.8% 0.153 2.432)",
		950: "oklch(28.4% 0.109 3.907)"
	},
	rose: {
		50: "oklch(96.9% 0.015 12.422)",
		100: "oklch(94.1% 0.03 12.58)",
		200: "oklch(89.2% 0.058 10.001)",
		300: "oklch(81% 0.117 11.638)",
		400: "oklch(71.2% 0.194 13.428)",
		500: "oklch(64.5% 0.246 16.439)",
		600: "oklch(58.6% 0.253 17.585)",
		700: "oklch(51.4% 0.222 16.935)",
		800: "oklch(45.5% 0.188 13.697)",
		900: "oklch(41% 0.159 10.272)",
		950: "oklch(27.1% 0.105 12.094)"
	}
};

//#endregion
//#region node_modules/tailwindcss/dist/chunk-G32FJCSR.mjs
var _ = new Set([
	"black",
	"silver",
	"gray",
	"white",
	"maroon",
	"red",
	"purple",
	"fuchsia",
	"green",
	"lime",
	"olive",
	"yellow",
	"navy",
	"blue",
	"teal",
	"aqua",
	"aliceblue",
	"antiquewhite",
	"aqua",
	"aquamarine",
	"azure",
	"beige",
	"bisque",
	"black",
	"blanchedalmond",
	"blue",
	"blueviolet",
	"brown",
	"burlywood",
	"cadetblue",
	"chartreuse",
	"chocolate",
	"coral",
	"cornflowerblue",
	"cornsilk",
	"crimson",
	"cyan",
	"darkblue",
	"darkcyan",
	"darkgoldenrod",
	"darkgray",
	"darkgreen",
	"darkgrey",
	"darkkhaki",
	"darkmagenta",
	"darkolivegreen",
	"darkorange",
	"darkorchid",
	"darkred",
	"darksalmon",
	"darkseagreen",
	"darkslateblue",
	"darkslategray",
	"darkslategrey",
	"darkturquoise",
	"darkviolet",
	"deeppink",
	"deepskyblue",
	"dimgray",
	"dimgrey",
	"dodgerblue",
	"firebrick",
	"floralwhite",
	"forestgreen",
	"fuchsia",
	"gainsboro",
	"ghostwhite",
	"gold",
	"goldenrod",
	"gray",
	"green",
	"greenyellow",
	"grey",
	"honeydew",
	"hotpink",
	"indianred",
	"indigo",
	"ivory",
	"khaki",
	"lavender",
	"lavenderblush",
	"lawngreen",
	"lemonchiffon",
	"lightblue",
	"lightcoral",
	"lightcyan",
	"lightgoldenrodyellow",
	"lightgray",
	"lightgreen",
	"lightgrey",
	"lightpink",
	"lightsalmon",
	"lightseagreen",
	"lightskyblue",
	"lightslategray",
	"lightslategrey",
	"lightsteelblue",
	"lightyellow",
	"lime",
	"limegreen",
	"linen",
	"magenta",
	"maroon",
	"mediumaquamarine",
	"mediumblue",
	"mediumorchid",
	"mediumpurple",
	"mediumseagreen",
	"mediumslateblue",
	"mediumspringgreen",
	"mediumturquoise",
	"mediumvioletred",
	"midnightblue",
	"mintcream",
	"mistyrose",
	"moccasin",
	"navajowhite",
	"navy",
	"oldlace",
	"olive",
	"olivedrab",
	"orange",
	"orangered",
	"orchid",
	"palegoldenrod",
	"palegreen",
	"paleturquoise",
	"palevioletred",
	"papayawhip",
	"peachpuff",
	"peru",
	"pink",
	"plum",
	"powderblue",
	"purple",
	"rebeccapurple",
	"red",
	"rosybrown",
	"royalblue",
	"saddlebrown",
	"salmon",
	"sandybrown",
	"seagreen",
	"seashell",
	"sienna",
	"silver",
	"skyblue",
	"slateblue",
	"slategray",
	"slategrey",
	"snow",
	"springgreen",
	"steelblue",
	"tan",
	"teal",
	"thistle",
	"tomato",
	"turquoise",
	"violet",
	"wheat",
	"white",
	"whitesmoke",
	"yellow",
	"yellowgreen",
	"transparent",
	"currentcolor",
	"canvas",
	"canvastext",
	"linktext",
	"visitedtext",
	"activetext",
	"buttonface",
	"buttontext",
	"buttonborder",
	"field",
	"fieldtext",
	"highlight",
	"highlighttext",
	"selecteditem",
	"selecteditemtext",
	"mark",
	"marktext",
	"graytext",
	"accentcolor",
	"accentcolortext"
]), U = /^(rgba?|hsla?|hwb|color|(ok)?(lab|lch)|light-dark|color-mix)\(/i;
function S(e) {
	return e.charCodeAt(0) === 35 || U.test(e) || _.has(e.toLowerCase());
}
var A = [
	"calc",
	"min",
	"max",
	"clamp",
	"mod",
	"rem",
	"sin",
	"cos",
	"tan",
	"asin",
	"acos",
	"atan",
	"atan2",
	"pow",
	"sqrt",
	"hypot",
	"log",
	"exp",
	"round"
];
function b(e) {
	return e.indexOf("(") !== -1 && A.some((t) => e.includes(`${t}(`));
}
function oe(e) {
	if (!A.some((n) => e.includes(n))) return e;
	let t = "", r = [], s = null, m = null;
	for (let n = 0; n < e.length; n++) {
		let a = e.charCodeAt(n);
		if (a >= 48 && a <= 57 || s !== null && (a === 37 || a >= 97 && a <= 122 || a >= 65 && a <= 90) ? s = n : (m = s, s = null), a === 40) {
			t += e[n];
			let i = n;
			for (let p = n - 1; p >= 0; p--) {
				let c = e.charCodeAt(p);
				if (c >= 48 && c <= 57) i = p;
				else if (c >= 97 && c <= 122) i = p;
				else break;
			}
			let o = e.slice(i, n);
			if (A.includes(o)) {
				r.unshift(!0);
				continue;
			} else if (r[0] && o === "") {
				r.unshift(!0);
				continue;
			}
			r.unshift(!1);
			continue;
		} else if (a === 41) t += e[n], r.shift();
		else if (a === 44 && r[0]) {
			t += ", ";
			continue;
		} else {
			if (a === 32 && r[0] && t.charCodeAt(t.length - 1) === 32) continue;
			if ((a === 43 || a === 42 || a === 47 || a === 45) && r[0]) {
				let i = t.trimEnd(), o = i.charCodeAt(i.length - 1), p = i.charCodeAt(i.length - 2), c = e.charCodeAt(n + 1);
				if ((o === 101 || o === 69) && p >= 48 && p <= 57) {
					t += e[n];
					continue;
				} else if (o === 43 || o === 42 || o === 47 || o === 45) {
					t += e[n];
					continue;
				} else if (o === 40 || o === 44) {
					t += e[n];
					continue;
				} else e.charCodeAt(n - 1) === 32 ? t += `${e[n]} ` : o >= 48 && o <= 57 || c >= 48 && c <= 57 || o === 41 || c === 40 || c === 43 || c === 42 || c === 47 || c === 45 || m !== null && m === n - 1 ? t += ` ${e[n]} ` : t += e[n];
			} else t += e[n];
		}
	}
	return t;
}
var E = new Uint8Array(256);
function d(e, t) {
	let r = 0, s = [], m = 0, n = e.length, a = t.charCodeAt(0);
	for (let i = 0; i < n; i++) {
		let o = e.charCodeAt(i);
		if (r === 0 && o === a) {
			s.push(e.slice(m, i)), m = i + 1;
			continue;
		}
		switch (o) {
			case 92:
				i += 1;
				break;
			case 39:
			case 34:
				for (; ++i < n;) {
					let p = e.charCodeAt(i);
					if (p === 92) {
						i += 1;
						continue;
					}
					if (p === o) break;
				}
				break;
			case 40:
				E[r] = 41, r++;
				break;
			case 91:
				E[r] = 93, r++;
				break;
			case 123:
				E[r] = 125, r++;
				break;
			case 93:
			case 125:
			case 41:
				r > 0 && o === E[r - 1] && r--;
				break;
		}
	}
	return s.push(e.slice(m)), s;
}
var P = {
	color: S,
	length: y,
	percentage: C,
	ratio: G,
	number: v,
	integer: u,
	url: R,
	position: K,
	"bg-size": Y$1,
	"line-width": T,
	image: F$1,
	"family-name": M$1,
	"generic-name": H$1,
	"absolute-size": $$1,
	"relative-size": W$1,
	angle: X$1,
	vector: te$1
};
function me(e, t) {
	if (e.startsWith("var(")) return null;
	for (let r of t) if (P[r]?.(e)) return r;
	return null;
}
var z$1 = /^url\(.*\)$/;
function R(e) {
	return z$1.test(e);
}
function T(e) {
	return d(e, " ").every((t) => y(t) || v(t) || t === "thin" || t === "medium" || t === "thick");
}
var D$1 = /^(?:element|image|cross-fade|image-set)\(/, I = /^(repeating-)?(conic|linear|radial)-gradient\(/;
function F$1(e) {
	let t = 0;
	for (let r of d(e, ",")) if (!r.startsWith("var(")) {
		if (R(r)) {
			t += 1;
			continue;
		}
		if (I.test(r)) {
			t += 1;
			continue;
		}
		if (D$1.test(r)) {
			t += 1;
			continue;
		}
		return !1;
	}
	return t > 0;
}
function H$1(e) {
	return e === "serif" || e === "sans-serif" || e === "monospace" || e === "cursive" || e === "fantasy" || e === "system-ui" || e === "ui-serif" || e === "ui-sans-serif" || e === "ui-monospace" || e === "ui-rounded" || e === "math" || e === "emoji" || e === "fangsong";
}
function M$1(e) {
	let t = 0;
	for (let r of d(e, ",")) {
		let s = r.charCodeAt(0);
		if (s >= 48 && s <= 57) return !1;
		r.startsWith("var(") || (t += 1);
	}
	return t > 0;
}
function $$1(e) {
	return e === "xx-small" || e === "x-small" || e === "small" || e === "medium" || e === "large" || e === "x-large" || e === "xx-large" || e === "xxx-large";
}
function W$1(e) {
	return e === "larger" || e === "smaller";
}
var x = /[+-]?\d*\.?\d+(?:[eE][+-]?\d+)?/, B = /* @__PURE__ */ new RegExp(`^${x.source}$`);
function v(e) {
	return B.test(e) || b(e);
}
var q$1 = /* @__PURE__ */ new RegExp(`^${x.source}%$`);
function C(e) {
	return q$1.test(e) || b(e);
}
var V = /* @__PURE__ */ new RegExp(`^${x.source}s*/s*${x.source}$`);
function G(e) {
	return V.test(e) || b(e);
}
var Z = [
	"cm",
	"mm",
	"Q",
	"in",
	"pc",
	"pt",
	"px",
	"em",
	"ex",
	"ch",
	"rem",
	"lh",
	"rlh",
	"vw",
	"vh",
	"vmin",
	"vmax",
	"vb",
	"vi",
	"svw",
	"svh",
	"lvw",
	"lvh",
	"dvw",
	"dvh",
	"cqw",
	"cqh",
	"cqi",
	"cqb",
	"cqmin",
	"cqmax"
], j = /* @__PURE__ */ new RegExp(`^${x.source}(${Z.join("|")})$`);
function y(e) {
	return j.test(e) || b(e);
}
function K(e) {
	let t = 0;
	for (let r of d(e, " ")) {
		if (r === "center" || r === "top" || r === "right" || r === "bottom" || r === "left") {
			t += 1;
			continue;
		}
		if (!r.startsWith("var(")) {
			if (y(r) || C(r)) {
				t += 1;
				continue;
			}
			return !1;
		}
	}
	return t > 0;
}
function Y$1(e) {
	let t = 0;
	for (let r of d(e, ",")) {
		if (r === "cover" || r === "contain") {
			t += 1;
			continue;
		}
		let s = d(r, " ");
		if (s.length !== 1 && s.length !== 2) return !1;
		if (s.every((m) => m === "auto" || y(m) || C(m))) {
			t += 1;
			continue;
		}
	}
	return t > 0;
}
var Q$1 = [
	"deg",
	"rad",
	"grad",
	"turn"
], J = /* @__PURE__ */ new RegExp(`^${x.source}(${Q$1.join("|")})$`);
function X$1(e) {
	return J.test(e);
}
var ee$1 = /* @__PURE__ */ new RegExp(`^${x.source} +${x.source} +${x.source}$`);
function te$1(e) {
	return ee$1.test(e);
}
function u(e) {
	let t = Number(e);
	return Number.isInteger(t) && t >= 0 && String(t) === String(e);
}
function pe(e) {
	let t = Number(e);
	return Number.isInteger(t) && t > 0 && String(t) === String(e);
}
function ge(e) {
	return N(e, .25);
}
function ue(e) {
	return N(e, .25);
}
function N(e, t) {
	let r = Number(e);
	return r >= 0 && r % t === 0 && String(r) === String(e);
}
function h(e) {
	return { __BARE_VALUE__: e };
}
var g = h((e) => {
	if (u(e.value)) return e.value;
}), l$2 = h((e) => {
	if (u(e.value)) return `${e.value}%`;
}), f = h((e) => {
	if (u(e.value)) return `${e.value}px`;
}), O = h((e) => {
	if (u(e.value)) return `${e.value}ms`;
}), w = h((e) => {
	if (u(e.value)) return `${e.value}deg`;
}), re = h((e) => {
	if (e.fraction === null) return;
	let [t, r] = d(e.fraction, "/");
	if (!(!u(t) || !u(r))) return e.fraction;
}), L = h((e) => {
	if (u(Number(e.value))) return `repeat(${e.value}, minmax(0, 1fr))`;
}), be = {
	accentColor: ({ theme: e }) => e("colors"),
	animation: {
		none: "none",
		spin: "spin 1s linear infinite",
		ping: "ping 1s cubic-bezier(0, 0, 0.2, 1) infinite",
		pulse: "pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite",
		bounce: "bounce 1s infinite"
	},
	aria: {
		busy: "busy=\"true\"",
		checked: "checked=\"true\"",
		disabled: "disabled=\"true\"",
		expanded: "expanded=\"true\"",
		hidden: "hidden=\"true\"",
		pressed: "pressed=\"true\"",
		readonly: "readonly=\"true\"",
		required: "required=\"true\"",
		selected: "selected=\"true\""
	},
	aspectRatio: {
		auto: "auto",
		square: "1 / 1",
		video: "16 / 9",
		...re
	},
	backdropBlur: ({ theme: e }) => e("blur"),
	backdropBrightness: ({ theme: e }) => ({
		...e("brightness"),
		...l$2
	}),
	backdropContrast: ({ theme: e }) => ({
		...e("contrast"),
		...l$2
	}),
	backdropGrayscale: ({ theme: e }) => ({
		...e("grayscale"),
		...l$2
	}),
	backdropHueRotate: ({ theme: e }) => ({
		...e("hueRotate"),
		...w
	}),
	backdropInvert: ({ theme: e }) => ({
		...e("invert"),
		...l$2
	}),
	backdropOpacity: ({ theme: e }) => ({
		...e("opacity"),
		...l$2
	}),
	backdropSaturate: ({ theme: e }) => ({
		...e("saturate"),
		...l$2
	}),
	backdropSepia: ({ theme: e }) => ({
		...e("sepia"),
		...l$2
	}),
	backgroundColor: ({ theme: e }) => e("colors"),
	backgroundImage: {
		none: "none",
		"gradient-to-t": "linear-gradient(to top, var(--tw-gradient-stops))",
		"gradient-to-tr": "linear-gradient(to top right, var(--tw-gradient-stops))",
		"gradient-to-r": "linear-gradient(to right, var(--tw-gradient-stops))",
		"gradient-to-br": "linear-gradient(to bottom right, var(--tw-gradient-stops))",
		"gradient-to-b": "linear-gradient(to bottom, var(--tw-gradient-stops))",
		"gradient-to-bl": "linear-gradient(to bottom left, var(--tw-gradient-stops))",
		"gradient-to-l": "linear-gradient(to left, var(--tw-gradient-stops))",
		"gradient-to-tl": "linear-gradient(to top left, var(--tw-gradient-stops))"
	},
	backgroundOpacity: ({ theme: e }) => e("opacity"),
	backgroundPosition: {
		bottom: "bottom",
		center: "center",
		left: "left",
		"left-bottom": "left bottom",
		"left-top": "left top",
		right: "right",
		"right-bottom": "right bottom",
		"right-top": "right top",
		top: "top"
	},
	backgroundSize: {
		auto: "auto",
		cover: "cover",
		contain: "contain"
	},
	blur: {
		0: "0",
		none: "",
		sm: "4px",
		DEFAULT: "8px",
		md: "12px",
		lg: "16px",
		xl: "24px",
		"2xl": "40px",
		"3xl": "64px"
	},
	borderColor: ({ theme: e }) => ({
		DEFAULT: "currentcolor",
		...e("colors")
	}),
	borderOpacity: ({ theme: e }) => e("opacity"),
	borderRadius: {
		none: "0px",
		sm: "0.125rem",
		DEFAULT: "0.25rem",
		md: "0.375rem",
		lg: "0.5rem",
		xl: "0.75rem",
		"2xl": "1rem",
		"3xl": "1.5rem",
		full: "9999px"
	},
	borderSpacing: ({ theme: e }) => e("spacing"),
	borderWidth: {
		DEFAULT: "1px",
		0: "0px",
		2: "2px",
		4: "4px",
		8: "8px",
		...f
	},
	boxShadow: {
		sm: "0 1px 2px 0 rgb(0 0 0 / 0.05)",
		DEFAULT: "0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1)",
		md: "0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1)",
		lg: "0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)",
		xl: "0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1)",
		"2xl": "0 25px 50px -12px rgb(0 0 0 / 0.25)",
		inner: "inset 0 2px 4px 0 rgb(0 0 0 / 0.05)",
		none: "none"
	},
	boxShadowColor: ({ theme: e }) => e("colors"),
	brightness: {
		0: "0",
		50: ".5",
		75: ".75",
		90: ".9",
		95: ".95",
		100: "1",
		105: "1.05",
		110: "1.1",
		125: "1.25",
		150: "1.5",
		200: "2",
		...l$2
	},
	caretColor: ({ theme: e }) => e("colors"),
	colors: () => ({ ...l }),
	columns: {
		auto: "auto",
		1: "1",
		2: "2",
		3: "3",
		4: "4",
		5: "5",
		6: "6",
		7: "7",
		8: "8",
		9: "9",
		10: "10",
		11: "11",
		12: "12",
		"3xs": "16rem",
		"2xs": "18rem",
		xs: "20rem",
		sm: "24rem",
		md: "28rem",
		lg: "32rem",
		xl: "36rem",
		"2xl": "42rem",
		"3xl": "48rem",
		"4xl": "56rem",
		"5xl": "64rem",
		"6xl": "72rem",
		"7xl": "80rem",
		...g
	},
	container: {},
	content: { none: "none" },
	contrast: {
		0: "0",
		50: ".5",
		75: ".75",
		100: "1",
		125: "1.25",
		150: "1.5",
		200: "2",
		...l$2
	},
	cursor: {
		auto: "auto",
		default: "default",
		pointer: "pointer",
		wait: "wait",
		text: "text",
		move: "move",
		help: "help",
		"not-allowed": "not-allowed",
		none: "none",
		"context-menu": "context-menu",
		progress: "progress",
		cell: "cell",
		crosshair: "crosshair",
		"vertical-text": "vertical-text",
		alias: "alias",
		copy: "copy",
		"no-drop": "no-drop",
		grab: "grab",
		grabbing: "grabbing",
		"all-scroll": "all-scroll",
		"col-resize": "col-resize",
		"row-resize": "row-resize",
		"n-resize": "n-resize",
		"e-resize": "e-resize",
		"s-resize": "s-resize",
		"w-resize": "w-resize",
		"ne-resize": "ne-resize",
		"nw-resize": "nw-resize",
		"se-resize": "se-resize",
		"sw-resize": "sw-resize",
		"ew-resize": "ew-resize",
		"ns-resize": "ns-resize",
		"nesw-resize": "nesw-resize",
		"nwse-resize": "nwse-resize",
		"zoom-in": "zoom-in",
		"zoom-out": "zoom-out"
	},
	divideColor: ({ theme: e }) => e("borderColor"),
	divideOpacity: ({ theme: e }) => e("borderOpacity"),
	divideWidth: ({ theme: e }) => ({
		...e("borderWidth"),
		...f
	}),
	dropShadow: {
		sm: "0 1px 1px rgb(0 0 0 / 0.05)",
		DEFAULT: ["0 1px 2px rgb(0 0 0 / 0.1)", "0 1px 1px rgb(0 0 0 / 0.06)"],
		md: ["0 4px 3px rgb(0 0 0 / 0.07)", "0 2px 2px rgb(0 0 0 / 0.06)"],
		lg: ["0 10px 8px rgb(0 0 0 / 0.04)", "0 4px 3px rgb(0 0 0 / 0.1)"],
		xl: ["0 20px 13px rgb(0 0 0 / 0.03)", "0 8px 5px rgb(0 0 0 / 0.08)"],
		"2xl": "0 25px 25px rgb(0 0 0 / 0.15)",
		none: "0 0 #0000"
	},
	fill: ({ theme: e }) => e("colors"),
	flex: {
		1: "1 1 0%",
		auto: "1 1 auto",
		initial: "0 1 auto",
		none: "none"
	},
	flexBasis: ({ theme: e }) => ({
		auto: "auto",
		"1/2": "50%",
		"1/3": "33.333333%",
		"2/3": "66.666667%",
		"1/4": "25%",
		"2/4": "50%",
		"3/4": "75%",
		"1/5": "20%",
		"2/5": "40%",
		"3/5": "60%",
		"4/5": "80%",
		"1/6": "16.666667%",
		"2/6": "33.333333%",
		"3/6": "50%",
		"4/6": "66.666667%",
		"5/6": "83.333333%",
		"1/12": "8.333333%",
		"2/12": "16.666667%",
		"3/12": "25%",
		"4/12": "33.333333%",
		"5/12": "41.666667%",
		"6/12": "50%",
		"7/12": "58.333333%",
		"8/12": "66.666667%",
		"9/12": "75%",
		"10/12": "83.333333%",
		"11/12": "91.666667%",
		full: "100%",
		...e("spacing")
	}),
	flexGrow: {
		0: "0",
		DEFAULT: "1",
		...g
	},
	flexShrink: {
		0: "0",
		DEFAULT: "1",
		...g
	},
	fontFamily: {
		sans: [
			"ui-sans-serif",
			"system-ui",
			"sans-serif",
			"\"Apple Color Emoji\"",
			"\"Segoe UI Emoji\"",
			"\"Segoe UI Symbol\"",
			"\"Noto Color Emoji\""
		],
		serif: [
			"ui-serif",
			"Georgia",
			"Cambria",
			"\"Times New Roman\"",
			"Times",
			"serif"
		],
		mono: [
			"ui-monospace",
			"SFMono-Regular",
			"Menlo",
			"Monaco",
			"Consolas",
			"\"Liberation Mono\"",
			"\"Courier New\"",
			"monospace"
		]
	},
	fontSize: {
		xs: ["0.75rem", { lineHeight: "1rem" }],
		sm: ["0.875rem", { lineHeight: "1.25rem" }],
		base: ["1rem", { lineHeight: "1.5rem" }],
		lg: ["1.125rem", { lineHeight: "1.75rem" }],
		xl: ["1.25rem", { lineHeight: "1.75rem" }],
		"2xl": ["1.5rem", { lineHeight: "2rem" }],
		"3xl": ["1.875rem", { lineHeight: "2.25rem" }],
		"4xl": ["2.25rem", { lineHeight: "2.5rem" }],
		"5xl": ["3rem", { lineHeight: "1" }],
		"6xl": ["3.75rem", { lineHeight: "1" }],
		"7xl": ["4.5rem", { lineHeight: "1" }],
		"8xl": ["6rem", { lineHeight: "1" }],
		"9xl": ["8rem", { lineHeight: "1" }]
	},
	fontWeight: {
		thin: "100",
		extralight: "200",
		light: "300",
		normal: "400",
		medium: "500",
		semibold: "600",
		bold: "700",
		extrabold: "800",
		black: "900"
	},
	gap: ({ theme: e }) => e("spacing"),
	gradientColorStops: ({ theme: e }) => e("colors"),
	gradientColorStopPositions: {
		"0%": "0%",
		"5%": "5%",
		"10%": "10%",
		"15%": "15%",
		"20%": "20%",
		"25%": "25%",
		"30%": "30%",
		"35%": "35%",
		"40%": "40%",
		"45%": "45%",
		"50%": "50%",
		"55%": "55%",
		"60%": "60%",
		"65%": "65%",
		"70%": "70%",
		"75%": "75%",
		"80%": "80%",
		"85%": "85%",
		"90%": "90%",
		"95%": "95%",
		"100%": "100%",
		...l$2
	},
	grayscale: {
		0: "0",
		DEFAULT: "100%",
		...l$2
	},
	gridAutoColumns: {
		auto: "auto",
		min: "min-content",
		max: "max-content",
		fr: "minmax(0, 1fr)"
	},
	gridAutoRows: {
		auto: "auto",
		min: "min-content",
		max: "max-content",
		fr: "minmax(0, 1fr)"
	},
	gridColumn: {
		auto: "auto",
		"span-1": "span 1 / span 1",
		"span-2": "span 2 / span 2",
		"span-3": "span 3 / span 3",
		"span-4": "span 4 / span 4",
		"span-5": "span 5 / span 5",
		"span-6": "span 6 / span 6",
		"span-7": "span 7 / span 7",
		"span-8": "span 8 / span 8",
		"span-9": "span 9 / span 9",
		"span-10": "span 10 / span 10",
		"span-11": "span 11 / span 11",
		"span-12": "span 12 / span 12",
		"span-full": "1 / -1"
	},
	gridColumnEnd: {
		auto: "auto",
		1: "1",
		2: "2",
		3: "3",
		4: "4",
		5: "5",
		6: "6",
		7: "7",
		8: "8",
		9: "9",
		10: "10",
		11: "11",
		12: "12",
		13: "13",
		...g
	},
	gridColumnStart: {
		auto: "auto",
		1: "1",
		2: "2",
		3: "3",
		4: "4",
		5: "5",
		6: "6",
		7: "7",
		8: "8",
		9: "9",
		10: "10",
		11: "11",
		12: "12",
		13: "13",
		...g
	},
	gridRow: {
		auto: "auto",
		"span-1": "span 1 / span 1",
		"span-2": "span 2 / span 2",
		"span-3": "span 3 / span 3",
		"span-4": "span 4 / span 4",
		"span-5": "span 5 / span 5",
		"span-6": "span 6 / span 6",
		"span-7": "span 7 / span 7",
		"span-8": "span 8 / span 8",
		"span-9": "span 9 / span 9",
		"span-10": "span 10 / span 10",
		"span-11": "span 11 / span 11",
		"span-12": "span 12 / span 12",
		"span-full": "1 / -1"
	},
	gridRowEnd: {
		auto: "auto",
		1: "1",
		2: "2",
		3: "3",
		4: "4",
		5: "5",
		6: "6",
		7: "7",
		8: "8",
		9: "9",
		10: "10",
		11: "11",
		12: "12",
		13: "13",
		...g
	},
	gridRowStart: {
		auto: "auto",
		1: "1",
		2: "2",
		3: "3",
		4: "4",
		5: "5",
		6: "6",
		7: "7",
		8: "8",
		9: "9",
		10: "10",
		11: "11",
		12: "12",
		13: "13",
		...g
	},
	gridTemplateColumns: {
		none: "none",
		subgrid: "subgrid",
		1: "repeat(1, minmax(0, 1fr))",
		2: "repeat(2, minmax(0, 1fr))",
		3: "repeat(3, minmax(0, 1fr))",
		4: "repeat(4, minmax(0, 1fr))",
		5: "repeat(5, minmax(0, 1fr))",
		6: "repeat(6, minmax(0, 1fr))",
		7: "repeat(7, minmax(0, 1fr))",
		8: "repeat(8, minmax(0, 1fr))",
		9: "repeat(9, minmax(0, 1fr))",
		10: "repeat(10, minmax(0, 1fr))",
		11: "repeat(11, minmax(0, 1fr))",
		12: "repeat(12, minmax(0, 1fr))",
		...L
	},
	gridTemplateRows: {
		none: "none",
		subgrid: "subgrid",
		1: "repeat(1, minmax(0, 1fr))",
		2: "repeat(2, minmax(0, 1fr))",
		3: "repeat(3, minmax(0, 1fr))",
		4: "repeat(4, minmax(0, 1fr))",
		5: "repeat(5, minmax(0, 1fr))",
		6: "repeat(6, minmax(0, 1fr))",
		7: "repeat(7, minmax(0, 1fr))",
		8: "repeat(8, minmax(0, 1fr))",
		9: "repeat(9, minmax(0, 1fr))",
		10: "repeat(10, minmax(0, 1fr))",
		11: "repeat(11, minmax(0, 1fr))",
		12: "repeat(12, minmax(0, 1fr))",
		...L
	},
	height: ({ theme: e }) => ({
		auto: "auto",
		"1/2": "50%",
		"1/3": "33.333333%",
		"2/3": "66.666667%",
		"1/4": "25%",
		"2/4": "50%",
		"3/4": "75%",
		"1/5": "20%",
		"2/5": "40%",
		"3/5": "60%",
		"4/5": "80%",
		"1/6": "16.666667%",
		"2/6": "33.333333%",
		"3/6": "50%",
		"4/6": "66.666667%",
		"5/6": "83.333333%",
		full: "100%",
		screen: "100vh",
		svh: "100svh",
		lvh: "100lvh",
		dvh: "100dvh",
		min: "min-content",
		max: "max-content",
		fit: "fit-content",
		...e("spacing")
	}),
	hueRotate: {
		0: "0deg",
		15: "15deg",
		30: "30deg",
		60: "60deg",
		90: "90deg",
		180: "180deg",
		...w
	},
	inset: ({ theme: e }) => ({
		auto: "auto",
		"1/2": "50%",
		"1/3": "33.333333%",
		"2/3": "66.666667%",
		"1/4": "25%",
		"2/4": "50%",
		"3/4": "75%",
		full: "100%",
		...e("spacing")
	}),
	invert: {
		0: "0",
		DEFAULT: "100%",
		...l$2
	},
	keyframes: {
		spin: { to: { transform: "rotate(360deg)" } },
		ping: { "75%, 100%": {
			transform: "scale(2)",
			opacity: "0"
		} },
		pulse: { "50%": { opacity: ".5" } },
		bounce: {
			"0%, 100%": {
				transform: "translateY(-25%)",
				animationTimingFunction: "cubic-bezier(0.8,0,1,1)"
			},
			"50%": {
				transform: "none",
				animationTimingFunction: "cubic-bezier(0,0,0.2,1)"
			}
		}
	},
	letterSpacing: {
		tighter: "-0.05em",
		tight: "-0.025em",
		normal: "0em",
		wide: "0.025em",
		wider: "0.05em",
		widest: "0.1em"
	},
	lineHeight: {
		none: "1",
		tight: "1.25",
		snug: "1.375",
		normal: "1.5",
		relaxed: "1.625",
		loose: "2",
		3: ".75rem",
		4: "1rem",
		5: "1.25rem",
		6: "1.5rem",
		7: "1.75rem",
		8: "2rem",
		9: "2.25rem",
		10: "2.5rem"
	},
	listStyleType: {
		none: "none",
		disc: "disc",
		decimal: "decimal"
	},
	listStyleImage: { none: "none" },
	margin: ({ theme: e }) => ({
		auto: "auto",
		...e("spacing")
	}),
	lineClamp: {
		1: "1",
		2: "2",
		3: "3",
		4: "4",
		5: "5",
		6: "6",
		...g
	},
	maxHeight: ({ theme: e }) => ({
		none: "none",
		full: "100%",
		screen: "100vh",
		svh: "100svh",
		lvh: "100lvh",
		dvh: "100dvh",
		min: "min-content",
		max: "max-content",
		fit: "fit-content",
		...e("spacing")
	}),
	maxWidth: ({ theme: e }) => ({
		none: "none",
		xs: "20rem",
		sm: "24rem",
		md: "28rem",
		lg: "32rem",
		xl: "36rem",
		"2xl": "42rem",
		"3xl": "48rem",
		"4xl": "56rem",
		"5xl": "64rem",
		"6xl": "72rem",
		"7xl": "80rem",
		full: "100%",
		min: "min-content",
		max: "max-content",
		fit: "fit-content",
		prose: "65ch",
		...e("spacing")
	}),
	minHeight: ({ theme: e }) => ({
		full: "100%",
		screen: "100vh",
		svh: "100svh",
		lvh: "100lvh",
		dvh: "100dvh",
		min: "min-content",
		max: "max-content",
		fit: "fit-content",
		...e("spacing")
	}),
	minWidth: ({ theme: e }) => ({
		full: "100%",
		min: "min-content",
		max: "max-content",
		fit: "fit-content",
		...e("spacing")
	}),
	objectPosition: {
		bottom: "bottom",
		center: "center",
		left: "left",
		"left-bottom": "left bottom",
		"left-top": "left top",
		right: "right",
		"right-bottom": "right bottom",
		"right-top": "right top",
		top: "top"
	},
	opacity: {
		0: "0",
		5: "0.05",
		10: "0.1",
		15: "0.15",
		20: "0.2",
		25: "0.25",
		30: "0.3",
		35: "0.35",
		40: "0.4",
		45: "0.45",
		50: "0.5",
		55: "0.55",
		60: "0.6",
		65: "0.65",
		70: "0.7",
		75: "0.75",
		80: "0.8",
		85: "0.85",
		90: "0.9",
		95: "0.95",
		100: "1",
		...l$2
	},
	order: {
		first: "-9999",
		last: "9999",
		none: "0",
		1: "1",
		2: "2",
		3: "3",
		4: "4",
		5: "5",
		6: "6",
		7: "7",
		8: "8",
		9: "9",
		10: "10",
		11: "11",
		12: "12",
		...g
	},
	outlineColor: ({ theme: e }) => e("colors"),
	outlineOffset: {
		0: "0px",
		1: "1px",
		2: "2px",
		4: "4px",
		8: "8px",
		...f
	},
	outlineWidth: {
		0: "0px",
		1: "1px",
		2: "2px",
		4: "4px",
		8: "8px",
		...f
	},
	padding: ({ theme: e }) => e("spacing"),
	placeholderColor: ({ theme: e }) => e("colors"),
	placeholderOpacity: ({ theme: e }) => e("opacity"),
	ringColor: ({ theme: e }) => ({
		DEFAULT: "currentcolor",
		...e("colors")
	}),
	ringOffsetColor: ({ theme: e }) => e("colors"),
	ringOffsetWidth: {
		0: "0px",
		1: "1px",
		2: "2px",
		4: "4px",
		8: "8px",
		...f
	},
	ringOpacity: ({ theme: e }) => ({
		DEFAULT: "0.5",
		...e("opacity")
	}),
	ringWidth: {
		DEFAULT: "3px",
		0: "0px",
		1: "1px",
		2: "2px",
		4: "4px",
		8: "8px",
		...f
	},
	rotate: {
		0: "0deg",
		1: "1deg",
		2: "2deg",
		3: "3deg",
		6: "6deg",
		12: "12deg",
		45: "45deg",
		90: "90deg",
		180: "180deg",
		...w
	},
	saturate: {
		0: "0",
		50: ".5",
		100: "1",
		150: "1.5",
		200: "2",
		...l$2
	},
	scale: {
		0: "0",
		50: ".5",
		75: ".75",
		90: ".9",
		95: ".95",
		100: "1",
		105: "1.05",
		110: "1.1",
		125: "1.25",
		150: "1.5",
		...l$2
	},
	screens: {
		sm: "40rem",
		md: "48rem",
		lg: "64rem",
		xl: "80rem",
		"2xl": "96rem"
	},
	scrollMargin: ({ theme: e }) => e("spacing"),
	scrollPadding: ({ theme: e }) => e("spacing"),
	sepia: {
		0: "0",
		DEFAULT: "100%",
		...l$2
	},
	skew: {
		0: "0deg",
		1: "1deg",
		2: "2deg",
		3: "3deg",
		6: "6deg",
		12: "12deg",
		...w
	},
	space: ({ theme: e }) => e("spacing"),
	spacing: {
		px: "1px",
		0: "0px",
		.5: "0.125rem",
		1: "0.25rem",
		1.5: "0.375rem",
		2: "0.5rem",
		2.5: "0.625rem",
		3: "0.75rem",
		3.5: "0.875rem",
		4: "1rem",
		5: "1.25rem",
		6: "1.5rem",
		7: "1.75rem",
		8: "2rem",
		9: "2.25rem",
		10: "2.5rem",
		11: "2.75rem",
		12: "3rem",
		14: "3.5rem",
		16: "4rem",
		20: "5rem",
		24: "6rem",
		28: "7rem",
		32: "8rem",
		36: "9rem",
		40: "10rem",
		44: "11rem",
		48: "12rem",
		52: "13rem",
		56: "14rem",
		60: "15rem",
		64: "16rem",
		72: "18rem",
		80: "20rem",
		96: "24rem"
	},
	stroke: ({ theme: e }) => ({
		none: "none",
		...e("colors")
	}),
	strokeWidth: {
		0: "0",
		1: "1",
		2: "2",
		...g
	},
	supports: {},
	data: {},
	textColor: ({ theme: e }) => e("colors"),
	textDecorationColor: ({ theme: e }) => e("colors"),
	textDecorationThickness: {
		auto: "auto",
		"from-font": "from-font",
		0: "0px",
		1: "1px",
		2: "2px",
		4: "4px",
		8: "8px",
		...f
	},
	textIndent: ({ theme: e }) => e("spacing"),
	textOpacity: ({ theme: e }) => e("opacity"),
	textUnderlineOffset: {
		auto: "auto",
		0: "0px",
		1: "1px",
		2: "2px",
		4: "4px",
		8: "8px",
		...f
	},
	transformOrigin: {
		center: "center",
		top: "top",
		"top-right": "top right",
		right: "right",
		"bottom-right": "bottom right",
		bottom: "bottom",
		"bottom-left": "bottom left",
		left: "left",
		"top-left": "top left"
	},
	transitionDelay: {
		0: "0s",
		75: "75ms",
		100: "100ms",
		150: "150ms",
		200: "200ms",
		300: "300ms",
		500: "500ms",
		700: "700ms",
		1e3: "1000ms",
		...O
	},
	transitionDuration: {
		DEFAULT: "150ms",
		0: "0s",
		75: "75ms",
		100: "100ms",
		150: "150ms",
		200: "200ms",
		300: "300ms",
		500: "500ms",
		700: "700ms",
		1e3: "1000ms",
		...O
	},
	transitionProperty: {
		none: "none",
		all: "all",
		DEFAULT: "color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter",
		colors: "color, background-color, border-color, outline-color, text-decoration-color, fill, stroke",
		opacity: "opacity",
		shadow: "box-shadow",
		transform: "transform"
	},
	transitionTimingFunction: {
		DEFAULT: "cubic-bezier(0.4, 0, 0.2, 1)",
		linear: "linear",
		in: "cubic-bezier(0.4, 0, 1, 1)",
		out: "cubic-bezier(0, 0, 0.2, 1)",
		"in-out": "cubic-bezier(0.4, 0, 0.2, 1)"
	},
	translate: ({ theme: e }) => ({
		"1/2": "50%",
		"1/3": "33.333333%",
		"2/3": "66.666667%",
		"1/4": "25%",
		"2/4": "50%",
		"3/4": "75%",
		full: "100%",
		...e("spacing")
	}),
	size: ({ theme: e }) => ({
		auto: "auto",
		"1/2": "50%",
		"1/3": "33.333333%",
		"2/3": "66.666667%",
		"1/4": "25%",
		"2/4": "50%",
		"3/4": "75%",
		"1/5": "20%",
		"2/5": "40%",
		"3/5": "60%",
		"4/5": "80%",
		"1/6": "16.666667%",
		"2/6": "33.333333%",
		"3/6": "50%",
		"4/6": "66.666667%",
		"5/6": "83.333333%",
		"1/12": "8.333333%",
		"2/12": "16.666667%",
		"3/12": "25%",
		"4/12": "33.333333%",
		"5/12": "41.666667%",
		"6/12": "50%",
		"7/12": "58.333333%",
		"8/12": "66.666667%",
		"9/12": "75%",
		"10/12": "83.333333%",
		"11/12": "91.666667%",
		full: "100%",
		min: "min-content",
		max: "max-content",
		fit: "fit-content",
		...e("spacing")
	}),
	width: ({ theme: e }) => ({
		auto: "auto",
		"1/2": "50%",
		"1/3": "33.333333%",
		"2/3": "66.666667%",
		"1/4": "25%",
		"2/4": "50%",
		"3/4": "75%",
		"1/5": "20%",
		"2/5": "40%",
		"3/5": "60%",
		"4/5": "80%",
		"1/6": "16.666667%",
		"2/6": "33.333333%",
		"3/6": "50%",
		"4/6": "66.666667%",
		"5/6": "83.333333%",
		"1/12": "8.333333%",
		"2/12": "16.666667%",
		"3/12": "25%",
		"4/12": "33.333333%",
		"5/12": "41.666667%",
		"6/12": "50%",
		"7/12": "58.333333%",
		"8/12": "66.666667%",
		"9/12": "75%",
		"10/12": "83.333333%",
		"11/12": "91.666667%",
		full: "100%",
		screen: "100vw",
		svw: "100svw",
		lvw: "100lvw",
		dvw: "100dvw",
		min: "min-content",
		max: "max-content",
		fit: "fit-content",
		...e("spacing")
	}),
	willChange: {
		auto: "auto",
		scroll: "scroll-position",
		contents: "contents",
		transform: "transform"
	},
	zIndex: {
		auto: "auto",
		0: "0",
		10: "10",
		20: "20",
		30: "30",
		40: "40",
		50: "50",
		...g
	}
};

//#endregion
//#region node_modules/tailwindcss/dist/chunk-U5SIPDGO.mjs
var Pt = "4.1.13";
var Ve = 92, Ie = 47, Le = 42, Ot = 34, Kt = 39, ii = 58, ze = 59, ie = 10, Me = 13, Ne = 32, Fe = 9, _t = 123, at = 125, ft = 40, jt = 41, ni = 91, oi = 93, Dt = 45, st = 64, li = 33;
function me$1(r, t) {
	let i = t?.from ? {
		file: t.from,
		code: r
	} : null;
	r[0] === "﻿" && (r = " " + r.slice(1));
	let e = [], n = [], s = [], a = null, p = null, f$1 = "", u$1 = "", g$1 = 0, m;
	for (let d$1 = 0; d$1 < r.length; d$1++) {
		let w$1 = r.charCodeAt(d$1);
		if (!(w$1 === Me && (m = r.charCodeAt(d$1 + 1), m === ie))) if (w$1 === Ve) f$1 === "" && (g$1 = d$1), f$1 += r.slice(d$1, d$1 + 2), d$1 += 1;
		else if (w$1 === Ie && r.charCodeAt(d$1 + 1) === Le) {
			let v$1 = d$1;
			for (let x$1 = d$1 + 2; x$1 < r.length; x$1++) if (m = r.charCodeAt(x$1), m === Ve) x$1 += 1;
			else if (m === Le && r.charCodeAt(x$1 + 1) === Ie) {
				d$1 = x$1 + 1;
				break;
			}
			let y$1 = r.slice(v$1, d$1 + 1);
			if (y$1.charCodeAt(2) === li) {
				let x$1 = We(y$1.slice(2, -2));
				n.push(x$1), i && (x$1.src = [
					i,
					v$1,
					d$1 + 1
				], x$1.dst = [
					i,
					v$1,
					d$1 + 1
				]);
			}
		} else if (w$1 === Kt || w$1 === Ot) {
			let v$1 = Ut(r, d$1, w$1);
			f$1 += r.slice(d$1, v$1 + 1), d$1 = v$1;
		} else {
			if ((w$1 === Ne || w$1 === ie || w$1 === Fe) && (m = r.charCodeAt(d$1 + 1)) && (m === Ne || m === ie || m === Fe || m === Me && (m = r.charCodeAt(d$1 + 2)) && m == ie)) continue;
			if (w$1 === ie) {
				if (f$1.length === 0) continue;
				m = f$1.charCodeAt(f$1.length - 1), m !== Ne && m !== ie && m !== Fe && (f$1 += " ");
			} else if (w$1 === Dt && r.charCodeAt(d$1 + 1) === Dt && f$1.length === 0) {
				let v$1 = "", y$1 = d$1, x$1 = -1;
				for (let k = d$1 + 2; k < r.length; k++) if (m = r.charCodeAt(k), m === Ve) k += 1;
				else if (m === Kt || m === Ot) k = Ut(r, k, m);
				else if (m === Ie && r.charCodeAt(k + 1) === Le) {
					for (let S$1 = k + 2; S$1 < r.length; S$1++) if (m = r.charCodeAt(S$1), m === Ve) S$1 += 1;
					else if (m === Le && r.charCodeAt(S$1 + 1) === Ie) {
						k = S$1 + 1;
						break;
					}
				} else if (x$1 === -1 && m === ii) x$1 = f$1.length + k - y$1;
				else if (m === ze && v$1.length === 0) {
					f$1 += r.slice(y$1, k), d$1 = k;
					break;
				} else if (m === ft) v$1 += ")";
				else if (m === ni) v$1 += "]";
				else if (m === _t) v$1 += "}";
				else if ((m === at || r.length - 1 === k) && v$1.length === 0) {
					d$1 = k - 1, f$1 += r.slice(y$1, k);
					break;
				} else (m === jt || m === oi || m === at) && v$1.length > 0 && r[k] === v$1[v$1.length - 1] && (v$1 = v$1.slice(0, -1));
				let N$1 = ut(f$1, x$1);
				if (!N$1) throw new Error("Invalid custom property, expected a value");
				i && (N$1.src = [
					i,
					y$1,
					d$1
				], N$1.dst = [
					i,
					y$1,
					d$1
				]), a ? a.nodes.push(N$1) : e.push(N$1), f$1 = "";
			} else if (w$1 === ze && f$1.charCodeAt(0) === st) p = Se(f$1), i && (p.src = [
				i,
				g$1,
				d$1
			], p.dst = [
				i,
				g$1,
				d$1
			]), a ? a.nodes.push(p) : e.push(p), f$1 = "", p = null;
			else if (w$1 === ze && u$1[u$1.length - 1] !== ")") {
				let v$1 = ut(f$1);
				if (!v$1) {
					if (f$1.length === 0) continue;
					throw new Error(`Invalid declaration: \`${f$1.trim()}\``);
				}
				i && (v$1.src = [
					i,
					g$1,
					d$1
				], v$1.dst = [
					i,
					g$1,
					d$1
				]), a ? a.nodes.push(v$1) : e.push(v$1), f$1 = "";
			} else if (w$1 === _t && u$1[u$1.length - 1] !== ")") u$1 += "}", p = H(f$1.trim()), i && (p.src = [
				i,
				g$1,
				d$1
			], p.dst = [
				i,
				g$1,
				d$1
			]), a && a.nodes.push(p), s.push(a), a = p, f$1 = "", p = null;
			else if (w$1 === at && u$1[u$1.length - 1] !== ")") {
				if (u$1 === "") throw new Error("Missing opening {");
				if (u$1 = u$1.slice(0, -1), f$1.length > 0) if (f$1.charCodeAt(0) === st) p = Se(f$1), i && (p.src = [
					i,
					g$1,
					d$1
				], p.dst = [
					i,
					g$1,
					d$1
				]), a ? a.nodes.push(p) : e.push(p), f$1 = "", p = null;
				else {
					let y$1 = f$1.indexOf(":");
					if (a) {
						let x$1 = ut(f$1, y$1);
						if (!x$1) throw new Error(`Invalid declaration: \`${f$1.trim()}\``);
						i && (x$1.src = [
							i,
							g$1,
							d$1
						], x$1.dst = [
							i,
							g$1,
							d$1
						]), a.nodes.push(x$1);
					}
				}
				let v$1 = s.pop() ?? null;
				v$1 === null && a && e.push(a), a = v$1, f$1 = "", p = null;
			} else if (w$1 === ft) u$1 += ")", f$1 += "(";
			else if (w$1 === jt) {
				if (u$1[u$1.length - 1] !== ")") throw new Error("Missing opening (");
				u$1 = u$1.slice(0, -1), f$1 += ")";
			} else {
				if (f$1.length === 0 && (w$1 === Ne || w$1 === ie || w$1 === Fe)) continue;
				f$1 === "" && (g$1 = d$1), f$1 += String.fromCharCode(w$1);
			}
		}
	}
	if (f$1.charCodeAt(0) === st) {
		let d$1 = Se(f$1);
		i && (d$1.src = [
			i,
			g$1,
			r.length
		], d$1.dst = [
			i,
			g$1,
			r.length
		]), e.push(d$1);
	}
	if (u$1.length > 0 && a) {
		if (a.kind === "rule") throw new Error(`Missing closing } at ${a.selector}`);
		if (a.kind === "at-rule") throw new Error(`Missing closing } at ${a.name} ${a.params}`);
	}
	return n.length > 0 ? n.concat(e) : e;
}
function Se(r, t = []) {
	let i = r, e = "";
	for (let n = 5; n < r.length; n++) {
		let s = r.charCodeAt(n);
		if (s === Ne || s === ft) {
			i = r.slice(0, n), e = r.slice(n);
			break;
		}
	}
	return z(i.trim(), e.trim(), t);
}
function ut(r, t = r.indexOf(":")) {
	if (t === -1) return null;
	let i = r.indexOf("!important", t + 1);
	return l$1(r.slice(0, t).trim(), r.slice(t + 1, i === -1 ? r.length : i).trim(), i !== -1);
}
function Ut(r, t, i) {
	let e;
	for (let n = t + 1; n < r.length; n++) if (e = r.charCodeAt(n), e === Ve) n += 1;
	else {
		if (e === i) return n;
		if (e === ze && (r.charCodeAt(n + 1) === ie || r.charCodeAt(n + 1) === Me && r.charCodeAt(n + 2) === ie)) throw new Error(`Unterminated string: ${r.slice(t, n + 1) + String.fromCharCode(i)}`);
		if (e === ie || e === Me && r.charCodeAt(n + 1) === ie) throw new Error(`Unterminated string: ${r.slice(t, n) + String.fromCharCode(i)}`);
	}
	return t;
}
function fe(r) {
	if (arguments.length === 0) throw new TypeError("`CSS.escape` requires an argument.");
	let t = String(r), i = t.length, e = -1, n, s = "", a = t.charCodeAt(0);
	if (i === 1 && a === 45) return "\\" + t;
	for (; ++e < i;) {
		if (n = t.charCodeAt(e), n === 0) {
			s += "�";
			continue;
		}
		if (n >= 1 && n <= 31 || n === 127 || e === 0 && n >= 48 && n <= 57 || e === 1 && n >= 48 && n <= 57 && a === 45) {
			s += "\\" + n.toString(16) + " ";
			continue;
		}
		if (n >= 128 || n === 45 || n === 95 || n >= 48 && n <= 57 || n >= 65 && n <= 90 || n >= 97 && n <= 122) {
			s += t.charAt(e);
			continue;
		}
		s += "\\" + t.charAt(e);
	}
	return s;
}
function ge$1(r) {
	return r.replace(/\\([\dA-Fa-f]{1,6}[\t\n\f\r ]?|[\S\s])/g, (t) => t.length > 2 ? String.fromCodePoint(Number.parseInt(t.slice(1).trim(), 16)) : t[1]);
}
var Lt = new Map([
	["--font", ["--font-weight", "--font-size"]],
	["--inset", ["--inset-shadow", "--inset-ring"]],
	["--text", [
		"--text-color",
		"--text-decoration-color",
		"--text-decoration-thickness",
		"--text-indent",
		"--text-shadow",
		"--text-underline-offset"
	]]
]);
function It(r, t) {
	return (Lt.get(t) ?? []).some((i) => r === i || r.startsWith(`${i}-`));
}
var Be = class {
	constructor(t = /* @__PURE__ */ new Map(), i = /* @__PURE__ */ new Set([])) {
		this.values = t;
		this.keyframes = i;
	}
	prefix = null;
	get size() {
		return this.values.size;
	}
	add(t, i, e = 0, n) {
		if (t.endsWith("-*")) {
			if (i !== "initial") throw new Error(`Invalid theme value \`${i}\` for namespace \`${t}\``);
			t === "--*" ? this.values.clear() : this.clearNamespace(t.slice(0, -2), 0);
		}
		if (e & 4) {
			let s = this.values.get(t);
			if (s && !(s.options & 4)) return;
		}
		i === "initial" ? this.values.delete(t) : this.values.set(t, {
			value: i,
			options: e,
			src: n
		});
	}
	keysInNamespaces(t) {
		let i = [];
		for (let e of t) {
			let n = `${e}-`;
			for (let s of this.values.keys()) s.startsWith(n) && s.indexOf("--", 2) === -1 && (It(s, e) || i.push(s.slice(n.length)));
		}
		return i;
	}
	get(t) {
		for (let i of t) {
			let e = this.values.get(i);
			if (e) return e.value;
		}
		return null;
	}
	hasDefault(t) {
		return (this.getOptions(t) & 4) === 4;
	}
	getOptions(t) {
		return t = ge$1(this.#r(t)), this.values.get(t)?.options ?? 0;
	}
	entries() {
		return this.prefix ? Array.from(this.values, (t) => (t[0] = this.prefixKey(t[0]), t)) : this.values.entries();
	}
	prefixKey(t) {
		return this.prefix ? `--${this.prefix}-${t.slice(2)}` : t;
	}
	#r(t) {
		return this.prefix ? `--${t.slice(3 + this.prefix.length)}` : t;
	}
	clearNamespace(t, i) {
		let e = Lt.get(t) ?? [];
		e: for (let n of this.values.keys()) if (n.startsWith(t)) {
			if (i !== 0 && (this.getOptions(n) & i) !== i) continue;
			for (let s of e) if (n.startsWith(s)) continue e;
			this.values.delete(n);
		}
	}
	#e(t, i) {
		for (let e of i) {
			let n = t !== null ? `${e}-${t}` : e;
			if (!this.values.has(n)) if (t !== null && t.includes(".")) {
				if (n = `${e}-${t.replaceAll(".", "_")}`, !this.values.has(n)) continue;
			} else continue;
			if (!It(n, e)) return n;
		}
		return null;
	}
	#t(t) {
		let i = this.values.get(t);
		if (!i) return null;
		let e = null;
		return i.options & 2 && (e = i.value), `var(${fe(this.prefixKey(t))}${e ? `, ${e}` : ""})`;
	}
	markUsedVariable(t) {
		let i = ge$1(this.#r(t)), e = this.values.get(i);
		if (!e) return !1;
		let n = e.options & 16;
		return e.options |= 16, !n;
	}
	resolve(t, i, e = 0) {
		let n = this.#e(t, i);
		if (!n) return null;
		let s = this.values.get(n);
		return (e | s.options) & 1 ? s.value : this.#t(n);
	}
	resolveValue(t, i) {
		let e = this.#e(t, i);
		return e ? this.values.get(e).value : null;
	}
	resolveWith(t, i, e = []) {
		let n = this.#e(t, i);
		if (!n) return null;
		let s = {};
		for (let p of e) {
			let f$1 = `${n}${p}`, u$1 = this.values.get(f$1);
			u$1 && (u$1.options & 1 ? s[p] = u$1.value : s[p] = this.#t(f$1));
		}
		let a = this.values.get(n);
		return a.options & 1 ? [a.value, s] : [this.#t(n), s];
	}
	namespace(t) {
		let i = /* @__PURE__ */ new Map(), e = `${t}-`;
		for (let [n, s] of this.values) n === t ? i.set(null, s.value) : n.startsWith(`${e}-`) ? i.set(n.slice(t.length), s.value) : n.startsWith(e) && i.set(n.slice(e.length), s.value);
		return i;
	}
	addKeyframes(t) {
		this.keyframes.add(t);
	}
	getKeyframes() {
		return Array.from(this.keyframes);
	}
};
var M = class extends Map {
	constructor(i) {
		super();
		this.factory = i;
	}
	get(i) {
		let e = super.get(i);
		return e === void 0 && (e = this.factory(i, this), this.set(i, e)), e;
	}
};
function pt(r) {
	return {
		kind: "word",
		value: r
	};
}
function ai(r, t) {
	return {
		kind: "function",
		value: r,
		nodes: t
	};
}
function si(r) {
	return {
		kind: "separator",
		value: r
	};
}
function ee(r, t, i = null) {
	for (let e = 0; e < r.length; e++) {
		let n = r[e], s = !1, a = 0, p = t(n, {
			parent: i,
			replaceWith(f$1) {
				s || (s = !0, Array.isArray(f$1) ? f$1.length === 0 ? (r.splice(e, 1), a = 0) : f$1.length === 1 ? (r[e] = f$1[0], a = 1) : (r.splice(e, 1, ...f$1), a = f$1.length) : r[e] = f$1);
			}
		}) ?? 0;
		if (s) {
			p === 0 ? e-- : e += a - 1;
			continue;
		}
		if (p === 2) return 2;
		if (p !== 1 && n.kind === "function" && ee(n.nodes, t, n) === 2) return 2;
	}
}
function Y(r) {
	let t = "";
	for (let i of r) switch (i.kind) {
		case "word":
		case "separator":
			t += i.value;
			break;
		case "function": t += i.value + "(" + Y(i.nodes) + ")";
	}
	return t;
}
var Ft = 92, ui = 41, zt = 58, Mt = 44, fi = 34, Wt = 61, Bt = 62, qt = 60, Gt = 10, ci = 40, pi = 39, Jt = 47, Ht = 32, Yt = 9;
function q(r) {
	r = r.replaceAll(`\r
`, `
`);
	let t = [], i = [], e = null, n = "", s;
	for (let a = 0; a < r.length; a++) {
		let p = r.charCodeAt(a);
		switch (p) {
			case Ft:
				n += r[a] + r[a + 1], a++;
				break;
			case zt:
			case Mt:
			case Wt:
			case Bt:
			case qt:
			case Gt:
			case Jt:
			case Ht:
			case Yt: {
				if (n.length > 0) {
					let m = pt(n);
					e ? e.nodes.push(m) : t.push(m), n = "";
				}
				let f$1 = a, u$1 = a + 1;
				for (; u$1 < r.length && (s = r.charCodeAt(u$1), !(s !== zt && s !== Mt && s !== Wt && s !== Bt && s !== qt && s !== Gt && s !== Jt && s !== Ht && s !== Yt)); u$1++);
				a = u$1 - 1;
				let g$1 = si(r.slice(f$1, u$1));
				e ? e.nodes.push(g$1) : t.push(g$1);
				break;
			}
			case pi:
			case fi: {
				let f$1 = a;
				for (let u$1 = a + 1; u$1 < r.length; u$1++) if (s = r.charCodeAt(u$1), s === Ft) u$1 += 1;
				else if (s === p) {
					a = u$1;
					break;
				}
				n += r.slice(f$1, a + 1);
				break;
			}
			case ci: {
				let f$1 = ai(n, []);
				n = "", e ? e.nodes.push(f$1) : t.push(f$1), i.push(f$1), e = f$1;
				break;
			}
			case ui: {
				let f$1 = i.pop();
				if (n.length > 0) {
					let u$1 = pt(n);
					f$1?.nodes.push(u$1), n = "";
				}
				i.length > 0 ? e = i[i.length - 1] : e = null;
				break;
			}
			default: n += String.fromCharCode(p);
		}
	}
	return n.length > 0 && t.push(pt(n)), t;
}
function qe(r) {
	let t = [];
	return ee(q(r), (i) => {
		if (!(i.kind !== "function" || i.value !== "var")) return ee(i.nodes, (e) => {
			e.kind !== "word" || e.value[0] !== "-" || e.value[1] !== "-" || t.push(e.value);
		}), 1;
	}), t;
}
var mi = 64;
function W(r, t = []) {
	return {
		kind: "rule",
		selector: r,
		nodes: t
	};
}
function z(r, t = "", i = []) {
	return {
		kind: "at-rule",
		name: r,
		params: t,
		nodes: i
	};
}
function H(r, t = []) {
	return r.charCodeAt(0) === mi ? Se(r, t) : W(r, t);
}
function l$1(r, t, i = !1) {
	return {
		kind: "declaration",
		property: r,
		value: t,
		important: i
	};
}
function We(r) {
	return {
		kind: "comment",
		value: r
	};
}
function le(r, t) {
	return {
		kind: "context",
		context: r,
		nodes: t
	};
}
function F(r) {
	return {
		kind: "at-root",
		nodes: r
	};
}
function D(r, t, i = [], e = {}) {
	for (let n = 0; n < r.length; n++) {
		let s = r[n], a = i[i.length - 1] ?? null;
		if (s.kind === "context") {
			if (D(s.nodes, t, i, {
				...e,
				...s.context
			}) === 2) return 2;
			continue;
		}
		i.push(s);
		let p = !1, f$1 = 0, u$1 = t(s, {
			parent: a,
			context: e,
			path: i,
			replaceWith(g$1) {
				p || (p = !0, Array.isArray(g$1) ? g$1.length === 0 ? (r.splice(n, 1), f$1 = 0) : g$1.length === 1 ? (r[n] = g$1[0], f$1 = 1) : (r.splice(n, 1, ...g$1), f$1 = g$1.length) : (r[n] = g$1, f$1 = 1));
			}
		}) ?? 0;
		if (i.pop(), p) {
			u$1 === 0 ? n-- : n += f$1 - 1;
			continue;
		}
		if (u$1 === 2) return 2;
		if (u$1 !== 1 && "nodes" in s) {
			i.push(s);
			let g$1 = D(s.nodes, t, i, e);
			if (i.pop(), g$1 === 2) return 2;
		}
	}
}
function Ge(r, t, i = [], e = {}) {
	for (let n = 0; n < r.length; n++) {
		let s = r[n], a = i[i.length - 1] ?? null;
		if (s.kind === "rule" || s.kind === "at-rule") i.push(s), Ge(s.nodes, t, i, e), i.pop();
		else if (s.kind === "context") {
			Ge(s.nodes, t, i, {
				...e,
				...s.context
			});
			continue;
		}
		i.push(s), t(s, {
			parent: a,
			context: e,
			path: i,
			replaceWith(p) {
				Array.isArray(p) ? p.length === 0 ? r.splice(n, 1) : p.length === 1 ? r[n] = p[0] : r.splice(n, 1, ...p) : r[n] = p, n += p.length - 1;
			}
		}), i.pop();
	}
}
function ve(r, t, i = 3) {
	let e = [], n = /* @__PURE__ */ new Set(), s = new M(() => /* @__PURE__ */ new Set()), a = new M(() => /* @__PURE__ */ new Set()), p = /* @__PURE__ */ new Set(), f$1 = /* @__PURE__ */ new Set(), u$1 = [], g$1 = [], m = new M(() => /* @__PURE__ */ new Set());
	function d$1(v$1, y$1, x$1 = {}, N$1 = 0) {
		if (v$1.kind === "declaration") {
			if (v$1.property === "--tw-sort" || v$1.value === void 0 || v$1.value === null) return;
			if (x$1.theme && v$1.property[0] === "-" && v$1.property[1] === "-") {
				if (v$1.value === "initial") {
					v$1.value = void 0;
					return;
				}
				x$1.keyframes || s.get(y$1).add(v$1);
			}
			if (v$1.value.includes("var(")) if (x$1.theme && v$1.property[0] === "-" && v$1.property[1] === "-") for (let k of qe(v$1.value)) m.get(k).add(v$1.property);
			else t.trackUsedVariables(v$1.value);
			if (v$1.property === "animation") for (let k of Zt(v$1.value)) f$1.add(k);
			i & 2 && v$1.value.includes("color-mix(") && a.get(y$1).add(v$1), y$1.push(v$1);
		} else if (v$1.kind === "rule") {
			let k = [];
			for (let K$1 of v$1.nodes) d$1(K$1, k, x$1, N$1 + 1);
			let S$1 = {}, O$1 = /* @__PURE__ */ new Set();
			for (let K$1 of k) {
				if (K$1.kind !== "declaration") continue;
				let R$1 = `${K$1.property}:${K$1.value}:${K$1.important}`;
				S$1[R$1] ??= [], S$1[R$1].push(K$1);
			}
			for (let K$1 in S$1) for (let R$1 = 0; R$1 < S$1[K$1].length - 1; ++R$1) O$1.add(S$1[K$1][R$1]);
			if (O$1.size > 0 && (k = k.filter((K$1) => !O$1.has(K$1))), k.length === 0) return;
			v$1.selector === "&" ? y$1.push(...k) : y$1.push({
				...v$1,
				nodes: k
			});
		} else if (v$1.kind === "at-rule" && v$1.name === "@property" && N$1 === 0) {
			if (n.has(v$1.params)) return;
			if (i & 1) {
				let S$1 = v$1.params, O$1 = null, K$1 = !1;
				for (let j$1 of v$1.nodes) j$1.kind === "declaration" && (j$1.property === "initial-value" ? O$1 = j$1.value : j$1.property === "inherits" && (K$1 = j$1.value === "true"));
				let R$1 = l$1(S$1, O$1 ?? "initial");
				R$1.src = v$1.src, K$1 ? u$1.push(R$1) : g$1.push(R$1);
			}
			n.add(v$1.params);
			let k = {
				...v$1,
				nodes: []
			};
			for (let S$1 of v$1.nodes) d$1(S$1, k.nodes, x$1, N$1 + 1);
			y$1.push(k);
		} else if (v$1.kind === "at-rule") {
			v$1.name === "@keyframes" && (x$1 = {
				...x$1,
				keyframes: !0
			});
			let k = {
				...v$1,
				nodes: []
			};
			for (let S$1 of v$1.nodes) d$1(S$1, k.nodes, x$1, N$1 + 1);
			v$1.name === "@keyframes" && x$1.theme && p.add(k), (k.nodes.length > 0 || k.name === "@layer" || k.name === "@charset" || k.name === "@custom-media" || k.name === "@namespace" || k.name === "@import") && y$1.push(k);
		} else if (v$1.kind === "at-root") for (let k of v$1.nodes) {
			let S$1 = [];
			d$1(k, S$1, x$1, 0);
			for (let O$1 of S$1) e.push(O$1);
		}
		else if (v$1.kind === "context") {
			if (v$1.context.reference) return;
			for (let k of v$1.nodes) d$1(k, y$1, {
				...x$1,
				...v$1.context
			}, N$1);
		} else v$1.kind === "comment" && y$1.push(v$1);
	}
	let w$1 = [];
	for (let v$1 of r) d$1(v$1, w$1, {}, 0);
	e: for (let [v$1, y$1] of s) for (let x$1 of y$1) {
		if (Qt(x$1.property, t.theme, m)) {
			if (x$1.property.startsWith(t.theme.prefixKey("--animate-"))) for (let S$1 of Zt(x$1.value)) f$1.add(S$1);
			continue;
		}
		let k = v$1.indexOf(x$1);
		if (v$1.splice(k, 1), v$1.length === 0) {
			let S$1 = gi(w$1, (O$1) => O$1.kind === "rule" && O$1.nodes === v$1);
			if (!S$1 || S$1.length === 0) continue e;
			S$1.unshift({
				kind: "at-root",
				nodes: w$1
			});
			do {
				let O$1 = S$1.pop();
				if (!O$1) break;
				let K$1 = S$1[S$1.length - 1];
				if (!K$1 || K$1.kind !== "at-root" && K$1.kind !== "at-rule") break;
				let R$1 = K$1.nodes.indexOf(O$1);
				if (R$1 === -1) break;
				K$1.nodes.splice(R$1, 1);
			} while (!0);
			continue e;
		}
	}
	for (let v$1 of p) if (!f$1.has(v$1.params)) {
		let y$1 = e.indexOf(v$1);
		e.splice(y$1, 1);
	}
	if (w$1 = w$1.concat(e), i & 2) for (let [v$1, y$1] of a) for (let x$1 of y$1) {
		let N$1 = v$1.indexOf(x$1);
		if (N$1 === -1 || x$1.value == null) continue;
		let k = q(x$1.value), S$1 = !1;
		if (ee(k, (R$1, { replaceWith: j$1 }) => {
			if (R$1.kind !== "function" || R$1.value !== "color-mix") return;
			let _$1 = !1, G$1 = !1;
			if (ee(R$1.nodes, (L$1, { replaceWith: B$1 }) => {
				if (L$1.kind == "word" && L$1.value.toLowerCase() === "currentcolor") {
					G$1 = !0, S$1 = !0;
					return;
				}
				let Z$1 = L$1, re$1 = null, o = /* @__PURE__ */ new Set();
				do {
					if (Z$1.kind !== "function" || Z$1.value !== "var") return;
					let c = Z$1.nodes[0];
					if (!c || c.kind !== "word") return;
					let h$1 = c.value;
					if (o.has(h$1)) {
						_$1 = !0;
						return;
					}
					if (o.add(h$1), S$1 = !0, re$1 = t.theme.resolveValue(null, [c.value]), !re$1) {
						_$1 = !0;
						return;
					}
					if (re$1.toLowerCase() === "currentcolor") {
						G$1 = !0;
						return;
					}
					re$1.startsWith("var(") ? Z$1 = q(re$1)[0] : Z$1 = null;
				} while (Z$1);
				B$1({
					kind: "word",
					value: re$1
				});
			}), _$1 || G$1) {
				let L$1 = R$1.nodes.findIndex((Z$1) => Z$1.kind === "separator" && Z$1.value.trim().includes(","));
				if (L$1 === -1) return;
				let B$1 = R$1.nodes.length > L$1 ? R$1.nodes[L$1 + 1] : null;
				if (!B$1) return;
				j$1(B$1);
			} else if (S$1) {
				let L$1 = R$1.nodes[2];
				L$1.kind === "word" && (L$1.value === "oklab" || L$1.value === "oklch" || L$1.value === "lab" || L$1.value === "lch") && (L$1.value = "srgb");
			}
		}), !S$1) continue;
		let O$1 = {
			...x$1,
			value: Y(k)
		}, K$1 = H("@supports (color: color-mix(in lab, red, red))", [x$1]);
		K$1.src = x$1.src, v$1.splice(N$1, 1, O$1, K$1);
	}
	if (i & 1) {
		let v$1 = [];
		if (u$1.length > 0) {
			let y$1 = H(":root, :host", u$1);
			y$1.src = u$1[0].src, v$1.push(y$1);
		}
		if (g$1.length > 0) {
			let y$1 = H("*, ::before, ::after, ::backdrop", g$1);
			y$1.src = g$1[0].src, v$1.push(y$1);
		}
		if (v$1.length > 0) {
			let y$1 = w$1.findIndex((k) => !(k.kind === "comment" || k.kind === "at-rule" && (k.name === "@charset" || k.name === "@import"))), x$1 = z("@layer", "properties", []);
			x$1.src = v$1[0].src, w$1.splice(y$1 < 0 ? w$1.length : y$1, 0, x$1);
			let N$1 = H("@layer properties", [z("@supports", "((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b))))", v$1)]);
			N$1.src = v$1[0].src, N$1.nodes[0].src = v$1[0].src, w$1.push(N$1);
		}
	}
	return w$1;
}
function ne(r, t) {
	let i = 0, e = {
		file: null,
		code: ""
	};
	function n(a, p = 0) {
		let f$1 = "", u$1 = "  ".repeat(p);
		if (a.kind === "declaration") {
			if (f$1 += `${u$1}${a.property}: ${a.value}${a.important ? " !important" : ""};
`, t) {
				i += u$1.length;
				let g$1 = i;
				i += a.property.length, i += 2, i += a.value?.length ?? 0, a.important && (i += 11);
				let m = i;
				i += 2, a.dst = [
					e,
					g$1,
					m
				];
			}
		} else if (a.kind === "rule") {
			if (f$1 += `${u$1}${a.selector} {
`, t) {
				i += u$1.length;
				let g$1 = i;
				i += a.selector.length, i += 1;
				a.dst = [
					e,
					g$1,
					i
				], i += 2;
			}
			for (let g$1 of a.nodes) f$1 += n(g$1, p + 1);
			f$1 += `${u$1}}
`, t && (i += u$1.length, i += 2);
		} else if (a.kind === "at-rule") {
			if (a.nodes.length === 0) {
				let g$1 = `${u$1}${a.name} ${a.params};
`;
				if (t) {
					i += u$1.length;
					let m = i;
					i += a.name.length, i += 1, i += a.params.length;
					let d$1 = i;
					i += 2, a.dst = [
						e,
						m,
						d$1
					];
				}
				return g$1;
			}
			if (f$1 += `${u$1}${a.name}${a.params ? ` ${a.params} ` : " "}{
`, t) {
				i += u$1.length;
				let g$1 = i;
				i += a.name.length, a.params && (i += 1, i += a.params.length), i += 1;
				a.dst = [
					e,
					g$1,
					i
				], i += 2;
			}
			for (let g$1 of a.nodes) f$1 += n(g$1, p + 1);
			f$1 += `${u$1}}
`, t && (i += u$1.length, i += 2);
		} else if (a.kind === "comment") {
			if (f$1 += `${u$1}/*${a.value}*/
`, t) {
				i += u$1.length;
				let g$1 = i;
				i += 2 + a.value.length + 2;
				a.dst = [
					e,
					g$1,
					i
				], i += 1;
			}
		} else if (a.kind === "context" || a.kind === "at-root") return "";
		return f$1;
	}
	let s = "";
	for (let a of r) s += n(a, 0);
	return e.code = s, s;
}
function gi(r, t) {
	let i = [];
	return D(r, (e, { path: n }) => {
		if (t(e)) return i = [...n], 2;
	}), i;
}
function Qt(r, t, i, e = /* @__PURE__ */ new Set()) {
	if (e.has(r) || (e.add(r), t.getOptions(r) & 24)) return !0;
	{
		let s = i.get(r) ?? [];
		for (let a of s) if (Qt(a, t, i, e)) return !0;
	}
	return !1;
}
function Zt(r) {
	return r.split(/[\s,]+/);
}
function ce(r) {
	if (r.indexOf("(") === -1) return be$1(r);
	let t = q(r);
	return mt(t), r = Y(t), r = oe(r), r;
}
function be$1(r, t = !1) {
	let i = "";
	for (let e = 0; e < r.length; e++) {
		let n = r[e];
		n === "\\" && r[e + 1] === "_" ? (i += "_", e += 1) : n === "_" && !t ? i += " " : i += n;
	}
	return i;
}
function mt(r) {
	for (let t of r) switch (t.kind) {
		case "function":
			if (t.value === "url" || t.value.endsWith("_url")) {
				t.value = be$1(t.value);
				break;
			}
			if (t.value === "var" || t.value.endsWith("_var") || t.value === "theme" || t.value.endsWith("_theme")) {
				t.value = be$1(t.value);
				for (let i = 0; i < t.nodes.length; i++) {
					if (i == 0 && t.nodes[i].kind === "word") {
						t.nodes[i].value = be$1(t.nodes[i].value, !0);
						continue;
					}
					mt([t.nodes[i]]);
				}
				break;
			}
			t.value = be$1(t.value), mt(t.nodes);
			break;
		case "separator":
		case "word":
			t.value = be$1(t.value);
			break;
		default: hi(t);
	}
}
function hi(r) {
	throw new Error(`Unexpected value: ${r}`);
}
var gt = new Uint8Array(256);
function se(r) {
	let t = 0, i = r.length;
	for (let e = 0; e < i; e++) {
		let n = r.charCodeAt(e);
		switch (n) {
			case 92:
				e += 1;
				break;
			case 39:
			case 34:
				for (; ++e < i;) {
					let s = r.charCodeAt(e);
					if (s === 92) {
						e += 1;
						continue;
					}
					if (s === n) break;
				}
				break;
			case 40:
				gt[t] = 41, t++;
				break;
			case 91:
				gt[t] = 93, t++;
				break;
			case 123: break;
			case 93:
			case 125:
			case 41:
				if (t === 0) return !1;
				t > 0 && n === gt[t - 1] && t--;
				break;
			case 59:
				if (t === 0) return !1;
				break;
		}
	}
	return !0;
}
var vi = 58, Xt = 45, er = 97, tr = 122;
function* rr(r, t) {
	let i = d(r, ":");
	if (t.theme.prefix) {
		if (i.length === 1 || i[0] !== t.theme.prefix) return null;
		i.shift();
	}
	let e = i.pop(), n = [];
	for (let m = i.length - 1; m >= 0; --m) {
		let d$1 = t.parseVariant(i[m]);
		if (d$1 === null) return;
		n.push(d$1);
	}
	let s = !1;
	e[e.length - 1] === "!" ? (s = !0, e = e.slice(0, -1)) : e[0] === "!" && (s = !0, e = e.slice(1)), t.utilities.has(e, "static") && !e.includes("[") && (yield {
		kind: "static",
		root: e,
		variants: n,
		important: s,
		raw: r
	});
	let [a, p = null, f$1] = d(e, "/");
	if (f$1) return;
	let u$1 = p === null ? null : ht(p);
	if (p !== null && u$1 === null) return;
	if (a[0] === "[") {
		if (a[a.length - 1] !== "]") return;
		let m = a.charCodeAt(1);
		if (m !== Xt && !(m >= er && m <= tr)) return;
		a = a.slice(1, -1);
		let d$1 = a.indexOf(":");
		if (d$1 === -1 || d$1 === 0 || d$1 === a.length - 1) return;
		let w$1 = a.slice(0, d$1), v$1 = ce(a.slice(d$1 + 1));
		if (!se(v$1)) return;
		yield {
			kind: "arbitrary",
			property: w$1,
			value: v$1,
			modifier: u$1,
			variants: n,
			important: s,
			raw: r
		};
		return;
	}
	let g$1;
	if (a[a.length - 1] === "]") {
		let m = a.indexOf("-[");
		if (m === -1) return;
		let d$1 = a.slice(0, m);
		if (!t.utilities.has(d$1, "functional")) return;
		let w$1 = a.slice(m + 1);
		g$1 = [[d$1, w$1]];
	} else if (a[a.length - 1] === ")") {
		let m = a.indexOf("-(");
		if (m === -1) return;
		let d$1 = a.slice(0, m);
		if (!t.utilities.has(d$1, "functional")) return;
		let w$1 = a.slice(m + 2, -1), v$1 = d(w$1, ":"), y$1 = null;
		if (v$1.length === 2 && (y$1 = v$1[0], w$1 = v$1[1]), w$1[0] !== "-" || w$1[1] !== "-" || !se(w$1)) return;
		g$1 = [[d$1, y$1 === null ? `[var(${w$1})]` : `[${y$1}:var(${w$1})]`]];
	} else g$1 = nr(a, (m) => t.utilities.has(m, "functional"));
	for (let [m, d$1] of g$1) {
		let w$1 = {
			kind: "functional",
			root: m,
			modifier: u$1,
			value: null,
			variants: n,
			important: s,
			raw: r
		};
		if (d$1 === null) {
			yield w$1;
			continue;
		}
		{
			let v$1 = d$1.indexOf("[");
			if (v$1 !== -1) {
				if (d$1[d$1.length - 1] !== "]") return;
				let x$1 = ce(d$1.slice(v$1 + 1, -1));
				if (!se(x$1)) continue;
				let N$1 = "";
				for (let k = 0; k < x$1.length; k++) {
					let S$1 = x$1.charCodeAt(k);
					if (S$1 === vi) {
						N$1 = x$1.slice(0, k), x$1 = x$1.slice(k + 1);
						break;
					}
					if (!(S$1 === Xt || S$1 >= er && S$1 <= tr)) break;
				}
				if (x$1.length === 0 || x$1.trim().length === 0) continue;
				w$1.value = {
					kind: "arbitrary",
					dataType: N$1 || null,
					value: x$1
				};
			} else {
				let x$1 = p === null || w$1.modifier?.kind === "arbitrary" ? null : `${d$1}/${p}`;
				w$1.value = {
					kind: "named",
					value: d$1,
					fraction: x$1
				};
			}
		}
		yield w$1;
	}
}
function ht(r) {
	if (r[0] === "[" && r[r.length - 1] === "]") {
		let t = ce(r.slice(1, -1));
		return !se(t) || t.length === 0 || t.trim().length === 0 ? null : {
			kind: "arbitrary",
			value: t
		};
	}
	return r[0] === "(" && r[r.length - 1] === ")" ? (r = r.slice(1, -1), r[0] !== "-" || r[1] !== "-" || !se(r) ? null : (r = `var(${r})`, {
		kind: "arbitrary",
		value: ce(r)
	})) : {
		kind: "named",
		value: r
	};
}
function ir(r, t) {
	if (r[0] === "[" && r[r.length - 1] === "]") {
		if (r[1] === "@" && r.includes("&")) return null;
		let i = ce(r.slice(1, -1));
		if (!se(i) || i.length === 0 || i.trim().length === 0) return null;
		let e = i[0] === ">" || i[0] === "+" || i[0] === "~";
		return !e && i[0] !== "@" && !i.includes("&") && (i = `&:is(${i})`), {
			kind: "arbitrary",
			selector: i,
			relative: e
		};
	}
	{
		let [i, e = null, n] = d(r, "/");
		if (n) return null;
		let s = nr(i, (a) => t.variants.has(a));
		for (let [a, p] of s) switch (t.variants.kind(a)) {
			case "static": return p !== null || e !== null ? null : {
				kind: "static",
				root: a
			};
			case "functional": {
				let f$1 = e === null ? null : ht(e);
				if (e !== null && f$1 === null) return null;
				if (p === null) return {
					kind: "functional",
					root: a,
					modifier: f$1,
					value: null
				};
				if (p[p.length - 1] === "]") {
					if (p[0] !== "[") continue;
					let u$1 = ce(p.slice(1, -1));
					return !se(u$1) || u$1.length === 0 || u$1.trim().length === 0 ? null : {
						kind: "functional",
						root: a,
						modifier: f$1,
						value: {
							kind: "arbitrary",
							value: u$1
						}
					};
				}
				if (p[p.length - 1] === ")") {
					if (p[0] !== "(") continue;
					let u$1 = ce(p.slice(1, -1));
					return !se(u$1) || u$1.length === 0 || u$1.trim().length === 0 || u$1[0] !== "-" || u$1[1] !== "-" ? null : {
						kind: "functional",
						root: a,
						modifier: f$1,
						value: {
							kind: "arbitrary",
							value: `var(${u$1})`
						}
					};
				}
				return {
					kind: "functional",
					root: a,
					modifier: f$1,
					value: {
						kind: "named",
						value: p
					}
				};
			}
			case "compound": {
				if (p === null) return null;
				let f$1 = t.parseVariant(p);
				if (f$1 === null || !t.variants.compoundsWith(a, f$1)) return null;
				let u$1 = e === null ? null : ht(e);
				return e !== null && u$1 === null ? null : {
					kind: "compound",
					root: a,
					modifier: u$1,
					variant: f$1
				};
			}
		}
	}
	return null;
}
function* nr(r, t) {
	t(r) && (yield [r, null]);
	let i = r.lastIndexOf("-");
	for (; i > 0;) {
		let e = r.slice(0, i);
		if (t(e)) {
			let n = [e, r.slice(i + 1)];
			if (n[1] === "" || n[0] === "@" && t("@") && r[i] === "-") break;
			yield n;
		}
		i = r.lastIndexOf("-", i - 1);
	}
	r[0] === "@" && t("@") && (yield ["@", r.slice(1)]);
}
function or(r, t) {
	let i = [];
	for (let n of t.variants) i.unshift(He(n));
	r.theme.prefix && i.unshift(r.theme.prefix);
	let e = "";
	if (t.kind === "static" && (e += t.root), t.kind === "functional" && (e += t.root, t.value)) if (t.value.kind === "arbitrary") {
		if (t.value !== null) {
			let n = wt(t.value.value), s = n ? t.value.value.slice(4, -1) : t.value.value, [a, p] = n ? ["(", ")"] : ["[", "]"];
			t.value.dataType ? e += `-${a}${t.value.dataType}:${ke(s)}${p}` : e += `-${a}${ke(s)}${p}`;
		}
	} else t.value.kind === "named" && (e += `-${t.value.value}`);
	return t.kind === "arbitrary" && (e += `[${t.property}:${ke(t.value)}]`), (t.kind === "arbitrary" || t.kind === "functional") && (e += lr(t.modifier)), t.important && (e += "!"), i.push(e), i.join(":");
}
function lr(r) {
	if (r === null) return "";
	let t = wt(r.value), i = t ? r.value.slice(4, -1) : r.value, [e, n] = t ? ["(", ")"] : ["[", "]"];
	return r.kind === "arbitrary" ? `/${e}${ke(i)}${n}` : r.kind === "named" ? `/${r.value}` : "";
}
function He(r) {
	if (r.kind === "static") return r.root;
	if (r.kind === "arbitrary") return `[${ke(bi(r.selector))}]`;
	let t = "";
	if (r.kind === "functional") {
		t += r.root;
		let i = r.root !== "@";
		if (r.value) if (r.value.kind === "arbitrary") {
			let e = wt(r.value.value), n = e ? r.value.value.slice(4, -1) : r.value.value, [s, a] = e ? ["(", ")"] : ["[", "]"];
			t += `${i ? "-" : ""}${s}${ke(n)}${a}`;
		} else r.value.kind === "named" && (t += `${i ? "-" : ""}${r.value.value}`);
	}
	return r.kind === "compound" && (t += r.root, t += "-", t += He(r.variant)), (r.kind === "functional" || r.kind === "compound") && (t += lr(r.modifier)), t;
}
var wi = new M((r) => {
	let t = q(r), i = /* @__PURE__ */ new Set();
	return ee(t, (e, { parent: n }) => {
		let s = n === null ? t : n.nodes ?? [];
		if (e.kind === "word" && (e.value === "+" || e.value === "-" || e.value === "*" || e.value === "/")) {
			let a = s.indexOf(e) ?? -1;
			if (a === -1) return;
			let p = s[a - 1];
			if (p?.kind !== "separator" || p.value !== " ") return;
			let f$1 = s[a + 1];
			if (f$1?.kind !== "separator" || f$1.value !== " ") return;
			i.add(p), i.add(f$1);
		} else e.kind === "separator" && e.value.trim() === "/" ? e.value = "/" : e.kind === "separator" && e.value.length > 0 && e.value.trim() === "" ? (s[0] === e || s[s.length - 1] === e) && i.add(e) : e.kind === "separator" && e.value.trim() === "," && (e.value = ",");
	}), i.size > 0 && ee(t, (e, { replaceWith: n }) => {
		i.has(e) && (i.delete(e), n([]));
	}), vt(t), Y(t);
});
function ke(r) {
	return wi.get(r);
}
var yi = new M((r) => {
	let t = q(r);
	return t.length === 3 && t[0].kind === "word" && t[0].value === "&" && t[1].kind === "separator" && t[1].value === ":" && t[2].kind === "function" && t[2].value === "is" ? Y(t[2].nodes) : r;
});
function bi(r) {
	return yi.get(r);
}
function vt(r) {
	for (let t of r) switch (t.kind) {
		case "function":
			if (t.value === "url" || t.value.endsWith("_url")) {
				t.value = Te(t.value);
				break;
			}
			if (t.value === "var" || t.value.endsWith("_var") || t.value === "theme" || t.value.endsWith("_theme")) {
				t.value = Te(t.value);
				for (let i = 0; i < t.nodes.length; i++) vt([t.nodes[i]]);
				break;
			}
			t.value = Te(t.value), vt(t.nodes);
			break;
		case "separator":
			t.value = Te(t.value);
			break;
		case "word":
			(t.value[0] !== "-" || t.value[1] !== "-") && (t.value = Te(t.value));
			break;
		default: xi(t);
	}
}
var ki = new M((r) => {
	let t = q(r);
	return t.length === 1 && t[0].kind === "function" && t[0].value === "var";
});
function wt(r) {
	return ki.get(r);
}
function xi(r) {
	throw new Error(`Unexpected value: ${r}`);
}
function Te(r) {
	return r.replaceAll("_", String.raw`\_`).replaceAll(" ", "_");
}
function we(r, t, i) {
	if (r === t) return 0;
	let e = r.indexOf("("), n = t.indexOf("("), s = e === -1 ? r.replace(/[\d.]+/g, "") : r.slice(0, e), a = n === -1 ? t.replace(/[\d.]+/g, "") : t.slice(0, n), p = (s === a ? 0 : s < a ? -1 : 1) || (i === "asc" ? parseInt(r) - parseInt(t) : parseInt(t) - parseInt(r));
	return Number.isNaN(p) ? r < t ? -1 : 1 : p;
}
var Ai = new Set([
	"inset",
	"inherit",
	"initial",
	"revert",
	"unset"
]), ar = /^-?(\d+|\.\d+)(.*?)$/g;
function Ee(r, t) {
	return d(r, ",").map((e) => {
		e = e.trim();
		let n = d(e, " ").filter((u$1) => u$1.trim() !== ""), s = null, a = null, p = null;
		for (let u$1 of n) Ai.has(u$1) || (ar.test(u$1) ? (a === null ? a = u$1 : p === null && (p = u$1), ar.lastIndex = 0) : s === null && (s = u$1));
		if (a === null || p === null) return e;
		let f$1 = t(s ?? "currentcolor");
		return s !== null ? e.replace(s, f$1) : `${e} ${f$1}`;
	}).join(", ");
}
var Ci = /^-?[a-z][a-zA-Z0-9/%._-]*$/, $i = /^-?[a-z][a-zA-Z0-9/%._-]*-\*$/, Ze = [
	"0",
	"0.5",
	"1",
	"1.5",
	"2",
	"2.5",
	"3",
	"3.5",
	"4",
	"5",
	"6",
	"7",
	"8",
	"9",
	"10",
	"11",
	"12",
	"14",
	"16",
	"20",
	"24",
	"28",
	"32",
	"36",
	"40",
	"44",
	"48",
	"52",
	"56",
	"60",
	"64",
	"72",
	"80",
	"96"
], yt = class {
	utilities = new M(() => []);
	completions = /* @__PURE__ */ new Map();
	static(t, i) {
		this.utilities.get(t).push({
			kind: "static",
			compileFn: i
		});
	}
	functional(t, i, e) {
		this.utilities.get(t).push({
			kind: "functional",
			compileFn: i,
			options: e
		});
	}
	has(t, i) {
		return this.utilities.has(t) && this.utilities.get(t).some((e) => e.kind === i);
	}
	get(t) {
		return this.utilities.has(t) ? this.utilities.get(t) : [];
	}
	getCompletions(t) {
		return this.completions.get(t)?.() ?? [];
	}
	suggest(t, i) {
		this.completions.set(t, i);
	}
	keys(t) {
		let i = [];
		for (let [e, n] of this.utilities.entries()) for (let s of n) if (s.kind === t) {
			i.push(e);
			break;
		}
		return i;
	}
};
function $(r, t, i) {
	return z("@property", r, [
		l$1("syntax", i ? `"${i}"` : "\"*\""),
		l$1("inherits", "false"),
		...t ? [l$1("initial-value", t)] : []
	]);
}
function Q(r, t) {
	if (t === null) return r;
	let i = Number(t);
	return Number.isNaN(i) || (t = `${i * 100}%`), t === "100%" ? r : `color-mix(in oklab, ${r} ${t}, transparent)`;
}
function ur(r, t) {
	let i = Number(t);
	return Number.isNaN(i) || (t = `${i * 100}%`), `oklab(from ${r} l a b / ${t})`;
}
function X(r, t, i) {
	if (!t) return r;
	if (t.kind === "arbitrary") return Q(r, t.value);
	let e = i.resolve(t.value, ["--opacity"]);
	return e ? Q(r, e) : ue(t.value) ? Q(r, `${t.value}%`) : null;
}
function te(r, t, i) {
	let e = null;
	switch (r.value.value) {
		case "inherit":
			e = "inherit";
			break;
		case "transparent":
			e = "transparent";
			break;
		case "current":
			e = "currentcolor";
			break;
		default:
			e = t.resolve(r.value.value, i);
			break;
	}
	return e ? X(e, r.modifier, t) : null;
}
var fr = /(\d+)_(\d+)/g;
function cr(r) {
	let t = new yt();
	function i(o, c) {
		function* h$1(b$1) {
			for (let C$1 of r.keysInNamespaces(b$1)) yield C$1.replace(fr, (P$1, V$1, T$1) => `${V$1}.${T$1}`);
		}
		let A$1 = [
			"1/2",
			"1/3",
			"2/3",
			"1/4",
			"2/4",
			"3/4",
			"1/5",
			"2/5",
			"3/5",
			"4/5",
			"1/6",
			"2/6",
			"3/6",
			"4/6",
			"5/6",
			"1/12",
			"2/12",
			"3/12",
			"4/12",
			"5/12",
			"6/12",
			"7/12",
			"8/12",
			"9/12",
			"10/12",
			"11/12"
		];
		t.suggest(o, () => {
			let b$1 = [];
			for (let C$1 of c()) {
				if (typeof C$1 == "string") {
					b$1.push({
						values: [C$1],
						modifiers: []
					});
					continue;
				}
				let P$1 = [...C$1.values ?? [], ...h$1(C$1.valueThemeKeys ?? [])], V$1 = [...C$1.modifiers ?? [], ...h$1(C$1.modifierThemeKeys ?? [])];
				C$1.supportsFractions && P$1.push(...A$1), C$1.hasDefaultValue && P$1.unshift(null), b$1.push({
					supportsNegative: C$1.supportsNegative,
					values: P$1,
					modifiers: V$1
				});
			}
			return b$1;
		});
	}
	function e(o, c) {
		t.static(o, () => c.map((h$1) => typeof h$1 == "function" ? h$1() : l$1(h$1[0], h$1[1])));
	}
	function n(o, c) {
		function h$1({ negative: A$1 }) {
			return (b$1) => {
				let C$1 = null, P$1 = null;
				if (b$1.value) if (b$1.value.kind === "arbitrary") {
					if (b$1.modifier) return;
					C$1 = b$1.value.value, P$1 = b$1.value.dataType;
				} else {
					if (C$1 = r.resolve(b$1.value.fraction ?? b$1.value.value, c.themeKeys ?? []), C$1 === null && c.supportsFractions && b$1.value.fraction) {
						let [V$1, T$1] = d(b$1.value.fraction, "/");
						if (!u(V$1) || !u(T$1)) return;
						C$1 = `calc(${b$1.value.fraction} * 100%)`;
					}
					if (C$1 === null && A$1 && c.handleNegativeBareValue) {
						if (C$1 = c.handleNegativeBareValue(b$1.value), !C$1?.includes("/") && b$1.modifier) return;
						if (C$1 !== null) return c.handle(C$1, null);
					}
					if (C$1 === null && c.handleBareValue && (C$1 = c.handleBareValue(b$1.value), !C$1?.includes("/") && b$1.modifier)) return;
				}
				else {
					if (b$1.modifier) return;
					C$1 = c.defaultValue !== void 0 ? c.defaultValue : r.resolve(null, c.themeKeys ?? []);
				}
				if (C$1 !== null) return c.handle(A$1 ? `calc(${C$1} * -1)` : C$1, P$1);
			};
		}
		c.supportsNegative && t.functional(`-${o}`, h$1({ negative: !0 })), t.functional(o, h$1({ negative: !1 })), i(o, () => [{
			supportsNegative: c.supportsNegative,
			valueThemeKeys: c.themeKeys ?? [],
			hasDefaultValue: c.defaultValue !== void 0 && c.defaultValue !== null,
			supportsFractions: c.supportsFractions
		}]);
	}
	function s(o, c) {
		t.functional(o, (h$1) => {
			if (!h$1.value) return;
			let A$1 = null;
			if (h$1.value.kind === "arbitrary" ? (A$1 = h$1.value.value, A$1 = X(A$1, h$1.modifier, r)) : A$1 = te(h$1, r, c.themeKeys), A$1 !== null) return c.handle(A$1);
		}), i(o, () => [{
			values: [
				"current",
				"inherit",
				"transparent"
			],
			valueThemeKeys: c.themeKeys,
			modifiers: Array.from({ length: 21 }, (h$1, A$1) => `${A$1 * 5}`)
		}]);
	}
	function a(o, c, h$1, { supportsNegative: A$1 = !1, supportsFractions: b$1 = !1 } = {}) {
		A$1 && t.static(`-${o}-px`, () => h$1("-1px")), t.static(`${o}-px`, () => h$1("1px")), n(o, {
			themeKeys: c,
			supportsFractions: b$1,
			supportsNegative: A$1,
			defaultValue: null,
			handleBareValue: ({ value: C$1 }) => {
				let P$1 = r.resolve(null, ["--spacing"]);
				return !P$1 || !ge(C$1) ? null : `calc(${P$1} * ${C$1})`;
			},
			handleNegativeBareValue: ({ value: C$1 }) => {
				let P$1 = r.resolve(null, ["--spacing"]);
				return !P$1 || !ge(C$1) ? null : `calc(${P$1} * -${C$1})`;
			},
			handle: h$1
		}), i(o, () => [{
			values: r.get(["--spacing"]) ? Ze : [],
			supportsNegative: A$1,
			supportsFractions: b$1,
			valueThemeKeys: c
		}]);
	}
	e("sr-only", [
		["position", "absolute"],
		["width", "1px"],
		["height", "1px"],
		["padding", "0"],
		["margin", "-1px"],
		["overflow", "hidden"],
		["clip-path", "inset(50%)"],
		["white-space", "nowrap"],
		["border-width", "0"]
	]), e("not-sr-only", [
		["position", "static"],
		["width", "auto"],
		["height", "auto"],
		["padding", "0"],
		["margin", "0"],
		["overflow", "visible"],
		["clip-path", "none"],
		["white-space", "normal"]
	]), e("pointer-events-none", [["pointer-events", "none"]]), e("pointer-events-auto", [["pointer-events", "auto"]]), e("visible", [["visibility", "visible"]]), e("invisible", [["visibility", "hidden"]]), e("collapse", [["visibility", "collapse"]]), e("static", [["position", "static"]]), e("fixed", [["position", "fixed"]]), e("absolute", [["position", "absolute"]]), e("relative", [["position", "relative"]]), e("sticky", [["position", "sticky"]]);
	for (let [o, c] of [
		["inset", "inset"],
		["inset-x", "inset-inline"],
		["inset-y", "inset-block"],
		["start", "inset-inline-start"],
		["end", "inset-inline-end"],
		["top", "top"],
		["right", "right"],
		["bottom", "bottom"],
		["left", "left"]
	]) e(`${o}-auto`, [[c, "auto"]]), e(`${o}-full`, [[c, "100%"]]), e(`-${o}-full`, [[c, "-100%"]]), a(o, ["--inset", "--spacing"], (h$1) => [l$1(c, h$1)], {
		supportsNegative: !0,
		supportsFractions: !0
	});
	e("isolate", [["isolation", "isolate"]]), e("isolation-auto", [["isolation", "auto"]]), e("z-auto", [["z-index", "auto"]]), n("z", {
		supportsNegative: !0,
		handleBareValue: ({ value: o }) => u(o) ? o : null,
		themeKeys: ["--z-index"],
		handle: (o) => [l$1("z-index", o)]
	}), i("z", () => [{
		supportsNegative: !0,
		values: [
			"0",
			"10",
			"20",
			"30",
			"40",
			"50"
		],
		valueThemeKeys: ["--z-index"]
	}]), e("order-first", [["order", "-9999"]]), e("order-last", [["order", "9999"]]), n("order", {
		supportsNegative: !0,
		handleBareValue: ({ value: o }) => u(o) ? o : null,
		themeKeys: ["--order"],
		handle: (o) => [l$1("order", o)]
	}), i("order", () => [{
		supportsNegative: !0,
		values: Array.from({ length: 12 }, (o, c) => `${c + 1}`),
		valueThemeKeys: ["--order"]
	}]), e("col-auto", [["grid-column", "auto"]]), n("col", {
		supportsNegative: !0,
		handleBareValue: ({ value: o }) => u(o) ? o : null,
		themeKeys: ["--grid-column"],
		handle: (o) => [l$1("grid-column", o)]
	}), e("col-span-full", [["grid-column", "1 / -1"]]), n("col-span", {
		handleBareValue: ({ value: o }) => u(o) ? o : null,
		handle: (o) => [l$1("grid-column", `span ${o} / span ${o}`)]
	}), e("col-start-auto", [["grid-column-start", "auto"]]), n("col-start", {
		supportsNegative: !0,
		handleBareValue: ({ value: o }) => u(o) ? o : null,
		themeKeys: ["--grid-column-start"],
		handle: (o) => [l$1("grid-column-start", o)]
	}), e("col-end-auto", [["grid-column-end", "auto"]]), n("col-end", {
		supportsNegative: !0,
		handleBareValue: ({ value: o }) => u(o) ? o : null,
		themeKeys: ["--grid-column-end"],
		handle: (o) => [l$1("grid-column-end", o)]
	}), i("col-span", () => [{
		values: Array.from({ length: 12 }, (o, c) => `${c + 1}`),
		valueThemeKeys: []
	}]), i("col-start", () => [{
		supportsNegative: !0,
		values: Array.from({ length: 13 }, (o, c) => `${c + 1}`),
		valueThemeKeys: ["--grid-column-start"]
	}]), i("col-end", () => [{
		supportsNegative: !0,
		values: Array.from({ length: 13 }, (o, c) => `${c + 1}`),
		valueThemeKeys: ["--grid-column-end"]
	}]), e("row-auto", [["grid-row", "auto"]]), n("row", {
		supportsNegative: !0,
		handleBareValue: ({ value: o }) => u(o) ? o : null,
		themeKeys: ["--grid-row"],
		handle: (o) => [l$1("grid-row", o)]
	}), e("row-span-full", [["grid-row", "1 / -1"]]), n("row-span", {
		themeKeys: [],
		handleBareValue: ({ value: o }) => u(o) ? o : null,
		handle: (o) => [l$1("grid-row", `span ${o} / span ${o}`)]
	}), e("row-start-auto", [["grid-row-start", "auto"]]), n("row-start", {
		supportsNegative: !0,
		handleBareValue: ({ value: o }) => u(o) ? o : null,
		themeKeys: ["--grid-row-start"],
		handle: (o) => [l$1("grid-row-start", o)]
	}), e("row-end-auto", [["grid-row-end", "auto"]]), n("row-end", {
		supportsNegative: !0,
		handleBareValue: ({ value: o }) => u(o) ? o : null,
		themeKeys: ["--grid-row-end"],
		handle: (o) => [l$1("grid-row-end", o)]
	}), i("row-span", () => [{
		values: Array.from({ length: 12 }, (o, c) => `${c + 1}`),
		valueThemeKeys: []
	}]), i("row-start", () => [{
		supportsNegative: !0,
		values: Array.from({ length: 13 }, (o, c) => `${c + 1}`),
		valueThemeKeys: ["--grid-row-start"]
	}]), i("row-end", () => [{
		supportsNegative: !0,
		values: Array.from({ length: 13 }, (o, c) => `${c + 1}`),
		valueThemeKeys: ["--grid-row-end"]
	}]), e("float-start", [["float", "inline-start"]]), e("float-end", [["float", "inline-end"]]), e("float-right", [["float", "right"]]), e("float-left", [["float", "left"]]), e("float-none", [["float", "none"]]), e("clear-start", [["clear", "inline-start"]]), e("clear-end", [["clear", "inline-end"]]), e("clear-right", [["clear", "right"]]), e("clear-left", [["clear", "left"]]), e("clear-both", [["clear", "both"]]), e("clear-none", [["clear", "none"]]);
	for (let [o, c] of [
		["m", "margin"],
		["mx", "margin-inline"],
		["my", "margin-block"],
		["ms", "margin-inline-start"],
		["me", "margin-inline-end"],
		["mt", "margin-top"],
		["mr", "margin-right"],
		["mb", "margin-bottom"],
		["ml", "margin-left"]
	]) e(`${o}-auto`, [[c, "auto"]]), a(o, ["--margin", "--spacing"], (h$1) => [l$1(c, h$1)], { supportsNegative: !0 });
	e("box-border", [["box-sizing", "border-box"]]), e("box-content", [["box-sizing", "content-box"]]), e("line-clamp-none", [
		["overflow", "visible"],
		["display", "block"],
		["-webkit-box-orient", "horizontal"],
		["-webkit-line-clamp", "unset"]
	]), n("line-clamp", {
		themeKeys: ["--line-clamp"],
		handleBareValue: ({ value: o }) => u(o) ? o : null,
		handle: (o) => [
			l$1("overflow", "hidden"),
			l$1("display", "-webkit-box"),
			l$1("-webkit-box-orient", "vertical"),
			l$1("-webkit-line-clamp", o)
		]
	}), i("line-clamp", () => [{
		values: [
			"1",
			"2",
			"3",
			"4",
			"5",
			"6"
		],
		valueThemeKeys: ["--line-clamp"]
	}]), e("block", [["display", "block"]]), e("inline-block", [["display", "inline-block"]]), e("inline", [["display", "inline"]]), e("hidden", [["display", "none"]]), e("inline-flex", [["display", "inline-flex"]]), e("table", [["display", "table"]]), e("inline-table", [["display", "inline-table"]]), e("table-caption", [["display", "table-caption"]]), e("table-cell", [["display", "table-cell"]]), e("table-column", [["display", "table-column"]]), e("table-column-group", [["display", "table-column-group"]]), e("table-footer-group", [["display", "table-footer-group"]]), e("table-header-group", [["display", "table-header-group"]]), e("table-row-group", [["display", "table-row-group"]]), e("table-row", [["display", "table-row"]]), e("flow-root", [["display", "flow-root"]]), e("flex", [["display", "flex"]]), e("grid", [["display", "grid"]]), e("inline-grid", [["display", "inline-grid"]]), e("contents", [["display", "contents"]]), e("list-item", [["display", "list-item"]]), e("field-sizing-content", [["field-sizing", "content"]]), e("field-sizing-fixed", [["field-sizing", "fixed"]]), e("aspect-auto", [["aspect-ratio", "auto"]]), e("aspect-square", [["aspect-ratio", "1 / 1"]]), n("aspect", {
		themeKeys: ["--aspect"],
		handleBareValue: ({ fraction: o }) => {
			if (o === null) return null;
			let [c, h$1] = d(o, "/");
			return !u(c) || !u(h$1) ? null : o;
		},
		handle: (o) => [l$1("aspect-ratio", o)]
	});
	for (let [o, c] of [
		["full", "100%"],
		["svw", "100svw"],
		["lvw", "100lvw"],
		["dvw", "100dvw"],
		["svh", "100svh"],
		["lvh", "100lvh"],
		["dvh", "100dvh"],
		["min", "min-content"],
		["max", "max-content"],
		["fit", "fit-content"]
	]) e(`size-${o}`, [
		["--tw-sort", "size"],
		["width", c],
		["height", c]
	]), e(`w-${o}`, [["width", c]]), e(`h-${o}`, [["height", c]]), e(`min-w-${o}`, [["min-width", c]]), e(`min-h-${o}`, [["min-height", c]]), e(`max-w-${o}`, [["max-width", c]]), e(`max-h-${o}`, [["max-height", c]]);
	e("size-auto", [
		["--tw-sort", "size"],
		["width", "auto"],
		["height", "auto"]
	]), e("w-auto", [["width", "auto"]]), e("h-auto", [["height", "auto"]]), e("min-w-auto", [["min-width", "auto"]]), e("min-h-auto", [["min-height", "auto"]]), e("h-lh", [["height", "1lh"]]), e("min-h-lh", [["min-height", "1lh"]]), e("max-h-lh", [["max-height", "1lh"]]), e("w-screen", [["width", "100vw"]]), e("min-w-screen", [["min-width", "100vw"]]), e("max-w-screen", [["max-width", "100vw"]]), e("h-screen", [["height", "100vh"]]), e("min-h-screen", [["min-height", "100vh"]]), e("max-h-screen", [["max-height", "100vh"]]), e("max-w-none", [["max-width", "none"]]), e("max-h-none", [["max-height", "none"]]), a("size", ["--size", "--spacing"], (o) => [
		l$1("--tw-sort", "size"),
		l$1("width", o),
		l$1("height", o)
	], { supportsFractions: !0 });
	for (let [o, c, h$1] of [
		[
			"w",
			[
				"--width",
				"--spacing",
				"--container"
			],
			"width"
		],
		[
			"min-w",
			[
				"--min-width",
				"--spacing",
				"--container"
			],
			"min-width"
		],
		[
			"max-w",
			[
				"--max-width",
				"--spacing",
				"--container"
			],
			"max-width"
		],
		[
			"h",
			["--height", "--spacing"],
			"height"
		],
		[
			"min-h",
			[
				"--min-height",
				"--height",
				"--spacing"
			],
			"min-height"
		],
		[
			"max-h",
			[
				"--max-height",
				"--height",
				"--spacing"
			],
			"max-height"
		]
	]) a(o, c, (A$1) => [l$1(h$1, A$1)], { supportsFractions: !0 });
	t.static("container", () => {
		let o = [...r.namespace("--breakpoint").values()];
		o.sort((h$1, A$1) => we(h$1, A$1, "asc"));
		let c = [l$1("--tw-sort", "--tw-container-component"), l$1("width", "100%")];
		for (let h$1 of o) c.push(z("@media", `(width >= ${h$1})`, [l$1("max-width", h$1)]));
		return c;
	}), e("flex-auto", [["flex", "auto"]]), e("flex-initial", [["flex", "0 auto"]]), e("flex-none", [["flex", "none"]]), t.functional("flex", (o) => {
		if (o.value) {
			if (o.value.kind === "arbitrary") return o.modifier ? void 0 : [l$1("flex", o.value.value)];
			if (o.value.fraction) {
				let [c, h$1] = d(o.value.fraction, "/");
				return !u(c) || !u(h$1) ? void 0 : [l$1("flex", `calc(${o.value.fraction} * 100%)`)];
			}
			if (u(o.value.value)) return o.modifier ? void 0 : [l$1("flex", o.value.value)];
		}
	}), i("flex", () => [{ supportsFractions: !0 }, { values: Array.from({ length: 12 }, (o, c) => `${c + 1}`) }]), n("shrink", {
		defaultValue: "1",
		handleBareValue: ({ value: o }) => u(o) ? o : null,
		handle: (o) => [l$1("flex-shrink", o)]
	}), n("grow", {
		defaultValue: "1",
		handleBareValue: ({ value: o }) => u(o) ? o : null,
		handle: (o) => [l$1("flex-grow", o)]
	}), i("shrink", () => [{
		values: ["0"],
		valueThemeKeys: [],
		hasDefaultValue: !0
	}]), i("grow", () => [{
		values: ["0"],
		valueThemeKeys: [],
		hasDefaultValue: !0
	}]), e("basis-auto", [["flex-basis", "auto"]]), e("basis-full", [["flex-basis", "100%"]]), a("basis", [
		"--flex-basis",
		"--spacing",
		"--container"
	], (o) => [l$1("flex-basis", o)], { supportsFractions: !0 }), e("table-auto", [["table-layout", "auto"]]), e("table-fixed", [["table-layout", "fixed"]]), e("caption-top", [["caption-side", "top"]]), e("caption-bottom", [["caption-side", "bottom"]]), e("border-collapse", [["border-collapse", "collapse"]]), e("border-separate", [["border-collapse", "separate"]]);
	let p = () => F([$("--tw-border-spacing-x", "0", "<length>"), $("--tw-border-spacing-y", "0", "<length>")]);
	a("border-spacing", ["--border-spacing", "--spacing"], (o) => [
		p(),
		l$1("--tw-border-spacing-x", o),
		l$1("--tw-border-spacing-y", o),
		l$1("border-spacing", "var(--tw-border-spacing-x) var(--tw-border-spacing-y)")
	]), a("border-spacing-x", ["--border-spacing", "--spacing"], (o) => [
		p(),
		l$1("--tw-border-spacing-x", o),
		l$1("border-spacing", "var(--tw-border-spacing-x) var(--tw-border-spacing-y)")
	]), a("border-spacing-y", ["--border-spacing", "--spacing"], (o) => [
		p(),
		l$1("--tw-border-spacing-y", o),
		l$1("border-spacing", "var(--tw-border-spacing-x) var(--tw-border-spacing-y)")
	]), e("origin-center", [["transform-origin", "center"]]), e("origin-top", [["transform-origin", "top"]]), e("origin-top-right", [["transform-origin", "top right"]]), e("origin-right", [["transform-origin", "right"]]), e("origin-bottom-right", [["transform-origin", "bottom right"]]), e("origin-bottom", [["transform-origin", "bottom"]]), e("origin-bottom-left", [["transform-origin", "bottom left"]]), e("origin-left", [["transform-origin", "left"]]), e("origin-top-left", [["transform-origin", "top left"]]), n("origin", {
		themeKeys: ["--transform-origin"],
		handle: (o) => [l$1("transform-origin", o)]
	}), e("perspective-origin-center", [["perspective-origin", "center"]]), e("perspective-origin-top", [["perspective-origin", "top"]]), e("perspective-origin-top-right", [["perspective-origin", "top right"]]), e("perspective-origin-right", [["perspective-origin", "right"]]), e("perspective-origin-bottom-right", [["perspective-origin", "bottom right"]]), e("perspective-origin-bottom", [["perspective-origin", "bottom"]]), e("perspective-origin-bottom-left", [["perspective-origin", "bottom left"]]), e("perspective-origin-left", [["perspective-origin", "left"]]), e("perspective-origin-top-left", [["perspective-origin", "top left"]]), n("perspective-origin", {
		themeKeys: ["--perspective-origin"],
		handle: (o) => [l$1("perspective-origin", o)]
	}), e("perspective-none", [["perspective", "none"]]), n("perspective", {
		themeKeys: ["--perspective"],
		handle: (o) => [l$1("perspective", o)]
	});
	let f$1 = () => F([
		$("--tw-translate-x", "0"),
		$("--tw-translate-y", "0"),
		$("--tw-translate-z", "0")
	]);
	e("translate-none", [["translate", "none"]]), e("-translate-full", [
		f$1,
		["--tw-translate-x", "-100%"],
		["--tw-translate-y", "-100%"],
		["translate", "var(--tw-translate-x) var(--tw-translate-y)"]
	]), e("translate-full", [
		f$1,
		["--tw-translate-x", "100%"],
		["--tw-translate-y", "100%"],
		["translate", "var(--tw-translate-x) var(--tw-translate-y)"]
	]), a("translate", ["--translate", "--spacing"], (o) => [
		f$1(),
		l$1("--tw-translate-x", o),
		l$1("--tw-translate-y", o),
		l$1("translate", "var(--tw-translate-x) var(--tw-translate-y)")
	], {
		supportsNegative: !0,
		supportsFractions: !0
	});
	for (let o of ["x", "y"]) e(`-translate-${o}-full`, [
		f$1,
		[`--tw-translate-${o}`, "-100%"],
		["translate", "var(--tw-translate-x) var(--tw-translate-y)"]
	]), e(`translate-${o}-full`, [
		f$1,
		[`--tw-translate-${o}`, "100%"],
		["translate", "var(--tw-translate-x) var(--tw-translate-y)"]
	]), a(`translate-${o}`, ["--translate", "--spacing"], (c) => [
		f$1(),
		l$1(`--tw-translate-${o}`, c),
		l$1("translate", "var(--tw-translate-x) var(--tw-translate-y)")
	], {
		supportsNegative: !0,
		supportsFractions: !0
	});
	a("translate-z", ["--translate", "--spacing"], (o) => [
		f$1(),
		l$1("--tw-translate-z", o),
		l$1("translate", "var(--tw-translate-x) var(--tw-translate-y) var(--tw-translate-z)")
	], { supportsNegative: !0 }), e("translate-3d", [f$1, ["translate", "var(--tw-translate-x) var(--tw-translate-y) var(--tw-translate-z)"]]);
	let u$1 = () => F([
		$("--tw-scale-x", "1"),
		$("--tw-scale-y", "1"),
		$("--tw-scale-z", "1")
	]);
	e("scale-none", [["scale", "none"]]);
	function g$1({ negative: o }) {
		return (c) => {
			if (!c.value || c.modifier) return;
			let h$1;
			return c.value.kind === "arbitrary" ? (h$1 = c.value.value, h$1 = o ? `calc(${h$1} * -1)` : h$1, [l$1("scale", h$1)]) : (h$1 = r.resolve(c.value.value, ["--scale"]), !h$1 && u(c.value.value) && (h$1 = `${c.value.value}%`), h$1 ? (h$1 = o ? `calc(${h$1} * -1)` : h$1, [
				u$1(),
				l$1("--tw-scale-x", h$1),
				l$1("--tw-scale-y", h$1),
				l$1("--tw-scale-z", h$1),
				l$1("scale", "var(--tw-scale-x) var(--tw-scale-y)")
			]) : void 0);
		};
	}
	t.functional("-scale", g$1({ negative: !0 })), t.functional("scale", g$1({ negative: !1 })), i("scale", () => [{
		supportsNegative: !0,
		values: [
			"0",
			"50",
			"75",
			"90",
			"95",
			"100",
			"105",
			"110",
			"125",
			"150",
			"200"
		],
		valueThemeKeys: ["--scale"]
	}]);
	for (let o of [
		"x",
		"y",
		"z"
	]) n(`scale-${o}`, {
		supportsNegative: !0,
		themeKeys: ["--scale"],
		handleBareValue: ({ value: c }) => u(c) ? `${c}%` : null,
		handle: (c) => [
			u$1(),
			l$1(`--tw-scale-${o}`, c),
			l$1("scale", `var(--tw-scale-x) var(--tw-scale-y)${o === "z" ? " var(--tw-scale-z)" : ""}`)
		]
	}), i(`scale-${o}`, () => [{
		supportsNegative: !0,
		values: [
			"0",
			"50",
			"75",
			"90",
			"95",
			"100",
			"105",
			"110",
			"125",
			"150",
			"200"
		],
		valueThemeKeys: ["--scale"]
	}]);
	e("scale-3d", [u$1, ["scale", "var(--tw-scale-x) var(--tw-scale-y) var(--tw-scale-z)"]]), e("rotate-none", [["rotate", "none"]]);
	function m({ negative: o }) {
		return (c) => {
			if (!c.value || c.modifier) return;
			let h$1;
			if (c.value.kind === "arbitrary") {
				h$1 = c.value.value;
				let A$1 = c.value.dataType ?? me(h$1, ["angle", "vector"]);
				if (A$1 === "vector") return [l$1("rotate", `${h$1} var(--tw-rotate)`)];
				if (A$1 !== "angle") return [l$1("rotate", o ? `calc(${h$1} * -1)` : h$1)];
			} else if (h$1 = r.resolve(c.value.value, ["--rotate"]), !h$1 && u(c.value.value) && (h$1 = `${c.value.value}deg`), !h$1) return;
			return [l$1("rotate", o ? `calc(${h$1} * -1)` : h$1)];
		};
	}
	t.functional("-rotate", m({ negative: !0 })), t.functional("rotate", m({ negative: !1 })), i("rotate", () => [{
		supportsNegative: !0,
		values: [
			"0",
			"1",
			"2",
			"3",
			"6",
			"12",
			"45",
			"90",
			"180"
		],
		valueThemeKeys: ["--rotate"]
	}]);
	{
		let o = [
			"var(--tw-rotate-x,)",
			"var(--tw-rotate-y,)",
			"var(--tw-rotate-z,)",
			"var(--tw-skew-x,)",
			"var(--tw-skew-y,)"
		].join(" "), c = () => F([
			$("--tw-rotate-x"),
			$("--tw-rotate-y"),
			$("--tw-rotate-z"),
			$("--tw-skew-x"),
			$("--tw-skew-y")
		]);
		for (let h$1 of [
			"x",
			"y",
			"z"
		]) n(`rotate-${h$1}`, {
			supportsNegative: !0,
			themeKeys: ["--rotate"],
			handleBareValue: ({ value: A$1 }) => u(A$1) ? `${A$1}deg` : null,
			handle: (A$1) => [
				c(),
				l$1(`--tw-rotate-${h$1}`, `rotate${h$1.toUpperCase()}(${A$1})`),
				l$1("transform", o)
			]
		}), i(`rotate-${h$1}`, () => [{
			supportsNegative: !0,
			values: [
				"0",
				"1",
				"2",
				"3",
				"6",
				"12",
				"45",
				"90",
				"180"
			],
			valueThemeKeys: ["--rotate"]
		}]);
		n("skew", {
			supportsNegative: !0,
			themeKeys: ["--skew"],
			handleBareValue: ({ value: h$1 }) => u(h$1) ? `${h$1}deg` : null,
			handle: (h$1) => [
				c(),
				l$1("--tw-skew-x", `skewX(${h$1})`),
				l$1("--tw-skew-y", `skewY(${h$1})`),
				l$1("transform", o)
			]
		}), n("skew-x", {
			supportsNegative: !0,
			themeKeys: ["--skew"],
			handleBareValue: ({ value: h$1 }) => u(h$1) ? `${h$1}deg` : null,
			handle: (h$1) => [
				c(),
				l$1("--tw-skew-x", `skewX(${h$1})`),
				l$1("transform", o)
			]
		}), n("skew-y", {
			supportsNegative: !0,
			themeKeys: ["--skew"],
			handleBareValue: ({ value: h$1 }) => u(h$1) ? `${h$1}deg` : null,
			handle: (h$1) => [
				c(),
				l$1("--tw-skew-y", `skewY(${h$1})`),
				l$1("transform", o)
			]
		}), i("skew", () => [{
			supportsNegative: !0,
			values: [
				"0",
				"1",
				"2",
				"3",
				"6",
				"12"
			],
			valueThemeKeys: ["--skew"]
		}]), i("skew-x", () => [{
			supportsNegative: !0,
			values: [
				"0",
				"1",
				"2",
				"3",
				"6",
				"12"
			],
			valueThemeKeys: ["--skew"]
		}]), i("skew-y", () => [{
			supportsNegative: !0,
			values: [
				"0",
				"1",
				"2",
				"3",
				"6",
				"12"
			],
			valueThemeKeys: ["--skew"]
		}]), t.functional("transform", (h$1) => {
			if (h$1.modifier) return;
			let A$1 = null;
			if (h$1.value ? h$1.value.kind === "arbitrary" && (A$1 = h$1.value.value) : A$1 = o, A$1 !== null) return [c(), l$1("transform", A$1)];
		}), i("transform", () => [{ hasDefaultValue: !0 }]), e("transform-cpu", [["transform", o]]), e("transform-gpu", [["transform", `translateZ(0) ${o}`]]), e("transform-none", [["transform", "none"]]);
	}
	e("transform-flat", [["transform-style", "flat"]]), e("transform-3d", [["transform-style", "preserve-3d"]]), e("transform-content", [["transform-box", "content-box"]]), e("transform-border", [["transform-box", "border-box"]]), e("transform-fill", [["transform-box", "fill-box"]]), e("transform-stroke", [["transform-box", "stroke-box"]]), e("transform-view", [["transform-box", "view-box"]]), e("backface-visible", [["backface-visibility", "visible"]]), e("backface-hidden", [["backface-visibility", "hidden"]]);
	for (let o of [
		"auto",
		"default",
		"pointer",
		"wait",
		"text",
		"move",
		"help",
		"not-allowed",
		"none",
		"context-menu",
		"progress",
		"cell",
		"crosshair",
		"vertical-text",
		"alias",
		"copy",
		"no-drop",
		"grab",
		"grabbing",
		"all-scroll",
		"col-resize",
		"row-resize",
		"n-resize",
		"e-resize",
		"s-resize",
		"w-resize",
		"ne-resize",
		"nw-resize",
		"se-resize",
		"sw-resize",
		"ew-resize",
		"ns-resize",
		"nesw-resize",
		"nwse-resize",
		"zoom-in",
		"zoom-out"
	]) e(`cursor-${o}`, [["cursor", o]]);
	n("cursor", {
		themeKeys: ["--cursor"],
		handle: (o) => [l$1("cursor", o)]
	});
	for (let o of [
		"auto",
		"none",
		"manipulation"
	]) e(`touch-${o}`, [["touch-action", o]]);
	let d$1 = () => F([
		$("--tw-pan-x"),
		$("--tw-pan-y"),
		$("--tw-pinch-zoom")
	]);
	for (let o of [
		"x",
		"left",
		"right"
	]) e(`touch-pan-${o}`, [
		d$1,
		["--tw-pan-x", `pan-${o}`],
		["touch-action", "var(--tw-pan-x,) var(--tw-pan-y,) var(--tw-pinch-zoom,)"]
	]);
	for (let o of [
		"y",
		"up",
		"down"
	]) e(`touch-pan-${o}`, [
		d$1,
		["--tw-pan-y", `pan-${o}`],
		["touch-action", "var(--tw-pan-x,) var(--tw-pan-y,) var(--tw-pinch-zoom,)"]
	]);
	e("touch-pinch-zoom", [
		d$1,
		["--tw-pinch-zoom", "pinch-zoom"],
		["touch-action", "var(--tw-pan-x,) var(--tw-pan-y,) var(--tw-pinch-zoom,)"]
	]);
	for (let o of [
		"none",
		"text",
		"all",
		"auto"
	]) e(`select-${o}`, [["-webkit-user-select", o], ["user-select", o]]);
	e("resize-none", [["resize", "none"]]), e("resize-x", [["resize", "horizontal"]]), e("resize-y", [["resize", "vertical"]]), e("resize", [["resize", "both"]]), e("snap-none", [["scroll-snap-type", "none"]]);
	let w$1 = () => F([$("--tw-scroll-snap-strictness", "proximity", "*")]);
	for (let o of [
		"x",
		"y",
		"both"
	]) e(`snap-${o}`, [w$1, ["scroll-snap-type", `${o} var(--tw-scroll-snap-strictness)`]]);
	e("snap-mandatory", [w$1, ["--tw-scroll-snap-strictness", "mandatory"]]), e("snap-proximity", [w$1, ["--tw-scroll-snap-strictness", "proximity"]]), e("snap-align-none", [["scroll-snap-align", "none"]]), e("snap-start", [["scroll-snap-align", "start"]]), e("snap-end", [["scroll-snap-align", "end"]]), e("snap-center", [["scroll-snap-align", "center"]]), e("snap-normal", [["scroll-snap-stop", "normal"]]), e("snap-always", [["scroll-snap-stop", "always"]]);
	for (let [o, c] of [
		["scroll-m", "scroll-margin"],
		["scroll-mx", "scroll-margin-inline"],
		["scroll-my", "scroll-margin-block"],
		["scroll-ms", "scroll-margin-inline-start"],
		["scroll-me", "scroll-margin-inline-end"],
		["scroll-mt", "scroll-margin-top"],
		["scroll-mr", "scroll-margin-right"],
		["scroll-mb", "scroll-margin-bottom"],
		["scroll-ml", "scroll-margin-left"]
	]) a(o, ["--scroll-margin", "--spacing"], (h$1) => [l$1(c, h$1)], { supportsNegative: !0 });
	for (let [o, c] of [
		["scroll-p", "scroll-padding"],
		["scroll-px", "scroll-padding-inline"],
		["scroll-py", "scroll-padding-block"],
		["scroll-ps", "scroll-padding-inline-start"],
		["scroll-pe", "scroll-padding-inline-end"],
		["scroll-pt", "scroll-padding-top"],
		["scroll-pr", "scroll-padding-right"],
		["scroll-pb", "scroll-padding-bottom"],
		["scroll-pl", "scroll-padding-left"]
	]) a(o, ["--scroll-padding", "--spacing"], (h$1) => [l$1(c, h$1)]);
	e("list-inside", [["list-style-position", "inside"]]), e("list-outside", [["list-style-position", "outside"]]), e("list-none", [["list-style-type", "none"]]), e("list-disc", [["list-style-type", "disc"]]), e("list-decimal", [["list-style-type", "decimal"]]), n("list", {
		themeKeys: ["--list-style-type"],
		handle: (o) => [l$1("list-style-type", o)]
	}), e("list-image-none", [["list-style-image", "none"]]), n("list-image", {
		themeKeys: ["--list-style-image"],
		handle: (o) => [l$1("list-style-image", o)]
	}), e("appearance-none", [["appearance", "none"]]), e("appearance-auto", [["appearance", "auto"]]), e("scheme-normal", [["color-scheme", "normal"]]), e("scheme-dark", [["color-scheme", "dark"]]), e("scheme-light", [["color-scheme", "light"]]), e("scheme-light-dark", [["color-scheme", "light dark"]]), e("scheme-only-dark", [["color-scheme", "only dark"]]), e("scheme-only-light", [["color-scheme", "only light"]]), e("columns-auto", [["columns", "auto"]]), n("columns", {
		themeKeys: ["--columns", "--container"],
		handleBareValue: ({ value: o }) => u(o) ? o : null,
		handle: (o) => [l$1("columns", o)]
	}), i("columns", () => [{
		values: Array.from({ length: 12 }, (o, c) => `${c + 1}`),
		valueThemeKeys: ["--columns", "--container"]
	}]);
	for (let o of [
		"auto",
		"avoid",
		"all",
		"avoid-page",
		"page",
		"left",
		"right",
		"column"
	]) e(`break-before-${o}`, [["break-before", o]]);
	for (let o of [
		"auto",
		"avoid",
		"avoid-page",
		"avoid-column"
	]) e(`break-inside-${o}`, [["break-inside", o]]);
	for (let o of [
		"auto",
		"avoid",
		"all",
		"avoid-page",
		"page",
		"left",
		"right",
		"column"
	]) e(`break-after-${o}`, [["break-after", o]]);
	e("grid-flow-row", [["grid-auto-flow", "row"]]), e("grid-flow-col", [["grid-auto-flow", "column"]]), e("grid-flow-dense", [["grid-auto-flow", "dense"]]), e("grid-flow-row-dense", [["grid-auto-flow", "row dense"]]), e("grid-flow-col-dense", [["grid-auto-flow", "column dense"]]), e("auto-cols-auto", [["grid-auto-columns", "auto"]]), e("auto-cols-min", [["grid-auto-columns", "min-content"]]), e("auto-cols-max", [["grid-auto-columns", "max-content"]]), e("auto-cols-fr", [["grid-auto-columns", "minmax(0, 1fr)"]]), n("auto-cols", {
		themeKeys: ["--grid-auto-columns"],
		handle: (o) => [l$1("grid-auto-columns", o)]
	}), e("auto-rows-auto", [["grid-auto-rows", "auto"]]), e("auto-rows-min", [["grid-auto-rows", "min-content"]]), e("auto-rows-max", [["grid-auto-rows", "max-content"]]), e("auto-rows-fr", [["grid-auto-rows", "minmax(0, 1fr)"]]), n("auto-rows", {
		themeKeys: ["--grid-auto-rows"],
		handle: (o) => [l$1("grid-auto-rows", o)]
	}), e("grid-cols-none", [["grid-template-columns", "none"]]), e("grid-cols-subgrid", [["grid-template-columns", "subgrid"]]), n("grid-cols", {
		themeKeys: ["--grid-template-columns"],
		handleBareValue: ({ value: o }) => pe(o) ? `repeat(${o}, minmax(0, 1fr))` : null,
		handle: (o) => [l$1("grid-template-columns", o)]
	}), e("grid-rows-none", [["grid-template-rows", "none"]]), e("grid-rows-subgrid", [["grid-template-rows", "subgrid"]]), n("grid-rows", {
		themeKeys: ["--grid-template-rows"],
		handleBareValue: ({ value: o }) => pe(o) ? `repeat(${o}, minmax(0, 1fr))` : null,
		handle: (o) => [l$1("grid-template-rows", o)]
	}), i("grid-cols", () => [{
		values: Array.from({ length: 12 }, (o, c) => `${c + 1}`),
		valueThemeKeys: ["--grid-template-columns"]
	}]), i("grid-rows", () => [{
		values: Array.from({ length: 12 }, (o, c) => `${c + 1}`),
		valueThemeKeys: ["--grid-template-rows"]
	}]), e("flex-row", [["flex-direction", "row"]]), e("flex-row-reverse", [["flex-direction", "row-reverse"]]), e("flex-col", [["flex-direction", "column"]]), e("flex-col-reverse", [["flex-direction", "column-reverse"]]), e("flex-wrap", [["flex-wrap", "wrap"]]), e("flex-nowrap", [["flex-wrap", "nowrap"]]), e("flex-wrap-reverse", [["flex-wrap", "wrap-reverse"]]), e("place-content-center", [["place-content", "center"]]), e("place-content-start", [["place-content", "start"]]), e("place-content-end", [["place-content", "end"]]), e("place-content-center-safe", [["place-content", "safe center"]]), e("place-content-end-safe", [["place-content", "safe end"]]), e("place-content-between", [["place-content", "space-between"]]), e("place-content-around", [["place-content", "space-around"]]), e("place-content-evenly", [["place-content", "space-evenly"]]), e("place-content-baseline", [["place-content", "baseline"]]), e("place-content-stretch", [["place-content", "stretch"]]), e("place-items-center", [["place-items", "center"]]), e("place-items-start", [["place-items", "start"]]), e("place-items-end", [["place-items", "end"]]), e("place-items-center-safe", [["place-items", "safe center"]]), e("place-items-end-safe", [["place-items", "safe end"]]), e("place-items-baseline", [["place-items", "baseline"]]), e("place-items-stretch", [["place-items", "stretch"]]), e("content-normal", [["align-content", "normal"]]), e("content-center", [["align-content", "center"]]), e("content-start", [["align-content", "flex-start"]]), e("content-end", [["align-content", "flex-end"]]), e("content-center-safe", [["align-content", "safe center"]]), e("content-end-safe", [["align-content", "safe flex-end"]]), e("content-between", [["align-content", "space-between"]]), e("content-around", [["align-content", "space-around"]]), e("content-evenly", [["align-content", "space-evenly"]]), e("content-baseline", [["align-content", "baseline"]]), e("content-stretch", [["align-content", "stretch"]]), e("items-center", [["align-items", "center"]]), e("items-start", [["align-items", "flex-start"]]), e("items-end", [["align-items", "flex-end"]]), e("items-center-safe", [["align-items", "safe center"]]), e("items-end-safe", [["align-items", "safe flex-end"]]), e("items-baseline", [["align-items", "baseline"]]), e("items-baseline-last", [["align-items", "last baseline"]]), e("items-stretch", [["align-items", "stretch"]]), e("justify-normal", [["justify-content", "normal"]]), e("justify-center", [["justify-content", "center"]]), e("justify-start", [["justify-content", "flex-start"]]), e("justify-end", [["justify-content", "flex-end"]]), e("justify-center-safe", [["justify-content", "safe center"]]), e("justify-end-safe", [["justify-content", "safe flex-end"]]), e("justify-between", [["justify-content", "space-between"]]), e("justify-around", [["justify-content", "space-around"]]), e("justify-evenly", [["justify-content", "space-evenly"]]), e("justify-baseline", [["justify-content", "baseline"]]), e("justify-stretch", [["justify-content", "stretch"]]), e("justify-items-normal", [["justify-items", "normal"]]), e("justify-items-center", [["justify-items", "center"]]), e("justify-items-start", [["justify-items", "start"]]), e("justify-items-end", [["justify-items", "end"]]), e("justify-items-center-safe", [["justify-items", "safe center"]]), e("justify-items-end-safe", [["justify-items", "safe end"]]), e("justify-items-stretch", [["justify-items", "stretch"]]), a("gap", ["--gap", "--spacing"], (o) => [l$1("gap", o)]), a("gap-x", ["--gap", "--spacing"], (o) => [l$1("column-gap", o)]), a("gap-y", ["--gap", "--spacing"], (o) => [l$1("row-gap", o)]), a("space-x", ["--space", "--spacing"], (o) => [F([$("--tw-space-x-reverse", "0")]), W(":where(& > :not(:last-child))", [
		l$1("--tw-sort", "row-gap"),
		l$1("--tw-space-x-reverse", "0"),
		l$1("margin-inline-start", `calc(${o} * var(--tw-space-x-reverse))`),
		l$1("margin-inline-end", `calc(${o} * calc(1 - var(--tw-space-x-reverse)))`)
	])], { supportsNegative: !0 }), a("space-y", ["--space", "--spacing"], (o) => [F([$("--tw-space-y-reverse", "0")]), W(":where(& > :not(:last-child))", [
		l$1("--tw-sort", "column-gap"),
		l$1("--tw-space-y-reverse", "0"),
		l$1("margin-block-start", `calc(${o} * var(--tw-space-y-reverse))`),
		l$1("margin-block-end", `calc(${o} * calc(1 - var(--tw-space-y-reverse)))`)
	])], { supportsNegative: !0 }), e("space-x-reverse", [() => F([$("--tw-space-x-reverse", "0")]), () => W(":where(& > :not(:last-child))", [l$1("--tw-sort", "row-gap"), l$1("--tw-space-x-reverse", "1")])]), e("space-y-reverse", [() => F([$("--tw-space-y-reverse", "0")]), () => W(":where(& > :not(:last-child))", [l$1("--tw-sort", "column-gap"), l$1("--tw-space-y-reverse", "1")])]), e("accent-auto", [["accent-color", "auto"]]), s("accent", {
		themeKeys: ["--accent-color", "--color"],
		handle: (o) => [l$1("accent-color", o)]
	}), s("caret", {
		themeKeys: ["--caret-color", "--color"],
		handle: (o) => [l$1("caret-color", o)]
	}), s("divide", {
		themeKeys: [
			"--divide-color",
			"--border-color",
			"--color"
		],
		handle: (o) => [W(":where(& > :not(:last-child))", [l$1("--tw-sort", "divide-color"), l$1("border-color", o)])]
	}), e("place-self-auto", [["place-self", "auto"]]), e("place-self-start", [["place-self", "start"]]), e("place-self-end", [["place-self", "end"]]), e("place-self-center", [["place-self", "center"]]), e("place-self-end-safe", [["place-self", "safe end"]]), e("place-self-center-safe", [["place-self", "safe center"]]), e("place-self-stretch", [["place-self", "stretch"]]), e("self-auto", [["align-self", "auto"]]), e("self-start", [["align-self", "flex-start"]]), e("self-end", [["align-self", "flex-end"]]), e("self-center", [["align-self", "center"]]), e("self-end-safe", [["align-self", "safe flex-end"]]), e("self-center-safe", [["align-self", "safe center"]]), e("self-stretch", [["align-self", "stretch"]]), e("self-baseline", [["align-self", "baseline"]]), e("self-baseline-last", [["align-self", "last baseline"]]), e("justify-self-auto", [["justify-self", "auto"]]), e("justify-self-start", [["justify-self", "flex-start"]]), e("justify-self-end", [["justify-self", "flex-end"]]), e("justify-self-center", [["justify-self", "center"]]), e("justify-self-end-safe", [["justify-self", "safe flex-end"]]), e("justify-self-center-safe", [["justify-self", "safe center"]]), e("justify-self-stretch", [["justify-self", "stretch"]]);
	for (let o of [
		"auto",
		"hidden",
		"clip",
		"visible",
		"scroll"
	]) e(`overflow-${o}`, [["overflow", o]]), e(`overflow-x-${o}`, [["overflow-x", o]]), e(`overflow-y-${o}`, [["overflow-y", o]]);
	for (let o of [
		"auto",
		"contain",
		"none"
	]) e(`overscroll-${o}`, [["overscroll-behavior", o]]), e(`overscroll-x-${o}`, [["overscroll-behavior-x", o]]), e(`overscroll-y-${o}`, [["overscroll-behavior-y", o]]);
	e("scroll-auto", [["scroll-behavior", "auto"]]), e("scroll-smooth", [["scroll-behavior", "smooth"]]), e("truncate", [
		["overflow", "hidden"],
		["text-overflow", "ellipsis"],
		["white-space", "nowrap"]
	]), e("text-ellipsis", [["text-overflow", "ellipsis"]]), e("text-clip", [["text-overflow", "clip"]]), e("hyphens-none", [["-webkit-hyphens", "none"], ["hyphens", "none"]]), e("hyphens-manual", [["-webkit-hyphens", "manual"], ["hyphens", "manual"]]), e("hyphens-auto", [["-webkit-hyphens", "auto"], ["hyphens", "auto"]]), e("whitespace-normal", [["white-space", "normal"]]), e("whitespace-nowrap", [["white-space", "nowrap"]]), e("whitespace-pre", [["white-space", "pre"]]), e("whitespace-pre-line", [["white-space", "pre-line"]]), e("whitespace-pre-wrap", [["white-space", "pre-wrap"]]), e("whitespace-break-spaces", [["white-space", "break-spaces"]]), e("text-wrap", [["text-wrap", "wrap"]]), e("text-nowrap", [["text-wrap", "nowrap"]]), e("text-balance", [["text-wrap", "balance"]]), e("text-pretty", [["text-wrap", "pretty"]]), e("break-normal", [["overflow-wrap", "normal"], ["word-break", "normal"]]), e("break-words", [["overflow-wrap", "break-word"]]), e("break-all", [["word-break", "break-all"]]), e("break-keep", [["word-break", "keep-all"]]), e("wrap-anywhere", [["overflow-wrap", "anywhere"]]), e("wrap-break-word", [["overflow-wrap", "break-word"]]), e("wrap-normal", [["overflow-wrap", "normal"]]);
	for (let [o, c] of [
		["rounded", ["border-radius"]],
		["rounded-s", ["border-start-start-radius", "border-end-start-radius"]],
		["rounded-e", ["border-start-end-radius", "border-end-end-radius"]],
		["rounded-t", ["border-top-left-radius", "border-top-right-radius"]],
		["rounded-r", ["border-top-right-radius", "border-bottom-right-radius"]],
		["rounded-b", ["border-bottom-right-radius", "border-bottom-left-radius"]],
		["rounded-l", ["border-top-left-radius", "border-bottom-left-radius"]],
		["rounded-ss", ["border-start-start-radius"]],
		["rounded-se", ["border-start-end-radius"]],
		["rounded-ee", ["border-end-end-radius"]],
		["rounded-es", ["border-end-start-radius"]],
		["rounded-tl", ["border-top-left-radius"]],
		["rounded-tr", ["border-top-right-radius"]],
		["rounded-br", ["border-bottom-right-radius"]],
		["rounded-bl", ["border-bottom-left-radius"]]
	]) e(`${o}-none`, c.map((h$1) => [h$1, "0"])), e(`${o}-full`, c.map((h$1) => [h$1, "calc(infinity * 1px)"])), n(o, {
		themeKeys: ["--radius"],
		handle: (h$1) => c.map((A$1) => l$1(A$1, h$1))
	});
	e("border-solid", [["--tw-border-style", "solid"], ["border-style", "solid"]]), e("border-dashed", [["--tw-border-style", "dashed"], ["border-style", "dashed"]]), e("border-dotted", [["--tw-border-style", "dotted"], ["border-style", "dotted"]]), e("border-double", [["--tw-border-style", "double"], ["border-style", "double"]]), e("border-hidden", [["--tw-border-style", "hidden"], ["border-style", "hidden"]]), e("border-none", [["--tw-border-style", "none"], ["border-style", "none"]]);
	{
		let c = function(h$1, A$1) {
			t.functional(h$1, (b$1) => {
				if (!b$1.value) {
					if (b$1.modifier) return;
					let C$1 = r.get(["--default-border-width"]) ?? "1px", P$1 = A$1.width(C$1);
					return P$1 ? [o(), ...P$1] : void 0;
				}
				if (b$1.value.kind === "arbitrary") {
					let C$1 = b$1.value.value;
					switch (b$1.value.dataType ?? me(C$1, [
						"color",
						"line-width",
						"length"
					])) {
						case "line-width":
						case "length": {
							if (b$1.modifier) return;
							let V$1 = A$1.width(C$1);
							return V$1 ? [o(), ...V$1] : void 0;
						}
						default: return C$1 = X(C$1, b$1.modifier, r), C$1 === null ? void 0 : A$1.color(C$1);
					}
				}
				{
					let C$1 = te(b$1, r, ["--border-color", "--color"]);
					if (C$1) return A$1.color(C$1);
				}
				{
					if (b$1.modifier) return;
					let C$1 = r.resolve(b$1.value.value, ["--border-width"]);
					if (C$1) {
						let P$1 = A$1.width(C$1);
						return P$1 ? [o(), ...P$1] : void 0;
					}
					if (u(b$1.value.value)) {
						let P$1 = A$1.width(`${b$1.value.value}px`);
						return P$1 ? [o(), ...P$1] : void 0;
					}
				}
			}), i(h$1, () => [{
				values: [
					"current",
					"inherit",
					"transparent"
				],
				valueThemeKeys: ["--border-color", "--color"],
				modifiers: Array.from({ length: 21 }, (b$1, C$1) => `${C$1 * 5}`),
				hasDefaultValue: !0
			}, {
				values: [
					"0",
					"2",
					"4",
					"8"
				],
				valueThemeKeys: ["--border-width"]
			}]);
		};
		let o = () => F([$("--tw-border-style", "solid")]);
		c("border", {
			width: (h$1) => [l$1("border-style", "var(--tw-border-style)"), l$1("border-width", h$1)],
			color: (h$1) => [l$1("border-color", h$1)]
		}), c("border-x", {
			width: (h$1) => [l$1("border-inline-style", "var(--tw-border-style)"), l$1("border-inline-width", h$1)],
			color: (h$1) => [l$1("border-inline-color", h$1)]
		}), c("border-y", {
			width: (h$1) => [l$1("border-block-style", "var(--tw-border-style)"), l$1("border-block-width", h$1)],
			color: (h$1) => [l$1("border-block-color", h$1)]
		}), c("border-s", {
			width: (h$1) => [l$1("border-inline-start-style", "var(--tw-border-style)"), l$1("border-inline-start-width", h$1)],
			color: (h$1) => [l$1("border-inline-start-color", h$1)]
		}), c("border-e", {
			width: (h$1) => [l$1("border-inline-end-style", "var(--tw-border-style)"), l$1("border-inline-end-width", h$1)],
			color: (h$1) => [l$1("border-inline-end-color", h$1)]
		}), c("border-t", {
			width: (h$1) => [l$1("border-top-style", "var(--tw-border-style)"), l$1("border-top-width", h$1)],
			color: (h$1) => [l$1("border-top-color", h$1)]
		}), c("border-r", {
			width: (h$1) => [l$1("border-right-style", "var(--tw-border-style)"), l$1("border-right-width", h$1)],
			color: (h$1) => [l$1("border-right-color", h$1)]
		}), c("border-b", {
			width: (h$1) => [l$1("border-bottom-style", "var(--tw-border-style)"), l$1("border-bottom-width", h$1)],
			color: (h$1) => [l$1("border-bottom-color", h$1)]
		}), c("border-l", {
			width: (h$1) => [l$1("border-left-style", "var(--tw-border-style)"), l$1("border-left-width", h$1)],
			color: (h$1) => [l$1("border-left-color", h$1)]
		}), n("divide-x", {
			defaultValue: r.get(["--default-border-width"]) ?? "1px",
			themeKeys: ["--divide-width", "--border-width"],
			handleBareValue: ({ value: h$1 }) => u(h$1) ? `${h$1}px` : null,
			handle: (h$1) => [F([$("--tw-divide-x-reverse", "0")]), W(":where(& > :not(:last-child))", [
				l$1("--tw-sort", "divide-x-width"),
				o(),
				l$1("--tw-divide-x-reverse", "0"),
				l$1("border-inline-style", "var(--tw-border-style)"),
				l$1("border-inline-start-width", `calc(${h$1} * var(--tw-divide-x-reverse))`),
				l$1("border-inline-end-width", `calc(${h$1} * calc(1 - var(--tw-divide-x-reverse)))`)
			])]
		}), n("divide-y", {
			defaultValue: r.get(["--default-border-width"]) ?? "1px",
			themeKeys: ["--divide-width", "--border-width"],
			handleBareValue: ({ value: h$1 }) => u(h$1) ? `${h$1}px` : null,
			handle: (h$1) => [F([$("--tw-divide-y-reverse", "0")]), W(":where(& > :not(:last-child))", [
				l$1("--tw-sort", "divide-y-width"),
				o(),
				l$1("--tw-divide-y-reverse", "0"),
				l$1("border-bottom-style", "var(--tw-border-style)"),
				l$1("border-top-style", "var(--tw-border-style)"),
				l$1("border-top-width", `calc(${h$1} * var(--tw-divide-y-reverse))`),
				l$1("border-bottom-width", `calc(${h$1} * calc(1 - var(--tw-divide-y-reverse)))`)
			])]
		}), i("divide-x", () => [{
			values: [
				"0",
				"2",
				"4",
				"8"
			],
			valueThemeKeys: ["--divide-width", "--border-width"],
			hasDefaultValue: !0
		}]), i("divide-y", () => [{
			values: [
				"0",
				"2",
				"4",
				"8"
			],
			valueThemeKeys: ["--divide-width", "--border-width"],
			hasDefaultValue: !0
		}]), e("divide-x-reverse", [() => F([$("--tw-divide-x-reverse", "0")]), () => W(":where(& > :not(:last-child))", [l$1("--tw-divide-x-reverse", "1")])]), e("divide-y-reverse", [() => F([$("--tw-divide-y-reverse", "0")]), () => W(":where(& > :not(:last-child))", [l$1("--tw-divide-y-reverse", "1")])]);
		for (let h$1 of [
			"solid",
			"dashed",
			"dotted",
			"double",
			"none"
		]) e(`divide-${h$1}`, [() => W(":where(& > :not(:last-child))", [
			l$1("--tw-sort", "divide-style"),
			l$1("--tw-border-style", h$1),
			l$1("border-style", h$1)
		])]);
	}
	e("bg-auto", [["background-size", "auto"]]), e("bg-cover", [["background-size", "cover"]]), e("bg-contain", [["background-size", "contain"]]), n("bg-size", { handle(o) {
		if (o) return [l$1("background-size", o)];
	} }), e("bg-fixed", [["background-attachment", "fixed"]]), e("bg-local", [["background-attachment", "local"]]), e("bg-scroll", [["background-attachment", "scroll"]]), e("bg-top", [["background-position", "top"]]), e("bg-top-left", [["background-position", "left top"]]), e("bg-top-right", [["background-position", "right top"]]), e("bg-bottom", [["background-position", "bottom"]]), e("bg-bottom-left", [["background-position", "left bottom"]]), e("bg-bottom-right", [["background-position", "right bottom"]]), e("bg-left", [["background-position", "left"]]), e("bg-right", [["background-position", "right"]]), e("bg-center", [["background-position", "center"]]), n("bg-position", { handle(o) {
		if (o) return [l$1("background-position", o)];
	} }), e("bg-repeat", [["background-repeat", "repeat"]]), e("bg-no-repeat", [["background-repeat", "no-repeat"]]), e("bg-repeat-x", [["background-repeat", "repeat-x"]]), e("bg-repeat-y", [["background-repeat", "repeat-y"]]), e("bg-repeat-round", [["background-repeat", "round"]]), e("bg-repeat-space", [["background-repeat", "space"]]), e("bg-none", [["background-image", "none"]]);
	{
		let h$1 = function(C$1) {
			let P$1 = "in oklab";
			if (C$1?.kind === "named") switch (C$1.value) {
				case "longer":
				case "shorter":
				case "increasing":
				case "decreasing":
					P$1 = `in oklch ${C$1.value} hue`;
					break;
				default: P$1 = `in ${C$1.value}`;
			}
			else C$1?.kind === "arbitrary" && (P$1 = C$1.value);
			return P$1;
		}, A$1 = function({ negative: C$1 }) {
			return (P$1) => {
				if (!P$1.value) return;
				if (P$1.value.kind === "arbitrary") {
					if (P$1.modifier) return;
					let U$1 = P$1.value.value;
					switch (P$1.value.dataType ?? me(U$1, ["angle"])) {
						case "angle": return U$1 = C$1 ? `calc(${U$1} * -1)` : `${U$1}`, [l$1("--tw-gradient-position", U$1), l$1("background-image", `linear-gradient(var(--tw-gradient-stops,${U$1}))`)];
						default: return C$1 ? void 0 : [l$1("--tw-gradient-position", U$1), l$1("background-image", `linear-gradient(var(--tw-gradient-stops,${U$1}))`)];
					}
				}
				let V$1 = P$1.value.value;
				if (!C$1 && c.has(V$1)) V$1 = c.get(V$1);
				else if (u(V$1)) V$1 = C$1 ? `calc(${V$1}deg * -1)` : `${V$1}deg`;
				else return;
				let T$1 = h$1(P$1.modifier);
				return [
					l$1("--tw-gradient-position", `${V$1}`),
					H("@supports (background-image: linear-gradient(in lab, red, red))", [l$1("--tw-gradient-position", `${V$1} ${T$1}`)]),
					l$1("background-image", "linear-gradient(var(--tw-gradient-stops))")
				];
			};
		}, b$1 = function({ negative: C$1 }) {
			return (P$1) => {
				if (P$1.value?.kind === "arbitrary") {
					if (P$1.modifier) return;
					let U$1 = P$1.value.value;
					return [l$1("--tw-gradient-position", U$1), l$1("background-image", `conic-gradient(var(--tw-gradient-stops,${U$1}))`)];
				}
				let V$1 = h$1(P$1.modifier);
				if (!P$1.value) return [l$1("--tw-gradient-position", V$1), l$1("background-image", "conic-gradient(var(--tw-gradient-stops))")];
				let T$1 = P$1.value.value;
				if (u(T$1)) return T$1 = C$1 ? `calc(${T$1}deg * -1)` : `${T$1}deg`, [l$1("--tw-gradient-position", `from ${T$1} ${V$1}`), l$1("background-image", "conic-gradient(var(--tw-gradient-stops))")];
			};
		};
		let o = [
			"oklab",
			"oklch",
			"srgb",
			"hsl",
			"longer",
			"shorter",
			"increasing",
			"decreasing"
		], c = new Map([
			["to-t", "to top"],
			["to-tr", "to top right"],
			["to-r", "to right"],
			["to-br", "to bottom right"],
			["to-b", "to bottom"],
			["to-bl", "to bottom left"],
			["to-l", "to left"],
			["to-tl", "to top left"]
		]);
		t.functional("-bg-linear", A$1({ negative: !0 })), t.functional("bg-linear", A$1({ negative: !1 })), i("bg-linear", () => [{
			values: [...c.keys()],
			modifiers: o
		}, {
			values: [
				"0",
				"30",
				"60",
				"90",
				"120",
				"150",
				"180",
				"210",
				"240",
				"270",
				"300",
				"330"
			],
			supportsNegative: !0,
			modifiers: o
		}]), t.functional("-bg-conic", b$1({ negative: !0 })), t.functional("bg-conic", b$1({ negative: !1 })), i("bg-conic", () => [{
			hasDefaultValue: !0,
			modifiers: o
		}, {
			values: [
				"0",
				"30",
				"60",
				"90",
				"120",
				"150",
				"180",
				"210",
				"240",
				"270",
				"300",
				"330"
			],
			supportsNegative: !0,
			modifiers: o
		}]), t.functional("bg-radial", (C$1) => {
			if (!C$1.value) {
				let P$1 = h$1(C$1.modifier);
				return [l$1("--tw-gradient-position", P$1), l$1("background-image", "radial-gradient(var(--tw-gradient-stops))")];
			}
			if (C$1.value.kind === "arbitrary") {
				if (C$1.modifier) return;
				let P$1 = C$1.value.value;
				return [l$1("--tw-gradient-position", P$1), l$1("background-image", `radial-gradient(var(--tw-gradient-stops,${P$1}))`)];
			}
		}), i("bg-radial", () => [{
			hasDefaultValue: !0,
			modifiers: o
		}]);
	}
	t.functional("bg", (o) => {
		if (o.value) {
			if (o.value.kind === "arbitrary") {
				let c = o.value.value;
				switch (o.value.dataType ?? me(c, [
					"image",
					"color",
					"percentage",
					"position",
					"bg-size",
					"length",
					"url"
				])) {
					case "percentage":
					case "position": return o.modifier ? void 0 : [l$1("background-position", c)];
					case "bg-size":
					case "length":
					case "size": return o.modifier ? void 0 : [l$1("background-size", c)];
					case "image":
					case "url": return o.modifier ? void 0 : [l$1("background-image", c)];
					default: return c = X(c, o.modifier, r), c === null ? void 0 : [l$1("background-color", c)];
				}
			}
			{
				let c = te(o, r, ["--background-color", "--color"]);
				if (c) return [l$1("background-color", c)];
			}
			{
				if (o.modifier) return;
				let c = r.resolve(o.value.value, ["--background-image"]);
				if (c) return [l$1("background-image", c)];
			}
		}
	}), i("bg", () => [{
		values: [
			"current",
			"inherit",
			"transparent"
		],
		valueThemeKeys: ["--background-color", "--color"],
		modifiers: Array.from({ length: 21 }, (o, c) => `${c * 5}`)
	}, {
		values: [],
		valueThemeKeys: ["--background-image"]
	}]);
	let v$1 = () => F([
		$("--tw-gradient-position"),
		$("--tw-gradient-from", "#0000", "<color>"),
		$("--tw-gradient-via", "#0000", "<color>"),
		$("--tw-gradient-to", "#0000", "<color>"),
		$("--tw-gradient-stops"),
		$("--tw-gradient-via-stops"),
		$("--tw-gradient-from-position", "0%", "<length-percentage>"),
		$("--tw-gradient-via-position", "50%", "<length-percentage>"),
		$("--tw-gradient-to-position", "100%", "<length-percentage>")
	]);
	function y$1(o, c) {
		t.functional(o, (h$1) => {
			if (h$1.value) {
				if (h$1.value.kind === "arbitrary") {
					let A$1 = h$1.value.value;
					switch (h$1.value.dataType ?? me(A$1, [
						"color",
						"length",
						"percentage"
					])) {
						case "length":
						case "percentage": return h$1.modifier ? void 0 : c.position(A$1);
						default: return A$1 = X(A$1, h$1.modifier, r), A$1 === null ? void 0 : c.color(A$1);
					}
				}
				{
					let A$1 = te(h$1, r, ["--background-color", "--color"]);
					if (A$1) return c.color(A$1);
				}
				{
					if (h$1.modifier) return;
					let A$1 = r.resolve(h$1.value.value, ["--gradient-color-stop-positions"]);
					if (A$1) return c.position(A$1);
					if (h$1.value.value[h$1.value.value.length - 1] === "%" && u(h$1.value.value.slice(0, -1))) return c.position(h$1.value.value);
				}
			}
		}), i(o, () => [{
			values: [
				"current",
				"inherit",
				"transparent"
			],
			valueThemeKeys: ["--background-color", "--color"],
			modifiers: Array.from({ length: 21 }, (h$1, A$1) => `${A$1 * 5}`)
		}, {
			values: Array.from({ length: 21 }, (h$1, A$1) => `${A$1 * 5}%`),
			valueThemeKeys: ["--gradient-color-stop-positions"]
		}]);
	}
	y$1("from", {
		color: (o) => [
			v$1(),
			l$1("--tw-sort", "--tw-gradient-from"),
			l$1("--tw-gradient-from", o),
			l$1("--tw-gradient-stops", "var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position))")
		],
		position: (o) => [v$1(), l$1("--tw-gradient-from-position", o)]
	}), e("via-none", [["--tw-gradient-via-stops", "initial"]]), y$1("via", {
		color: (o) => [
			v$1(),
			l$1("--tw-sort", "--tw-gradient-via"),
			l$1("--tw-gradient-via", o),
			l$1("--tw-gradient-via-stops", "var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position)"),
			l$1("--tw-gradient-stops", "var(--tw-gradient-via-stops)")
		],
		position: (o) => [v$1(), l$1("--tw-gradient-via-position", o)]
	}), y$1("to", {
		color: (o) => [
			v$1(),
			l$1("--tw-sort", "--tw-gradient-to"),
			l$1("--tw-gradient-to", o),
			l$1("--tw-gradient-stops", "var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position))")
		],
		position: (o) => [v$1(), l$1("--tw-gradient-to-position", o)]
	}), e("mask-none", [["mask-image", "none"]]), t.functional("mask", (o) => {
		if (!o.value || o.modifier || o.value.kind !== "arbitrary") return;
		let c = o.value.value;
		switch (o.value.dataType ?? me(c, [
			"image",
			"percentage",
			"position",
			"bg-size",
			"length",
			"url"
		])) {
			case "percentage":
			case "position": return o.modifier ? void 0 : [l$1("mask-position", c)];
			case "bg-size":
			case "length":
			case "size": return [l$1("mask-size", c)];
			case "image":
			case "url":
			default: return [l$1("mask-image", c)];
		}
	}), e("mask-add", [["mask-composite", "add"]]), e("mask-subtract", [["mask-composite", "subtract"]]), e("mask-intersect", [["mask-composite", "intersect"]]), e("mask-exclude", [["mask-composite", "exclude"]]), e("mask-alpha", [["mask-mode", "alpha"]]), e("mask-luminance", [["mask-mode", "luminance"]]), e("mask-match", [["mask-mode", "match-source"]]), e("mask-type-alpha", [["mask-type", "alpha"]]), e("mask-type-luminance", [["mask-type", "luminance"]]), e("mask-auto", [["mask-size", "auto"]]), e("mask-cover", [["mask-size", "cover"]]), e("mask-contain", [["mask-size", "contain"]]), n("mask-size", { handle(o) {
		if (o) return [l$1("mask-size", o)];
	} }), e("mask-top", [["mask-position", "top"]]), e("mask-top-left", [["mask-position", "left top"]]), e("mask-top-right", [["mask-position", "right top"]]), e("mask-bottom", [["mask-position", "bottom"]]), e("mask-bottom-left", [["mask-position", "left bottom"]]), e("mask-bottom-right", [["mask-position", "right bottom"]]), e("mask-left", [["mask-position", "left"]]), e("mask-right", [["mask-position", "right"]]), e("mask-center", [["mask-position", "center"]]), n("mask-position", { handle(o) {
		if (o) return [l$1("mask-position", o)];
	} }), e("mask-repeat", [["mask-repeat", "repeat"]]), e("mask-no-repeat", [["mask-repeat", "no-repeat"]]), e("mask-repeat-x", [["mask-repeat", "repeat-x"]]), e("mask-repeat-y", [["mask-repeat", "repeat-y"]]), e("mask-repeat-round", [["mask-repeat", "round"]]), e("mask-repeat-space", [["mask-repeat", "space"]]), e("mask-clip-border", [["mask-clip", "border-box"]]), e("mask-clip-padding", [["mask-clip", "padding-box"]]), e("mask-clip-content", [["mask-clip", "content-box"]]), e("mask-clip-fill", [["mask-clip", "fill-box"]]), e("mask-clip-stroke", [["mask-clip", "stroke-box"]]), e("mask-clip-view", [["mask-clip", "view-box"]]), e("mask-no-clip", [["mask-clip", "no-clip"]]), e("mask-origin-border", [["mask-origin", "border-box"]]), e("mask-origin-padding", [["mask-origin", "padding-box"]]), e("mask-origin-content", [["mask-origin", "content-box"]]), e("mask-origin-fill", [["mask-origin", "fill-box"]]), e("mask-origin-stroke", [["mask-origin", "stroke-box"]]), e("mask-origin-view", [["mask-origin", "view-box"]]);
	let x$1 = () => F([
		$("--tw-mask-linear", "linear-gradient(#fff, #fff)"),
		$("--tw-mask-radial", "linear-gradient(#fff, #fff)"),
		$("--tw-mask-conic", "linear-gradient(#fff, #fff)")
	]);
	function N$1(o, c) {
		t.functional(o, (h$1) => {
			if (h$1.value) {
				if (h$1.value.kind === "arbitrary") {
					let A$1 = h$1.value.value;
					switch (h$1.value.dataType ?? me(A$1, [
						"length",
						"percentage",
						"color"
					])) {
						case "color": return A$1 = X(A$1, h$1.modifier, r), A$1 === null ? void 0 : c.color(A$1);
						case "percentage": return h$1.modifier || !u(A$1.slice(0, -1)) ? void 0 : c.position(A$1);
						default: return h$1.modifier ? void 0 : c.position(A$1);
					}
				}
				{
					let A$1 = te(h$1, r, ["--background-color", "--color"]);
					if (A$1) return c.color(A$1);
				}
				{
					if (h$1.modifier) return;
					let A$1 = me(h$1.value.value, ["number", "percentage"]);
					if (!A$1) return;
					switch (A$1) {
						case "number": {
							let b$1 = r.resolve(null, ["--spacing"]);
							return !b$1 || !ge(h$1.value.value) ? void 0 : c.position(`calc(${b$1} * ${h$1.value.value})`);
						}
						case "percentage": return u(h$1.value.value.slice(0, -1)) ? c.position(h$1.value.value) : void 0;
						default: return;
					}
				}
			}
		}), i(o, () => [{
			values: [
				"current",
				"inherit",
				"transparent"
			],
			valueThemeKeys: ["--background-color", "--color"],
			modifiers: Array.from({ length: 21 }, (h$1, A$1) => `${A$1 * 5}`)
		}, {
			values: Array.from({ length: 21 }, (h$1, A$1) => `${A$1 * 5}%`),
			valueThemeKeys: ["--gradient-color-stop-positions"]
		}]), i(o, () => [
			{ values: Array.from({ length: 21 }, (h$1, A$1) => `${A$1 * 5}%`) },
			{ values: r.get(["--spacing"]) ? Ze : [] },
			{
				values: [
					"current",
					"inherit",
					"transparent"
				],
				valueThemeKeys: ["--background-color", "--color"],
				modifiers: Array.from({ length: 21 }, (h$1, A$1) => `${A$1 * 5}`)
			}
		]);
	}
	let k = () => F([
		$("--tw-mask-left", "linear-gradient(#fff, #fff)"),
		$("--tw-mask-right", "linear-gradient(#fff, #fff)"),
		$("--tw-mask-bottom", "linear-gradient(#fff, #fff)"),
		$("--tw-mask-top", "linear-gradient(#fff, #fff)")
	]);
	function S$1(o, c, h$1) {
		N$1(o, {
			color(A$1) {
				let b$1 = [
					x$1(),
					k(),
					l$1("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
					l$1("mask-composite", "intersect"),
					l$1("--tw-mask-linear", "var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top)")
				];
				for (let C$1 of [
					"top",
					"right",
					"bottom",
					"left"
				]) h$1[C$1] && (b$1.push(l$1(`--tw-mask-${C$1}`, `linear-gradient(to ${C$1}, var(--tw-mask-${C$1}-from-color) var(--tw-mask-${C$1}-from-position), var(--tw-mask-${C$1}-to-color) var(--tw-mask-${C$1}-to-position))`)), b$1.push(F([
					$(`--tw-mask-${C$1}-from-position`, "0%"),
					$(`--tw-mask-${C$1}-to-position`, "100%"),
					$(`--tw-mask-${C$1}-from-color`, "black"),
					$(`--tw-mask-${C$1}-to-color`, "transparent")
				])), b$1.push(l$1(`--tw-mask-${C$1}-${c}-color`, A$1)));
				return b$1;
			},
			position(A$1) {
				let b$1 = [
					x$1(),
					k(),
					l$1("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
					l$1("mask-composite", "intersect"),
					l$1("--tw-mask-linear", "var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top)")
				];
				for (let C$1 of [
					"top",
					"right",
					"bottom",
					"left"
				]) h$1[C$1] && (b$1.push(l$1(`--tw-mask-${C$1}`, `linear-gradient(to ${C$1}, var(--tw-mask-${C$1}-from-color) var(--tw-mask-${C$1}-from-position), var(--tw-mask-${C$1}-to-color) var(--tw-mask-${C$1}-to-position))`)), b$1.push(F([
					$(`--tw-mask-${C$1}-from-position`, "0%"),
					$(`--tw-mask-${C$1}-to-position`, "100%"),
					$(`--tw-mask-${C$1}-from-color`, "black"),
					$(`--tw-mask-${C$1}-to-color`, "transparent")
				])), b$1.push(l$1(`--tw-mask-${C$1}-${c}-position`, A$1)));
				return b$1;
			}
		});
	}
	S$1("mask-x-from", "from", {
		top: !1,
		right: !0,
		bottom: !1,
		left: !0
	}), S$1("mask-x-to", "to", {
		top: !1,
		right: !0,
		bottom: !1,
		left: !0
	}), S$1("mask-y-from", "from", {
		top: !0,
		right: !1,
		bottom: !0,
		left: !1
	}), S$1("mask-y-to", "to", {
		top: !0,
		right: !1,
		bottom: !0,
		left: !1
	}), S$1("mask-t-from", "from", {
		top: !0,
		right: !1,
		bottom: !1,
		left: !1
	}), S$1("mask-t-to", "to", {
		top: !0,
		right: !1,
		bottom: !1,
		left: !1
	}), S$1("mask-r-from", "from", {
		top: !1,
		right: !0,
		bottom: !1,
		left: !1
	}), S$1("mask-r-to", "to", {
		top: !1,
		right: !0,
		bottom: !1,
		left: !1
	}), S$1("mask-b-from", "from", {
		top: !1,
		right: !1,
		bottom: !0,
		left: !1
	}), S$1("mask-b-to", "to", {
		top: !1,
		right: !1,
		bottom: !0,
		left: !1
	}), S$1("mask-l-from", "from", {
		top: !1,
		right: !1,
		bottom: !1,
		left: !0
	}), S$1("mask-l-to", "to", {
		top: !1,
		right: !1,
		bottom: !1,
		left: !0
	});
	let O$1 = () => F([
		$("--tw-mask-linear-position", "0deg"),
		$("--tw-mask-linear-from-position", "0%"),
		$("--tw-mask-linear-to-position", "100%"),
		$("--tw-mask-linear-from-color", "black"),
		$("--tw-mask-linear-to-color", "transparent")
	]);
	n("mask-linear", {
		defaultValue: null,
		supportsNegative: !0,
		supportsFractions: !1,
		handleBareValue(o) {
			return u(o.value) ? `calc(1deg * ${o.value})` : null;
		},
		handleNegativeBareValue(o) {
			return u(o.value) ? `calc(1deg * -${o.value})` : null;
		},
		handle: (o) => [
			x$1(),
			O$1(),
			l$1("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
			l$1("mask-composite", "intersect"),
			l$1("--tw-mask-linear", "linear-gradient(var(--tw-mask-linear-stops, var(--tw-mask-linear-position)))"),
			l$1("--tw-mask-linear-position", o)
		]
	}), i("mask-linear", () => [{
		supportsNegative: !0,
		values: [
			"0",
			"1",
			"2",
			"3",
			"6",
			"12",
			"45",
			"90",
			"180"
		]
	}]), N$1("mask-linear-from", {
		color: (o) => [
			x$1(),
			O$1(),
			l$1("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
			l$1("mask-composite", "intersect"),
			l$1("--tw-mask-linear-stops", "var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position)"),
			l$1("--tw-mask-linear", "linear-gradient(var(--tw-mask-linear-stops))"),
			l$1("--tw-mask-linear-from-color", o)
		],
		position: (o) => [
			x$1(),
			O$1(),
			l$1("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
			l$1("mask-composite", "intersect"),
			l$1("--tw-mask-linear-stops", "var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position)"),
			l$1("--tw-mask-linear", "linear-gradient(var(--tw-mask-linear-stops))"),
			l$1("--tw-mask-linear-from-position", o)
		]
	}), N$1("mask-linear-to", {
		color: (o) => [
			x$1(),
			O$1(),
			l$1("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
			l$1("mask-composite", "intersect"),
			l$1("--tw-mask-linear-stops", "var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position)"),
			l$1("--tw-mask-linear", "linear-gradient(var(--tw-mask-linear-stops))"),
			l$1("--tw-mask-linear-to-color", o)
		],
		position: (o) => [
			x$1(),
			O$1(),
			l$1("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
			l$1("mask-composite", "intersect"),
			l$1("--tw-mask-linear-stops", "var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position)"),
			l$1("--tw-mask-linear", "linear-gradient(var(--tw-mask-linear-stops))"),
			l$1("--tw-mask-linear-to-position", o)
		]
	});
	let K$1 = () => F([
		$("--tw-mask-radial-from-position", "0%"),
		$("--tw-mask-radial-to-position", "100%"),
		$("--tw-mask-radial-from-color", "black"),
		$("--tw-mask-radial-to-color", "transparent"),
		$("--tw-mask-radial-shape", "ellipse"),
		$("--tw-mask-radial-size", "farthest-corner"),
		$("--tw-mask-radial-position", "center")
	]);
	e("mask-circle", [["--tw-mask-radial-shape", "circle"]]), e("mask-ellipse", [["--tw-mask-radial-shape", "ellipse"]]), e("mask-radial-closest-side", [["--tw-mask-radial-size", "closest-side"]]), e("mask-radial-farthest-side", [["--tw-mask-radial-size", "farthest-side"]]), e("mask-radial-closest-corner", [["--tw-mask-radial-size", "closest-corner"]]), e("mask-radial-farthest-corner", [["--tw-mask-radial-size", "farthest-corner"]]), e("mask-radial-at-top", [["--tw-mask-radial-position", "top"]]), e("mask-radial-at-top-left", [["--tw-mask-radial-position", "top left"]]), e("mask-radial-at-top-right", [["--tw-mask-radial-position", "top right"]]), e("mask-radial-at-bottom", [["--tw-mask-radial-position", "bottom"]]), e("mask-radial-at-bottom-left", [["--tw-mask-radial-position", "bottom left"]]), e("mask-radial-at-bottom-right", [["--tw-mask-radial-position", "bottom right"]]), e("mask-radial-at-left", [["--tw-mask-radial-position", "left"]]), e("mask-radial-at-right", [["--tw-mask-radial-position", "right"]]), e("mask-radial-at-center", [["--tw-mask-radial-position", "center"]]), n("mask-radial-at", {
		defaultValue: null,
		supportsNegative: !1,
		supportsFractions: !1,
		handle: (o) => [l$1("--tw-mask-radial-position", o)]
	}), n("mask-radial", {
		defaultValue: null,
		supportsNegative: !1,
		supportsFractions: !1,
		handle: (o) => [
			x$1(),
			K$1(),
			l$1("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
			l$1("mask-composite", "intersect"),
			l$1("--tw-mask-radial", "radial-gradient(var(--tw-mask-radial-stops, var(--tw-mask-radial-size)))"),
			l$1("--tw-mask-radial-size", o)
		]
	}), N$1("mask-radial-from", {
		color: (o) => [
			x$1(),
			K$1(),
			l$1("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
			l$1("mask-composite", "intersect"),
			l$1("--tw-mask-radial-stops", "var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position)"),
			l$1("--tw-mask-radial", "radial-gradient(var(--tw-mask-radial-stops))"),
			l$1("--tw-mask-radial-from-color", o)
		],
		position: (o) => [
			x$1(),
			K$1(),
			l$1("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
			l$1("mask-composite", "intersect"),
			l$1("--tw-mask-radial-stops", "var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position)"),
			l$1("--tw-mask-radial", "radial-gradient(var(--tw-mask-radial-stops))"),
			l$1("--tw-mask-radial-from-position", o)
		]
	}), N$1("mask-radial-to", {
		color: (o) => [
			x$1(),
			K$1(),
			l$1("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
			l$1("mask-composite", "intersect"),
			l$1("--tw-mask-radial-stops", "var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position)"),
			l$1("--tw-mask-radial", "radial-gradient(var(--tw-mask-radial-stops))"),
			l$1("--tw-mask-radial-to-color", o)
		],
		position: (o) => [
			x$1(),
			K$1(),
			l$1("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
			l$1("mask-composite", "intersect"),
			l$1("--tw-mask-radial-stops", "var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position)"),
			l$1("--tw-mask-radial", "radial-gradient(var(--tw-mask-radial-stops))"),
			l$1("--tw-mask-radial-to-position", o)
		]
	});
	let R$1 = () => F([
		$("--tw-mask-conic-position", "0deg"),
		$("--tw-mask-conic-from-position", "0%"),
		$("--tw-mask-conic-to-position", "100%"),
		$("--tw-mask-conic-from-color", "black"),
		$("--tw-mask-conic-to-color", "transparent")
	]);
	n("mask-conic", {
		defaultValue: null,
		supportsNegative: !0,
		supportsFractions: !1,
		handleBareValue(o) {
			return u(o.value) ? `calc(1deg * ${o.value})` : null;
		},
		handleNegativeBareValue(o) {
			return u(o.value) ? `calc(1deg * -${o.value})` : null;
		},
		handle: (o) => [
			x$1(),
			R$1(),
			l$1("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
			l$1("mask-composite", "intersect"),
			l$1("--tw-mask-conic", "conic-gradient(var(--tw-mask-conic-stops, var(--tw-mask-conic-position)))"),
			l$1("--tw-mask-conic-position", o)
		]
	}), i("mask-conic", () => [{
		supportsNegative: !0,
		values: [
			"0",
			"1",
			"2",
			"3",
			"6",
			"12",
			"45",
			"90",
			"180"
		]
	}]), N$1("mask-conic-from", {
		color: (o) => [
			x$1(),
			R$1(),
			l$1("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
			l$1("mask-composite", "intersect"),
			l$1("--tw-mask-conic-stops", "from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position)"),
			l$1("--tw-mask-conic", "conic-gradient(var(--tw-mask-conic-stops))"),
			l$1("--tw-mask-conic-from-color", o)
		],
		position: (o) => [
			x$1(),
			R$1(),
			l$1("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
			l$1("mask-composite", "intersect"),
			l$1("--tw-mask-conic-stops", "from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position)"),
			l$1("--tw-mask-conic", "conic-gradient(var(--tw-mask-conic-stops))"),
			l$1("--tw-mask-conic-from-position", o)
		]
	}), N$1("mask-conic-to", {
		color: (o) => [
			x$1(),
			R$1(),
			l$1("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
			l$1("mask-composite", "intersect"),
			l$1("--tw-mask-conic-stops", "from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position)"),
			l$1("--tw-mask-conic", "conic-gradient(var(--tw-mask-conic-stops))"),
			l$1("--tw-mask-conic-to-color", o)
		],
		position: (o) => [
			x$1(),
			R$1(),
			l$1("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
			l$1("mask-composite", "intersect"),
			l$1("--tw-mask-conic-stops", "from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position)"),
			l$1("--tw-mask-conic", "conic-gradient(var(--tw-mask-conic-stops))"),
			l$1("--tw-mask-conic-to-position", o)
		]
	}), e("box-decoration-slice", [["-webkit-box-decoration-break", "slice"], ["box-decoration-break", "slice"]]), e("box-decoration-clone", [["-webkit-box-decoration-break", "clone"], ["box-decoration-break", "clone"]]), e("bg-clip-text", [["background-clip", "text"]]), e("bg-clip-border", [["background-clip", "border-box"]]), e("bg-clip-padding", [["background-clip", "padding-box"]]), e("bg-clip-content", [["background-clip", "content-box"]]), e("bg-origin-border", [["background-origin", "border-box"]]), e("bg-origin-padding", [["background-origin", "padding-box"]]), e("bg-origin-content", [["background-origin", "content-box"]]);
	for (let o of [
		"normal",
		"multiply",
		"screen",
		"overlay",
		"darken",
		"lighten",
		"color-dodge",
		"color-burn",
		"hard-light",
		"soft-light",
		"difference",
		"exclusion",
		"hue",
		"saturation",
		"color",
		"luminosity"
	]) e(`bg-blend-${o}`, [["background-blend-mode", o]]), e(`mix-blend-${o}`, [["mix-blend-mode", o]]);
	e("mix-blend-plus-darker", [["mix-blend-mode", "plus-darker"]]), e("mix-blend-plus-lighter", [["mix-blend-mode", "plus-lighter"]]), e("fill-none", [["fill", "none"]]), t.functional("fill", (o) => {
		if (!o.value) return;
		if (o.value.kind === "arbitrary") {
			let h$1 = X(o.value.value, o.modifier, r);
			return h$1 === null ? void 0 : [l$1("fill", h$1)];
		}
		let c = te(o, r, ["--fill", "--color"]);
		if (c) return [l$1("fill", c)];
	}), i("fill", () => [{
		values: [
			"current",
			"inherit",
			"transparent"
		],
		valueThemeKeys: ["--fill", "--color"],
		modifiers: Array.from({ length: 21 }, (o, c) => `${c * 5}`)
	}]), e("stroke-none", [["stroke", "none"]]), t.functional("stroke", (o) => {
		if (o.value) {
			if (o.value.kind === "arbitrary") {
				let c = o.value.value;
				switch (o.value.dataType ?? me(c, [
					"color",
					"number",
					"length",
					"percentage"
				])) {
					case "number":
					case "length":
					case "percentage": return o.modifier ? void 0 : [l$1("stroke-width", c)];
					default: return c = X(o.value.value, o.modifier, r), c === null ? void 0 : [l$1("stroke", c)];
				}
			}
			{
				let c = te(o, r, ["--stroke", "--color"]);
				if (c) return [l$1("stroke", c)];
			}
			{
				let c = r.resolve(o.value.value, ["--stroke-width"]);
				if (c) return [l$1("stroke-width", c)];
				if (u(o.value.value)) return [l$1("stroke-width", o.value.value)];
			}
		}
	}), i("stroke", () => [{
		values: [
			"current",
			"inherit",
			"transparent"
		],
		valueThemeKeys: ["--stroke", "--color"],
		modifiers: Array.from({ length: 21 }, (o, c) => `${c * 5}`)
	}, {
		values: [
			"0",
			"1",
			"2",
			"3"
		],
		valueThemeKeys: ["--stroke-width"]
	}]), e("object-contain", [["object-fit", "contain"]]), e("object-cover", [["object-fit", "cover"]]), e("object-fill", [["object-fit", "fill"]]), e("object-none", [["object-fit", "none"]]), e("object-scale-down", [["object-fit", "scale-down"]]), e("object-top", [["object-position", "top"]]), e("object-top-left", [["object-position", "left top"]]), e("object-top-right", [["object-position", "right top"]]), e("object-bottom", [["object-position", "bottom"]]), e("object-bottom-left", [["object-position", "left bottom"]]), e("object-bottom-right", [["object-position", "right bottom"]]), e("object-left", [["object-position", "left"]]), e("object-right", [["object-position", "right"]]), e("object-center", [["object-position", "center"]]), n("object", {
		themeKeys: ["--object-position"],
		handle: (o) => [l$1("object-position", o)]
	});
	for (let [o, c] of [
		["p", "padding"],
		["px", "padding-inline"],
		["py", "padding-block"],
		["ps", "padding-inline-start"],
		["pe", "padding-inline-end"],
		["pt", "padding-top"],
		["pr", "padding-right"],
		["pb", "padding-bottom"],
		["pl", "padding-left"]
	]) a(o, ["--padding", "--spacing"], (h$1) => [l$1(c, h$1)]);
	e("text-left", [["text-align", "left"]]), e("text-center", [["text-align", "center"]]), e("text-right", [["text-align", "right"]]), e("text-justify", [["text-align", "justify"]]), e("text-start", [["text-align", "start"]]), e("text-end", [["text-align", "end"]]), a("indent", ["--text-indent", "--spacing"], (o) => [l$1("text-indent", o)], { supportsNegative: !0 }), e("align-baseline", [["vertical-align", "baseline"]]), e("align-top", [["vertical-align", "top"]]), e("align-middle", [["vertical-align", "middle"]]), e("align-bottom", [["vertical-align", "bottom"]]), e("align-text-top", [["vertical-align", "text-top"]]), e("align-text-bottom", [["vertical-align", "text-bottom"]]), e("align-sub", [["vertical-align", "sub"]]), e("align-super", [["vertical-align", "super"]]), n("align", {
		themeKeys: [],
		handle: (o) => [l$1("vertical-align", o)]
	}), t.functional("font", (o) => {
		if (!(!o.value || o.modifier)) {
			if (o.value.kind === "arbitrary") {
				let c = o.value.value;
				switch (o.value.dataType ?? me(c, [
					"number",
					"generic-name",
					"family-name"
				])) {
					case "generic-name":
					case "family-name": return [l$1("font-family", c)];
					default: return [
						F([$("--tw-font-weight")]),
						l$1("--tw-font-weight", c),
						l$1("font-weight", c)
					];
				}
			}
			{
				let c = r.resolveWith(o.value.value, ["--font"], ["--font-feature-settings", "--font-variation-settings"]);
				if (c) {
					let [h$1, A$1 = {}] = c;
					return [
						l$1("font-family", h$1),
						l$1("font-feature-settings", A$1["--font-feature-settings"]),
						l$1("font-variation-settings", A$1["--font-variation-settings"])
					];
				}
			}
			{
				let c = r.resolve(o.value.value, ["--font-weight"]);
				if (c) return [
					F([$("--tw-font-weight")]),
					l$1("--tw-font-weight", c),
					l$1("font-weight", c)
				];
			}
		}
	}), i("font", () => [{
		values: [],
		valueThemeKeys: ["--font"]
	}, {
		values: [],
		valueThemeKeys: ["--font-weight"]
	}]), e("uppercase", [["text-transform", "uppercase"]]), e("lowercase", [["text-transform", "lowercase"]]), e("capitalize", [["text-transform", "capitalize"]]), e("normal-case", [["text-transform", "none"]]), e("italic", [["font-style", "italic"]]), e("not-italic", [["font-style", "normal"]]), e("underline", [["text-decoration-line", "underline"]]), e("overline", [["text-decoration-line", "overline"]]), e("line-through", [["text-decoration-line", "line-through"]]), e("no-underline", [["text-decoration-line", "none"]]), e("font-stretch-normal", [["font-stretch", "normal"]]), e("font-stretch-ultra-condensed", [["font-stretch", "ultra-condensed"]]), e("font-stretch-extra-condensed", [["font-stretch", "extra-condensed"]]), e("font-stretch-condensed", [["font-stretch", "condensed"]]), e("font-stretch-semi-condensed", [["font-stretch", "semi-condensed"]]), e("font-stretch-semi-expanded", [["font-stretch", "semi-expanded"]]), e("font-stretch-expanded", [["font-stretch", "expanded"]]), e("font-stretch-extra-expanded", [["font-stretch", "extra-expanded"]]), e("font-stretch-ultra-expanded", [["font-stretch", "ultra-expanded"]]), n("font-stretch", {
		handleBareValue: ({ value: o }) => {
			if (!o.endsWith("%")) return null;
			let c = Number(o.slice(0, -1));
			return !u(c) || Number.isNaN(c) || c < 50 || c > 200 ? null : o;
		},
		handle: (o) => [l$1("font-stretch", o)]
	}), i("font-stretch", () => [{ values: [
		"50%",
		"75%",
		"90%",
		"95%",
		"100%",
		"105%",
		"110%",
		"125%",
		"150%",
		"200%"
	] }]), s("placeholder", {
		themeKeys: ["--background-color", "--color"],
		handle: (o) => [W("&::placeholder", [l$1("--tw-sort", "placeholder-color"), l$1("color", o)])]
	}), e("decoration-solid", [["text-decoration-style", "solid"]]), e("decoration-double", [["text-decoration-style", "double"]]), e("decoration-dotted", [["text-decoration-style", "dotted"]]), e("decoration-dashed", [["text-decoration-style", "dashed"]]), e("decoration-wavy", [["text-decoration-style", "wavy"]]), e("decoration-auto", [["text-decoration-thickness", "auto"]]), e("decoration-from-font", [["text-decoration-thickness", "from-font"]]), t.functional("decoration", (o) => {
		if (o.value) {
			if (o.value.kind === "arbitrary") {
				let c = o.value.value;
				switch (o.value.dataType ?? me(c, [
					"color",
					"length",
					"percentage"
				])) {
					case "length":
					case "percentage": return o.modifier ? void 0 : [l$1("text-decoration-thickness", c)];
					default: return c = X(c, o.modifier, r), c === null ? void 0 : [l$1("text-decoration-color", c)];
				}
			}
			{
				let c = r.resolve(o.value.value, ["--text-decoration-thickness"]);
				if (c) return o.modifier ? void 0 : [l$1("text-decoration-thickness", c)];
				if (u(o.value.value)) return o.modifier ? void 0 : [l$1("text-decoration-thickness", `${o.value.value}px`)];
			}
			{
				let c = te(o, r, ["--text-decoration-color", "--color"]);
				if (c) return [l$1("text-decoration-color", c)];
			}
		}
	}), i("decoration", () => [{
		values: [
			"current",
			"inherit",
			"transparent"
		],
		valueThemeKeys: ["--text-decoration-color", "--color"],
		modifiers: Array.from({ length: 21 }, (o, c) => `${c * 5}`)
	}, {
		values: [
			"0",
			"1",
			"2"
		],
		valueThemeKeys: ["--text-decoration-thickness"]
	}]), e("animate-none", [["animation", "none"]]), n("animate", {
		themeKeys: ["--animate"],
		handle: (o) => [l$1("animation", o)]
	});
	{
		let o = [
			"var(--tw-blur,)",
			"var(--tw-brightness,)",
			"var(--tw-contrast,)",
			"var(--tw-grayscale,)",
			"var(--tw-hue-rotate,)",
			"var(--tw-invert,)",
			"var(--tw-saturate,)",
			"var(--tw-sepia,)",
			"var(--tw-drop-shadow,)"
		].join(" "), c = [
			"var(--tw-backdrop-blur,)",
			"var(--tw-backdrop-brightness,)",
			"var(--tw-backdrop-contrast,)",
			"var(--tw-backdrop-grayscale,)",
			"var(--tw-backdrop-hue-rotate,)",
			"var(--tw-backdrop-invert,)",
			"var(--tw-backdrop-opacity,)",
			"var(--tw-backdrop-saturate,)",
			"var(--tw-backdrop-sepia,)"
		].join(" "), h$1 = () => F([
			$("--tw-blur"),
			$("--tw-brightness"),
			$("--tw-contrast"),
			$("--tw-grayscale"),
			$("--tw-hue-rotate"),
			$("--tw-invert"),
			$("--tw-opacity"),
			$("--tw-saturate"),
			$("--tw-sepia"),
			$("--tw-drop-shadow"),
			$("--tw-drop-shadow-color"),
			$("--tw-drop-shadow-alpha", "100%", "<percentage>"),
			$("--tw-drop-shadow-size")
		]), A$1 = () => F([
			$("--tw-backdrop-blur"),
			$("--tw-backdrop-brightness"),
			$("--tw-backdrop-contrast"),
			$("--tw-backdrop-grayscale"),
			$("--tw-backdrop-hue-rotate"),
			$("--tw-backdrop-invert"),
			$("--tw-backdrop-opacity"),
			$("--tw-backdrop-saturate"),
			$("--tw-backdrop-sepia")
		]);
		t.functional("filter", (b$1) => {
			if (!b$1.modifier) {
				if (b$1.value === null) return [h$1(), l$1("filter", o)];
				if (b$1.value.kind === "arbitrary") return [l$1("filter", b$1.value.value)];
				switch (b$1.value.value) {
					case "none": return [l$1("filter", "none")];
				}
			}
		}), t.functional("backdrop-filter", (b$1) => {
			if (!b$1.modifier) {
				if (b$1.value === null) return [
					A$1(),
					l$1("-webkit-backdrop-filter", c),
					l$1("backdrop-filter", c)
				];
				if (b$1.value.kind === "arbitrary") return [l$1("-webkit-backdrop-filter", b$1.value.value), l$1("backdrop-filter", b$1.value.value)];
				switch (b$1.value.value) {
					case "none": return [l$1("-webkit-backdrop-filter", "none"), l$1("backdrop-filter", "none")];
				}
			}
		}), n("blur", {
			themeKeys: ["--blur"],
			handle: (b$1) => [
				h$1(),
				l$1("--tw-blur", `blur(${b$1})`),
				l$1("filter", o)
			]
		}), e("blur-none", [
			h$1,
			["--tw-blur", " "],
			["filter", o]
		]), n("backdrop-blur", {
			themeKeys: ["--backdrop-blur", "--blur"],
			handle: (b$1) => [
				A$1(),
				l$1("--tw-backdrop-blur", `blur(${b$1})`),
				l$1("-webkit-backdrop-filter", c),
				l$1("backdrop-filter", c)
			]
		}), e("backdrop-blur-none", [
			A$1,
			["--tw-backdrop-blur", " "],
			["-webkit-backdrop-filter", c],
			["backdrop-filter", c]
		]), n("brightness", {
			themeKeys: ["--brightness"],
			handleBareValue: ({ value: b$1 }) => u(b$1) ? `${b$1}%` : null,
			handle: (b$1) => [
				h$1(),
				l$1("--tw-brightness", `brightness(${b$1})`),
				l$1("filter", o)
			]
		}), n("backdrop-brightness", {
			themeKeys: ["--backdrop-brightness", "--brightness"],
			handleBareValue: ({ value: b$1 }) => u(b$1) ? `${b$1}%` : null,
			handle: (b$1) => [
				A$1(),
				l$1("--tw-backdrop-brightness", `brightness(${b$1})`),
				l$1("-webkit-backdrop-filter", c),
				l$1("backdrop-filter", c)
			]
		}), i("brightness", () => [{
			values: [
				"0",
				"50",
				"75",
				"90",
				"95",
				"100",
				"105",
				"110",
				"125",
				"150",
				"200"
			],
			valueThemeKeys: ["--brightness"]
		}]), i("backdrop-brightness", () => [{
			values: [
				"0",
				"50",
				"75",
				"90",
				"95",
				"100",
				"105",
				"110",
				"125",
				"150",
				"200"
			],
			valueThemeKeys: ["--backdrop-brightness", "--brightness"]
		}]), n("contrast", {
			themeKeys: ["--contrast"],
			handleBareValue: ({ value: b$1 }) => u(b$1) ? `${b$1}%` : null,
			handle: (b$1) => [
				h$1(),
				l$1("--tw-contrast", `contrast(${b$1})`),
				l$1("filter", o)
			]
		}), n("backdrop-contrast", {
			themeKeys: ["--backdrop-contrast", "--contrast"],
			handleBareValue: ({ value: b$1 }) => u(b$1) ? `${b$1}%` : null,
			handle: (b$1) => [
				A$1(),
				l$1("--tw-backdrop-contrast", `contrast(${b$1})`),
				l$1("-webkit-backdrop-filter", c),
				l$1("backdrop-filter", c)
			]
		}), i("contrast", () => [{
			values: [
				"0",
				"50",
				"75",
				"100",
				"125",
				"150",
				"200"
			],
			valueThemeKeys: ["--contrast"]
		}]), i("backdrop-contrast", () => [{
			values: [
				"0",
				"50",
				"75",
				"100",
				"125",
				"150",
				"200"
			],
			valueThemeKeys: ["--backdrop-contrast", "--contrast"]
		}]), n("grayscale", {
			themeKeys: ["--grayscale"],
			handleBareValue: ({ value: b$1 }) => u(b$1) ? `${b$1}%` : null,
			defaultValue: "100%",
			handle: (b$1) => [
				h$1(),
				l$1("--tw-grayscale", `grayscale(${b$1})`),
				l$1("filter", o)
			]
		}), n("backdrop-grayscale", {
			themeKeys: ["--backdrop-grayscale", "--grayscale"],
			handleBareValue: ({ value: b$1 }) => u(b$1) ? `${b$1}%` : null,
			defaultValue: "100%",
			handle: (b$1) => [
				A$1(),
				l$1("--tw-backdrop-grayscale", `grayscale(${b$1})`),
				l$1("-webkit-backdrop-filter", c),
				l$1("backdrop-filter", c)
			]
		}), i("grayscale", () => [{
			values: [
				"0",
				"25",
				"50",
				"75",
				"100"
			],
			valueThemeKeys: ["--grayscale"],
			hasDefaultValue: !0
		}]), i("backdrop-grayscale", () => [{
			values: [
				"0",
				"25",
				"50",
				"75",
				"100"
			],
			valueThemeKeys: ["--backdrop-grayscale", "--grayscale"],
			hasDefaultValue: !0
		}]), n("hue-rotate", {
			supportsNegative: !0,
			themeKeys: ["--hue-rotate"],
			handleBareValue: ({ value: b$1 }) => u(b$1) ? `${b$1}deg` : null,
			handle: (b$1) => [
				h$1(),
				l$1("--tw-hue-rotate", `hue-rotate(${b$1})`),
				l$1("filter", o)
			]
		}), n("backdrop-hue-rotate", {
			supportsNegative: !0,
			themeKeys: ["--backdrop-hue-rotate", "--hue-rotate"],
			handleBareValue: ({ value: b$1 }) => u(b$1) ? `${b$1}deg` : null,
			handle: (b$1) => [
				A$1(),
				l$1("--tw-backdrop-hue-rotate", `hue-rotate(${b$1})`),
				l$1("-webkit-backdrop-filter", c),
				l$1("backdrop-filter", c)
			]
		}), i("hue-rotate", () => [{
			values: [
				"0",
				"15",
				"30",
				"60",
				"90",
				"180"
			],
			valueThemeKeys: ["--hue-rotate"]
		}]), i("backdrop-hue-rotate", () => [{
			values: [
				"0",
				"15",
				"30",
				"60",
				"90",
				"180"
			],
			valueThemeKeys: ["--backdrop-hue-rotate", "--hue-rotate"]
		}]), n("invert", {
			themeKeys: ["--invert"],
			handleBareValue: ({ value: b$1 }) => u(b$1) ? `${b$1}%` : null,
			defaultValue: "100%",
			handle: (b$1) => [
				h$1(),
				l$1("--tw-invert", `invert(${b$1})`),
				l$1("filter", o)
			]
		}), n("backdrop-invert", {
			themeKeys: ["--backdrop-invert", "--invert"],
			handleBareValue: ({ value: b$1 }) => u(b$1) ? `${b$1}%` : null,
			defaultValue: "100%",
			handle: (b$1) => [
				A$1(),
				l$1("--tw-backdrop-invert", `invert(${b$1})`),
				l$1("-webkit-backdrop-filter", c),
				l$1("backdrop-filter", c)
			]
		}), i("invert", () => [{
			values: [
				"0",
				"25",
				"50",
				"75",
				"100"
			],
			valueThemeKeys: ["--invert"],
			hasDefaultValue: !0
		}]), i("backdrop-invert", () => [{
			values: [
				"0",
				"25",
				"50",
				"75",
				"100"
			],
			valueThemeKeys: ["--backdrop-invert", "--invert"],
			hasDefaultValue: !0
		}]), n("saturate", {
			themeKeys: ["--saturate"],
			handleBareValue: ({ value: b$1 }) => u(b$1) ? `${b$1}%` : null,
			handle: (b$1) => [
				h$1(),
				l$1("--tw-saturate", `saturate(${b$1})`),
				l$1("filter", o)
			]
		}), n("backdrop-saturate", {
			themeKeys: ["--backdrop-saturate", "--saturate"],
			handleBareValue: ({ value: b$1 }) => u(b$1) ? `${b$1}%` : null,
			handle: (b$1) => [
				A$1(),
				l$1("--tw-backdrop-saturate", `saturate(${b$1})`),
				l$1("-webkit-backdrop-filter", c),
				l$1("backdrop-filter", c)
			]
		}), i("saturate", () => [{
			values: [
				"0",
				"50",
				"100",
				"150",
				"200"
			],
			valueThemeKeys: ["--saturate"]
		}]), i("backdrop-saturate", () => [{
			values: [
				"0",
				"50",
				"100",
				"150",
				"200"
			],
			valueThemeKeys: ["--backdrop-saturate", "--saturate"]
		}]), n("sepia", {
			themeKeys: ["--sepia"],
			handleBareValue: ({ value: b$1 }) => u(b$1) ? `${b$1}%` : null,
			defaultValue: "100%",
			handle: (b$1) => [
				h$1(),
				l$1("--tw-sepia", `sepia(${b$1})`),
				l$1("filter", o)
			]
		}), n("backdrop-sepia", {
			themeKeys: ["--backdrop-sepia", "--sepia"],
			handleBareValue: ({ value: b$1 }) => u(b$1) ? `${b$1}%` : null,
			defaultValue: "100%",
			handle: (b$1) => [
				A$1(),
				l$1("--tw-backdrop-sepia", `sepia(${b$1})`),
				l$1("-webkit-backdrop-filter", c),
				l$1("backdrop-filter", c)
			]
		}), i("sepia", () => [{
			values: [
				"0",
				"50",
				"100"
			],
			valueThemeKeys: ["--sepia"],
			hasDefaultValue: !0
		}]), i("backdrop-sepia", () => [{
			values: [
				"0",
				"50",
				"100"
			],
			valueThemeKeys: ["--backdrop-sepia", "--sepia"],
			hasDefaultValue: !0
		}]), e("drop-shadow-none", [
			h$1,
			["--tw-drop-shadow", " "],
			["filter", o]
		]), t.functional("drop-shadow", (b$1) => {
			let C$1;
			if (b$1.modifier && (b$1.modifier.kind === "arbitrary" ? C$1 = b$1.modifier.value : u(b$1.modifier.value) && (C$1 = `${b$1.modifier.value}%`)), !b$1.value) {
				let P$1 = r.get(["--drop-shadow"]), V$1 = r.resolve(null, ["--drop-shadow"]);
				return P$1 === null || V$1 === null ? void 0 : [
					h$1(),
					l$1("--tw-drop-shadow-alpha", C$1),
					...Ye("--tw-drop-shadow-size", P$1, C$1, (T$1) => `var(--tw-drop-shadow-color, ${T$1})`),
					l$1("--tw-drop-shadow", d(V$1, ",").map((T$1) => `drop-shadow(${T$1})`).join(" ")),
					l$1("filter", o)
				];
			}
			if (b$1.value.kind === "arbitrary") {
				let P$1 = b$1.value.value;
				switch (b$1.value.dataType ?? me(P$1, ["color"])) {
					case "color": return P$1 = X(P$1, b$1.modifier, r), P$1 === null ? void 0 : [
						h$1(),
						l$1("--tw-drop-shadow-color", Q(P$1, "var(--tw-drop-shadow-alpha)")),
						l$1("--tw-drop-shadow", "var(--tw-drop-shadow-size)")
					];
					default: return b$1.modifier && !C$1 ? void 0 : [
						h$1(),
						l$1("--tw-drop-shadow-alpha", C$1),
						...Ye("--tw-drop-shadow-size", P$1, C$1, (T$1) => `var(--tw-drop-shadow-color, ${T$1})`),
						l$1("--tw-drop-shadow", "var(--tw-drop-shadow-size)"),
						l$1("filter", o)
					];
				}
			}
			{
				let P$1 = r.get([`--drop-shadow-${b$1.value.value}`]), V$1 = r.resolve(b$1.value.value, ["--drop-shadow"]);
				if (P$1 && V$1) return b$1.modifier && !C$1 ? void 0 : C$1 ? [
					h$1(),
					l$1("--tw-drop-shadow-alpha", C$1),
					...Ye("--tw-drop-shadow-size", P$1, C$1, (T$1) => `var(--tw-drop-shadow-color, ${T$1})`),
					l$1("--tw-drop-shadow", "var(--tw-drop-shadow-size)"),
					l$1("filter", o)
				] : [
					h$1(),
					l$1("--tw-drop-shadow-alpha", C$1),
					...Ye("--tw-drop-shadow-size", P$1, C$1, (T$1) => `var(--tw-drop-shadow-color, ${T$1})`),
					l$1("--tw-drop-shadow", d(V$1, ",").map((T$1) => `drop-shadow(${T$1})`).join(" ")),
					l$1("filter", o)
				];
			}
			{
				let P$1 = te(b$1, r, ["--drop-shadow-color", "--color"]);
				if (P$1) return P$1 === "inherit" ? [
					h$1(),
					l$1("--tw-drop-shadow-color", "inherit"),
					l$1("--tw-drop-shadow", "var(--tw-drop-shadow-size)")
				] : [
					h$1(),
					l$1("--tw-drop-shadow-color", Q(P$1, "var(--tw-drop-shadow-alpha)")),
					l$1("--tw-drop-shadow", "var(--tw-drop-shadow-size)")
				];
			}
		}), i("drop-shadow", () => [{
			values: [
				"current",
				"inherit",
				"transparent"
			],
			valueThemeKeys: ["--drop-shadow-color", "--color"],
			modifiers: Array.from({ length: 21 }, (b$1, C$1) => `${C$1 * 5}`)
		}, { valueThemeKeys: ["--drop-shadow"] }]), n("backdrop-opacity", {
			themeKeys: ["--backdrop-opacity", "--opacity"],
			handleBareValue: ({ value: b$1 }) => ue(b$1) ? `${b$1}%` : null,
			handle: (b$1) => [
				A$1(),
				l$1("--tw-backdrop-opacity", `opacity(${b$1})`),
				l$1("-webkit-backdrop-filter", c),
				l$1("backdrop-filter", c)
			]
		}), i("backdrop-opacity", () => [{
			values: Array.from({ length: 21 }, (b$1, C$1) => `${C$1 * 5}`),
			valueThemeKeys: ["--backdrop-opacity", "--opacity"]
		}]);
	}
	{
		let o = `var(--tw-ease, ${r.resolve(null, ["--default-transition-timing-function"]) ?? "ease"})`, c = `var(--tw-duration, ${r.resolve(null, ["--default-transition-duration"]) ?? "0s"})`;
		e("transition-none", [["transition-property", "none"]]), e("transition-all", [
			["transition-property", "all"],
			["transition-timing-function", o],
			["transition-duration", c]
		]), e("transition-colors", [
			["transition-property", "color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to"],
			["transition-timing-function", o],
			["transition-duration", c]
		]), e("transition-opacity", [
			["transition-property", "opacity"],
			["transition-timing-function", o],
			["transition-duration", c]
		]), e("transition-shadow", [
			["transition-property", "box-shadow"],
			["transition-timing-function", o],
			["transition-duration", c]
		]), e("transition-transform", [
			["transition-property", "transform, translate, scale, rotate"],
			["transition-timing-function", o],
			["transition-duration", c]
		]), n("transition", {
			defaultValue: "color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, content-visibility, overlay, pointer-events",
			themeKeys: ["--transition-property"],
			handle: (h$1) => [
				l$1("transition-property", h$1),
				l$1("transition-timing-function", o),
				l$1("transition-duration", c)
			]
		}), e("transition-discrete", [["transition-behavior", "allow-discrete"]]), e("transition-normal", [["transition-behavior", "normal"]]), n("delay", {
			handleBareValue: ({ value: h$1 }) => u(h$1) ? `${h$1}ms` : null,
			themeKeys: ["--transition-delay"],
			handle: (h$1) => [l$1("transition-delay", h$1)]
		});
		{
			let h$1 = () => F([$("--tw-duration")]);
			e("duration-initial", [h$1, ["--tw-duration", "initial"]]), t.functional("duration", (A$1) => {
				if (A$1.modifier || !A$1.value) return;
				let b$1 = null;
				if (A$1.value.kind === "arbitrary" ? b$1 = A$1.value.value : (b$1 = r.resolve(A$1.value.fraction ?? A$1.value.value, ["--transition-duration"]), b$1 === null && u(A$1.value.value) && (b$1 = `${A$1.value.value}ms`)), b$1 !== null) return [
					h$1(),
					l$1("--tw-duration", b$1),
					l$1("transition-duration", b$1)
				];
			});
		}
		i("delay", () => [{
			values: [
				"75",
				"100",
				"150",
				"200",
				"300",
				"500",
				"700",
				"1000"
			],
			valueThemeKeys: ["--transition-delay"]
		}]), i("duration", () => [{
			values: [
				"75",
				"100",
				"150",
				"200",
				"300",
				"500",
				"700",
				"1000"
			],
			valueThemeKeys: ["--transition-duration"]
		}]);
	}
	{
		let o = () => F([$("--tw-ease")]);
		e("ease-initial", [o, ["--tw-ease", "initial"]]), e("ease-linear", [
			o,
			["--tw-ease", "linear"],
			["transition-timing-function", "linear"]
		]), n("ease", {
			themeKeys: ["--ease"],
			handle: (c) => [
				o(),
				l$1("--tw-ease", c),
				l$1("transition-timing-function", c)
			]
		});
	}
	e("will-change-auto", [["will-change", "auto"]]), e("will-change-scroll", [["will-change", "scroll-position"]]), e("will-change-contents", [["will-change", "contents"]]), e("will-change-transform", [["will-change", "transform"]]), n("will-change", {
		themeKeys: [],
		handle: (o) => [l$1("will-change", o)]
	}), e("content-none", [["--tw-content", "none"], ["content", "none"]]), n("content", {
		themeKeys: [],
		handle: (o) => [
			F([$("--tw-content", "\"\"")]),
			l$1("--tw-content", o),
			l$1("content", "var(--tw-content)")
		]
	});
	{
		let o = "var(--tw-contain-size,) var(--tw-contain-layout,) var(--tw-contain-paint,) var(--tw-contain-style,)", c = () => F([
			$("--tw-contain-size"),
			$("--tw-contain-layout"),
			$("--tw-contain-paint"),
			$("--tw-contain-style")
		]);
		e("contain-none", [["contain", "none"]]), e("contain-content", [["contain", "content"]]), e("contain-strict", [["contain", "strict"]]), e("contain-size", [
			c,
			["--tw-contain-size", "size"],
			["contain", o]
		]), e("contain-inline-size", [
			c,
			["--tw-contain-size", "inline-size"],
			["contain", o]
		]), e("contain-layout", [
			c,
			["--tw-contain-layout", "layout"],
			["contain", o]
		]), e("contain-paint", [
			c,
			["--tw-contain-paint", "paint"],
			["contain", o]
		]), e("contain-style", [
			c,
			["--tw-contain-style", "style"],
			["contain", o]
		]), n("contain", {
			themeKeys: [],
			handle: (h$1) => [l$1("contain", h$1)]
		});
	}
	e("forced-color-adjust-none", [["forced-color-adjust", "none"]]), e("forced-color-adjust-auto", [["forced-color-adjust", "auto"]]), e("leading-none", [
		() => F([$("--tw-leading")]),
		["--tw-leading", "1"],
		["line-height", "1"]
	]), a("leading", ["--leading", "--spacing"], (o) => [
		F([$("--tw-leading")]),
		l$1("--tw-leading", o),
		l$1("line-height", o)
	]), n("tracking", {
		supportsNegative: !0,
		themeKeys: ["--tracking"],
		handle: (o) => [
			F([$("--tw-tracking")]),
			l$1("--tw-tracking", o),
			l$1("letter-spacing", o)
		]
	}), e("antialiased", [["-webkit-font-smoothing", "antialiased"], ["-moz-osx-font-smoothing", "grayscale"]]), e("subpixel-antialiased", [["-webkit-font-smoothing", "auto"], ["-moz-osx-font-smoothing", "auto"]]);
	{
		let o = "var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,)", c = () => F([
			$("--tw-ordinal"),
			$("--tw-slashed-zero"),
			$("--tw-numeric-figure"),
			$("--tw-numeric-spacing"),
			$("--tw-numeric-fraction")
		]);
		e("normal-nums", [["font-variant-numeric", "normal"]]), e("ordinal", [
			c,
			["--tw-ordinal", "ordinal"],
			["font-variant-numeric", o]
		]), e("slashed-zero", [
			c,
			["--tw-slashed-zero", "slashed-zero"],
			["font-variant-numeric", o]
		]), e("lining-nums", [
			c,
			["--tw-numeric-figure", "lining-nums"],
			["font-variant-numeric", o]
		]), e("oldstyle-nums", [
			c,
			["--tw-numeric-figure", "oldstyle-nums"],
			["font-variant-numeric", o]
		]), e("proportional-nums", [
			c,
			["--tw-numeric-spacing", "proportional-nums"],
			["font-variant-numeric", o]
		]), e("tabular-nums", [
			c,
			["--tw-numeric-spacing", "tabular-nums"],
			["font-variant-numeric", o]
		]), e("diagonal-fractions", [
			c,
			["--tw-numeric-fraction", "diagonal-fractions"],
			["font-variant-numeric", o]
		]), e("stacked-fractions", [
			c,
			["--tw-numeric-fraction", "stacked-fractions"],
			["font-variant-numeric", o]
		]);
	}
	{
		let o = () => F([$("--tw-outline-style", "solid")]);
		t.static("outline-hidden", () => [
			l$1("--tw-outline-style", "none"),
			l$1("outline-style", "none"),
			z("@media", "(forced-colors: active)", [l$1("outline", "2px solid transparent"), l$1("outline-offset", "2px")])
		]), e("outline-none", [["--tw-outline-style", "none"], ["outline-style", "none"]]), e("outline-solid", [["--tw-outline-style", "solid"], ["outline-style", "solid"]]), e("outline-dashed", [["--tw-outline-style", "dashed"], ["outline-style", "dashed"]]), e("outline-dotted", [["--tw-outline-style", "dotted"], ["outline-style", "dotted"]]), e("outline-double", [["--tw-outline-style", "double"], ["outline-style", "double"]]), t.functional("outline", (c) => {
			if (c.value === null) {
				if (c.modifier) return;
				let h$1 = r.get(["--default-outline-width"]) ?? "1px";
				return [
					o(),
					l$1("outline-style", "var(--tw-outline-style)"),
					l$1("outline-width", h$1)
				];
			}
			if (c.value.kind === "arbitrary") {
				let h$1 = c.value.value;
				switch (c.value.dataType ?? me(h$1, [
					"color",
					"length",
					"number",
					"percentage"
				])) {
					case "length":
					case "number":
					case "percentage": return c.modifier ? void 0 : [
						o(),
						l$1("outline-style", "var(--tw-outline-style)"),
						l$1("outline-width", h$1)
					];
					default: return h$1 = X(h$1, c.modifier, r), h$1 === null ? void 0 : [l$1("outline-color", h$1)];
				}
			}
			{
				let h$1 = te(c, r, ["--outline-color", "--color"]);
				if (h$1) return [l$1("outline-color", h$1)];
			}
			{
				if (c.modifier) return;
				let h$1 = r.resolve(c.value.value, ["--outline-width"]);
				if (h$1) return [
					o(),
					l$1("outline-style", "var(--tw-outline-style)"),
					l$1("outline-width", h$1)
				];
				if (u(c.value.value)) return [
					o(),
					l$1("outline-style", "var(--tw-outline-style)"),
					l$1("outline-width", `${c.value.value}px`)
				];
			}
		}), i("outline", () => [{
			values: [
				"current",
				"inherit",
				"transparent"
			],
			valueThemeKeys: ["--outline-color", "--color"],
			modifiers: Array.from({ length: 21 }, (c, h$1) => `${h$1 * 5}`),
			hasDefaultValue: !0
		}, {
			values: [
				"0",
				"1",
				"2",
				"4",
				"8"
			],
			valueThemeKeys: ["--outline-width"]
		}]), n("outline-offset", {
			supportsNegative: !0,
			themeKeys: ["--outline-offset"],
			handleBareValue: ({ value: c }) => u(c) ? `${c}px` : null,
			handle: (c) => [l$1("outline-offset", c)]
		}), i("outline-offset", () => [{
			supportsNegative: !0,
			values: [
				"0",
				"1",
				"2",
				"4",
				"8"
			],
			valueThemeKeys: ["--outline-offset"]
		}]);
	}
	n("opacity", {
		themeKeys: ["--opacity"],
		handleBareValue: ({ value: o }) => ue(o) ? `${o}%` : null,
		handle: (o) => [l$1("opacity", o)]
	}), i("opacity", () => [{
		values: Array.from({ length: 21 }, (o, c) => `${c * 5}`),
		valueThemeKeys: ["--opacity"]
	}]), e("underline-offset-auto", [["text-underline-offset", "auto"]]), n("underline-offset", {
		supportsNegative: !0,
		themeKeys: ["--text-underline-offset"],
		handleBareValue: ({ value: o }) => u(o) ? `${o}px` : null,
		handle: (o) => [l$1("text-underline-offset", o)]
	}), i("underline-offset", () => [{
		supportsNegative: !0,
		values: [
			"0",
			"1",
			"2",
			"4",
			"8"
		],
		valueThemeKeys: ["--text-underline-offset"]
	}]), t.functional("text", (o) => {
		if (o.value) {
			if (o.value.kind === "arbitrary") {
				let c = o.value.value;
				switch (o.value.dataType ?? me(c, [
					"color",
					"length",
					"percentage",
					"absolute-size",
					"relative-size"
				])) {
					case "size":
					case "length":
					case "percentage":
					case "absolute-size":
					case "relative-size":
						if (o.modifier) {
							let A$1 = o.modifier.kind === "arbitrary" ? o.modifier.value : r.resolve(o.modifier.value, ["--leading"]);
							if (!A$1 && ge(o.modifier.value)) {
								let b$1 = r.resolve(null, ["--spacing"]);
								if (!b$1) return null;
								A$1 = `calc(${b$1} * ${o.modifier.value})`;
							}
							return !A$1 && o.modifier.value === "none" && (A$1 = "1"), A$1 ? [l$1("font-size", c), l$1("line-height", A$1)] : null;
						}
						return [l$1("font-size", c)];
					default: return c = X(c, o.modifier, r), c === null ? void 0 : [l$1("color", c)];
				}
			}
			{
				let c = te(o, r, ["--text-color", "--color"]);
				if (c) return [l$1("color", c)];
			}
			{
				let c = r.resolveWith(o.value.value, ["--text"], [
					"--line-height",
					"--letter-spacing",
					"--font-weight"
				]);
				if (c) {
					let [h$1, A$1 = {}] = Array.isArray(c) ? c : [c];
					if (o.modifier) {
						let b$1 = o.modifier.kind === "arbitrary" ? o.modifier.value : r.resolve(o.modifier.value, ["--leading"]);
						if (!b$1 && ge(o.modifier.value)) {
							let P$1 = r.resolve(null, ["--spacing"]);
							if (!P$1) return null;
							b$1 = `calc(${P$1} * ${o.modifier.value})`;
						}
						if (!b$1 && o.modifier.value === "none" && (b$1 = "1"), !b$1) return null;
						let C$1 = [l$1("font-size", h$1)];
						return b$1 && C$1.push(l$1("line-height", b$1)), C$1;
					}
					return typeof A$1 == "string" ? [l$1("font-size", h$1), l$1("line-height", A$1)] : [
						l$1("font-size", h$1),
						l$1("line-height", A$1["--line-height"] ? `var(--tw-leading, ${A$1["--line-height"]})` : void 0),
						l$1("letter-spacing", A$1["--letter-spacing"] ? `var(--tw-tracking, ${A$1["--letter-spacing"]})` : void 0),
						l$1("font-weight", A$1["--font-weight"] ? `var(--tw-font-weight, ${A$1["--font-weight"]})` : void 0)
					];
				}
			}
		}
	}), i("text", () => [{
		values: [
			"current",
			"inherit",
			"transparent"
		],
		valueThemeKeys: ["--text-color", "--color"],
		modifiers: Array.from({ length: 21 }, (o, c) => `${c * 5}`)
	}, {
		values: [],
		valueThemeKeys: ["--text"],
		modifiers: [],
		modifierThemeKeys: ["--leading"]
	}]);
	let j$1 = () => F([$("--tw-text-shadow-color"), $("--tw-text-shadow-alpha", "100%", "<percentage>")]);
	e("text-shadow-initial", [j$1, ["--tw-text-shadow-color", "initial"]]), t.functional("text-shadow", (o) => {
		let c;
		if (o.modifier && (o.modifier.kind === "arbitrary" ? c = o.modifier.value : u(o.modifier.value) && (c = `${o.modifier.value}%`)), !o.value) {
			let h$1 = r.get(["--text-shadow"]);
			return h$1 === null ? void 0 : [
				j$1(),
				l$1("--tw-text-shadow-alpha", c),
				...ue$1("text-shadow", h$1, c, (A$1) => `var(--tw-text-shadow-color, ${A$1})`)
			];
		}
		if (o.value.kind === "arbitrary") {
			let h$1 = o.value.value;
			switch (o.value.dataType ?? me(h$1, ["color"])) {
				case "color": return h$1 = X(h$1, o.modifier, r), h$1 === null ? void 0 : [j$1(), l$1("--tw-text-shadow-color", Q(h$1, "var(--tw-text-shadow-alpha)"))];
				default: return [
					j$1(),
					l$1("--tw-text-shadow-alpha", c),
					...ue$1("text-shadow", h$1, c, (b$1) => `var(--tw-text-shadow-color, ${b$1})`)
				];
			}
		}
		switch (o.value.value) {
			case "none": return o.modifier ? void 0 : [j$1(), l$1("text-shadow", "none")];
			case "inherit": return o.modifier ? void 0 : [j$1(), l$1("--tw-text-shadow-color", "inherit")];
		}
		{
			let h$1 = r.get([`--text-shadow-${o.value.value}`]);
			if (h$1) return [
				j$1(),
				l$1("--tw-text-shadow-alpha", c),
				...ue$1("text-shadow", h$1, c, (A$1) => `var(--tw-text-shadow-color, ${A$1})`)
			];
		}
		{
			let h$1 = te(o, r, ["--text-shadow-color", "--color"]);
			if (h$1) return [j$1(), l$1("--tw-text-shadow-color", Q(h$1, "var(--tw-text-shadow-alpha)"))];
		}
	}), i("text-shadow", () => [
		{
			values: [
				"current",
				"inherit",
				"transparent"
			],
			valueThemeKeys: ["--text-shadow-color", "--color"],
			modifiers: Array.from({ length: 21 }, (o, c) => `${c * 5}`)
		},
		{ values: ["none"] },
		{
			valueThemeKeys: ["--text-shadow"],
			modifiers: Array.from({ length: 21 }, (o, c) => `${c * 5}`),
			hasDefaultValue: r.get(["--text-shadow"]) !== null
		}
	]);
	{
		let b$1 = function(V$1) {
			return `var(--tw-ring-inset,) 0 0 0 calc(${V$1} + var(--tw-ring-offset-width)) var(--tw-ring-color, ${A$1})`;
		}, C$1 = function(V$1) {
			return `inset 0 0 0 ${V$1} var(--tw-inset-ring-color, currentcolor)`;
		};
		let o = [
			"var(--tw-inset-shadow)",
			"var(--tw-inset-ring-shadow)",
			"var(--tw-ring-offset-shadow)",
			"var(--tw-ring-shadow)",
			"var(--tw-shadow)"
		].join(", "), c = "0 0 #0000", h$1 = () => F([
			$("--tw-shadow", c),
			$("--tw-shadow-color"),
			$("--tw-shadow-alpha", "100%", "<percentage>"),
			$("--tw-inset-shadow", c),
			$("--tw-inset-shadow-color"),
			$("--tw-inset-shadow-alpha", "100%", "<percentage>"),
			$("--tw-ring-color"),
			$("--tw-ring-shadow", c),
			$("--tw-inset-ring-color"),
			$("--tw-inset-ring-shadow", c),
			$("--tw-ring-inset"),
			$("--tw-ring-offset-width", "0px", "<length>"),
			$("--tw-ring-offset-color", "#fff"),
			$("--tw-ring-offset-shadow", c)
		]);
		e("shadow-initial", [h$1, ["--tw-shadow-color", "initial"]]), t.functional("shadow", (V$1) => {
			let T$1;
			if (V$1.modifier && (V$1.modifier.kind === "arbitrary" ? T$1 = V$1.modifier.value : u(V$1.modifier.value) && (T$1 = `${V$1.modifier.value}%`)), !V$1.value) {
				let U$1 = r.get(["--shadow"]);
				return U$1 === null ? void 0 : [
					h$1(),
					l$1("--tw-shadow-alpha", T$1),
					...ue$1("--tw-shadow", U$1, T$1, (oe$1) => `var(--tw-shadow-color, ${oe$1})`),
					l$1("box-shadow", o)
				];
			}
			if (V$1.value.kind === "arbitrary") {
				let U$1 = V$1.value.value;
				switch (V$1.value.dataType ?? me(U$1, ["color"])) {
					case "color": return U$1 = X(U$1, V$1.modifier, r), U$1 === null ? void 0 : [h$1(), l$1("--tw-shadow-color", Q(U$1, "var(--tw-shadow-alpha)"))];
					default: return [
						h$1(),
						l$1("--tw-shadow-alpha", T$1),
						...ue$1("--tw-shadow", U$1, T$1, (ot) => `var(--tw-shadow-color, ${ot})`),
						l$1("box-shadow", o)
					];
				}
			}
			switch (V$1.value.value) {
				case "none": return V$1.modifier ? void 0 : [
					h$1(),
					l$1("--tw-shadow", c),
					l$1("box-shadow", o)
				];
				case "inherit": return V$1.modifier ? void 0 : [h$1(), l$1("--tw-shadow-color", "inherit")];
			}
			{
				let U$1 = r.get([`--shadow-${V$1.value.value}`]);
				if (U$1) return [
					h$1(),
					l$1("--tw-shadow-alpha", T$1),
					...ue$1("--tw-shadow", U$1, T$1, (oe$1) => `var(--tw-shadow-color, ${oe$1})`),
					l$1("box-shadow", o)
				];
			}
			{
				let U$1 = te(V$1, r, ["--box-shadow-color", "--color"]);
				if (U$1) return [h$1(), l$1("--tw-shadow-color", Q(U$1, "var(--tw-shadow-alpha)"))];
			}
		}), i("shadow", () => [
			{
				values: [
					"current",
					"inherit",
					"transparent"
				],
				valueThemeKeys: ["--box-shadow-color", "--color"],
				modifiers: Array.from({ length: 21 }, (V$1, T$1) => `${T$1 * 5}`)
			},
			{ values: ["none"] },
			{
				valueThemeKeys: ["--shadow"],
				modifiers: Array.from({ length: 21 }, (V$1, T$1) => `${T$1 * 5}`),
				hasDefaultValue: r.get(["--shadow"]) !== null
			}
		]), e("inset-shadow-initial", [h$1, ["--tw-inset-shadow-color", "initial"]]), t.functional("inset-shadow", (V$1) => {
			let T$1;
			if (V$1.modifier && (V$1.modifier.kind === "arbitrary" ? T$1 = V$1.modifier.value : u(V$1.modifier.value) && (T$1 = `${V$1.modifier.value}%`)), !V$1.value) {
				let U$1 = r.get(["--inset-shadow"]);
				return U$1 === null ? void 0 : [
					h$1(),
					l$1("--tw-inset-shadow-alpha", T$1),
					...ue$1("--tw-inset-shadow", U$1, T$1, (oe$1) => `var(--tw-inset-shadow-color, ${oe$1})`),
					l$1("box-shadow", o)
				];
			}
			if (V$1.value.kind === "arbitrary") {
				let U$1 = V$1.value.value;
				switch (V$1.value.dataType ?? me(U$1, ["color"])) {
					case "color": return U$1 = X(U$1, V$1.modifier, r), U$1 === null ? void 0 : [h$1(), l$1("--tw-inset-shadow-color", Q(U$1, "var(--tw-inset-shadow-alpha)"))];
					default: return [
						h$1(),
						l$1("--tw-inset-shadow-alpha", T$1),
						...ue$1("--tw-inset-shadow", U$1, T$1, (ot) => `var(--tw-inset-shadow-color, ${ot})`, "inset "),
						l$1("box-shadow", o)
					];
				}
			}
			switch (V$1.value.value) {
				case "none": return V$1.modifier ? void 0 : [
					h$1(),
					l$1("--tw-inset-shadow", c),
					l$1("box-shadow", o)
				];
				case "inherit": return V$1.modifier ? void 0 : [h$1(), l$1("--tw-inset-shadow-color", "inherit")];
			}
			{
				let U$1 = r.get([`--inset-shadow-${V$1.value.value}`]);
				if (U$1) return [
					h$1(),
					l$1("--tw-inset-shadow-alpha", T$1),
					...ue$1("--tw-inset-shadow", U$1, T$1, (oe$1) => `var(--tw-inset-shadow-color, ${oe$1})`),
					l$1("box-shadow", o)
				];
			}
			{
				let U$1 = te(V$1, r, ["--box-shadow-color", "--color"]);
				if (U$1) return [h$1(), l$1("--tw-inset-shadow-color", Q(U$1, "var(--tw-inset-shadow-alpha)"))];
			}
		}), i("inset-shadow", () => [
			{
				values: [
					"current",
					"inherit",
					"transparent"
				],
				valueThemeKeys: ["--box-shadow-color", "--color"],
				modifiers: Array.from({ length: 21 }, (V$1, T$1) => `${T$1 * 5}`)
			},
			{ values: ["none"] },
			{
				valueThemeKeys: ["--inset-shadow"],
				modifiers: Array.from({ length: 21 }, (V$1, T$1) => `${T$1 * 5}`),
				hasDefaultValue: r.get(["--inset-shadow"]) !== null
			}
		]), e("ring-inset", [h$1, ["--tw-ring-inset", "inset"]]);
		let A$1 = r.get(["--default-ring-color"]) ?? "currentcolor";
		t.functional("ring", (V$1) => {
			if (!V$1.value) {
				if (V$1.modifier) return;
				let T$1 = r.get(["--default-ring-width"]) ?? "1px";
				return [
					h$1(),
					l$1("--tw-ring-shadow", b$1(T$1)),
					l$1("box-shadow", o)
				];
			}
			if (V$1.value.kind === "arbitrary") {
				let T$1 = V$1.value.value;
				switch (V$1.value.dataType ?? me(T$1, ["color", "length"])) {
					case "length": return V$1.modifier ? void 0 : [
						h$1(),
						l$1("--tw-ring-shadow", b$1(T$1)),
						l$1("box-shadow", o)
					];
					default: return T$1 = X(T$1, V$1.modifier, r), T$1 === null ? void 0 : [l$1("--tw-ring-color", T$1)];
				}
			}
			{
				let T$1 = te(V$1, r, ["--ring-color", "--color"]);
				if (T$1) return [l$1("--tw-ring-color", T$1)];
			}
			{
				if (V$1.modifier) return;
				let T$1 = r.resolve(V$1.value.value, ["--ring-width"]);
				if (T$1 === null && u(V$1.value.value) && (T$1 = `${V$1.value.value}px`), T$1) return [
					h$1(),
					l$1("--tw-ring-shadow", b$1(T$1)),
					l$1("box-shadow", o)
				];
			}
		}), i("ring", () => [{
			values: [
				"current",
				"inherit",
				"transparent"
			],
			valueThemeKeys: ["--ring-color", "--color"],
			modifiers: Array.from({ length: 21 }, (V$1, T$1) => `${T$1 * 5}`)
		}, {
			values: [
				"0",
				"1",
				"2",
				"4",
				"8"
			],
			valueThemeKeys: ["--ring-width"],
			hasDefaultValue: !0
		}]), t.functional("inset-ring", (V$1) => {
			if (!V$1.value) return V$1.modifier ? void 0 : [
				h$1(),
				l$1("--tw-inset-ring-shadow", C$1("1px")),
				l$1("box-shadow", o)
			];
			if (V$1.value.kind === "arbitrary") {
				let T$1 = V$1.value.value;
				switch (V$1.value.dataType ?? me(T$1, ["color", "length"])) {
					case "length": return V$1.modifier ? void 0 : [
						h$1(),
						l$1("--tw-inset-ring-shadow", C$1(T$1)),
						l$1("box-shadow", o)
					];
					default: return T$1 = X(T$1, V$1.modifier, r), T$1 === null ? void 0 : [l$1("--tw-inset-ring-color", T$1)];
				}
			}
			{
				let T$1 = te(V$1, r, ["--ring-color", "--color"]);
				if (T$1) return [l$1("--tw-inset-ring-color", T$1)];
			}
			{
				if (V$1.modifier) return;
				let T$1 = r.resolve(V$1.value.value, ["--ring-width"]);
				if (T$1 === null && u(V$1.value.value) && (T$1 = `${V$1.value.value}px`), T$1) return [
					h$1(),
					l$1("--tw-inset-ring-shadow", C$1(T$1)),
					l$1("box-shadow", o)
				];
			}
		}), i("inset-ring", () => [{
			values: [
				"current",
				"inherit",
				"transparent"
			],
			valueThemeKeys: ["--ring-color", "--color"],
			modifiers: Array.from({ length: 21 }, (V$1, T$1) => `${T$1 * 5}`)
		}, {
			values: [
				"0",
				"1",
				"2",
				"4",
				"8"
			],
			valueThemeKeys: ["--ring-width"],
			hasDefaultValue: !0
		}]);
		let P$1 = "var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color)";
		t.functional("ring-offset", (V$1) => {
			if (V$1.value) {
				if (V$1.value.kind === "arbitrary") {
					let T$1 = V$1.value.value;
					switch (V$1.value.dataType ?? me(T$1, ["color", "length"])) {
						case "length": return V$1.modifier ? void 0 : [l$1("--tw-ring-offset-width", T$1), l$1("--tw-ring-offset-shadow", P$1)];
						default: return T$1 = X(T$1, V$1.modifier, r), T$1 === null ? void 0 : [l$1("--tw-ring-offset-color", T$1)];
					}
				}
				{
					let T$1 = r.resolve(V$1.value.value, ["--ring-offset-width"]);
					if (T$1) return V$1.modifier ? void 0 : [l$1("--tw-ring-offset-width", T$1), l$1("--tw-ring-offset-shadow", P$1)];
					if (u(V$1.value.value)) return V$1.modifier ? void 0 : [l$1("--tw-ring-offset-width", `${V$1.value.value}px`), l$1("--tw-ring-offset-shadow", P$1)];
				}
				{
					let T$1 = te(V$1, r, ["--ring-offset-color", "--color"]);
					if (T$1) return [l$1("--tw-ring-offset-color", T$1)];
				}
			}
		});
	}
	return i("ring-offset", () => [{
		values: [
			"current",
			"inherit",
			"transparent"
		],
		valueThemeKeys: ["--ring-offset-color", "--color"],
		modifiers: Array.from({ length: 21 }, (o, c) => `${c * 5}`)
	}, {
		values: [
			"0",
			"1",
			"2",
			"4",
			"8"
		],
		valueThemeKeys: ["--ring-offset-width"]
	}]), t.functional("@container", (o) => {
		let c = null;
		if (o.value === null ? c = "inline-size" : o.value.kind === "arbitrary" ? c = o.value.value : o.value.kind === "named" && o.value.value === "normal" && (c = "normal"), c !== null) return o.modifier ? [l$1("container-type", c), l$1("container-name", o.modifier.value)] : [l$1("container-type", c)];
	}), i("@container", () => [{
		values: ["normal"],
		valueThemeKeys: [],
		hasDefaultValue: !0
	}]), t;
}
var bt = [
	"number",
	"integer",
	"ratio",
	"percentage"
];
function pr(r) {
	let t = r.params;
	return $i.test(t) ? (i) => {
		let e = {
			"--value": {
				usedSpacingInteger: !1,
				usedSpacingNumber: !1,
				themeKeys: /* @__PURE__ */ new Set(),
				literals: /* @__PURE__ */ new Set()
			},
			"--modifier": {
				usedSpacingInteger: !1,
				usedSpacingNumber: !1,
				themeKeys: /* @__PURE__ */ new Set(),
				literals: /* @__PURE__ */ new Set()
			}
		};
		D(r.nodes, (n) => {
			if (n.kind !== "declaration" || !n.value || !n.value.includes("--value(") && !n.value.includes("--modifier(")) return;
			let s = q(n.value);
			ee(s, (a) => {
				if (a.kind !== "function") return;
				if (a.value === "--spacing" && !(e["--modifier"].usedSpacingNumber && e["--value"].usedSpacingNumber)) return ee(a.nodes, (f$1) => {
					if (f$1.kind !== "function" || f$1.value !== "--value" && f$1.value !== "--modifier") return;
					let u$1 = f$1.value;
					for (let g$1 of f$1.nodes) if (g$1.kind === "word") {
						if (g$1.value === "integer") e[u$1].usedSpacingInteger ||= !0;
						else if (g$1.value === "number" && (e[u$1].usedSpacingNumber ||= !0, e["--modifier"].usedSpacingNumber && e["--value"].usedSpacingNumber)) return 2;
					}
				}), 0;
				if (a.value !== "--value" && a.value !== "--modifier") return;
				let p = d(Y(a.nodes), ",");
				for (let [f$1, u$1] of p.entries()) u$1 = u$1.replace(/\\\*/g, "*"), u$1 = u$1.replace(/--(.*?)\s--(.*?)/g, "--$1-*--$2"), u$1 = u$1.replace(/\s+/g, ""), u$1 = u$1.replace(/(-\*){2,}/g, "-*"), u$1[0] === "-" && u$1[1] === "-" && !u$1.includes("-*") && (u$1 += "-*"), p[f$1] = u$1;
				a.nodes = q(p.join(","));
				for (let f$1 of a.nodes) if (f$1.kind === "word" && (f$1.value[0] === "\"" || f$1.value[0] === "'") && f$1.value[0] === f$1.value[f$1.value.length - 1]) {
					let u$1 = f$1.value.slice(1, -1);
					e[a.value].literals.add(u$1);
				} else if (f$1.kind === "word" && f$1.value[0] === "-" && f$1.value[1] === "-") {
					let u$1 = f$1.value.replace(/-\*.*$/g, "");
					e[a.value].themeKeys.add(u$1);
				} else if (f$1.kind === "word" && !(f$1.value[0] === "[" && f$1.value[f$1.value.length - 1] === "]") && !bt.includes(f$1.value)) {
					console.warn(`Unsupported bare value data type: "${f$1.value}".
Only valid data types are: ${bt.map((y$1) => `"${y$1}"`).join(", ")}.
`);
					let u$1 = f$1.value, g$1 = structuredClone(a), m = "¶";
					ee(g$1.nodes, (y$1, { replaceWith: x$1 }) => {
						y$1.kind === "word" && y$1.value === u$1 && x$1({
							kind: "word",
							value: m
						});
					});
					let d$1 = "^".repeat(Y([f$1]).length), w$1 = Y([g$1]).indexOf(m), v$1 = [
						"```css",
						Y([a]),
						" ".repeat(w$1) + d$1,
						"```"
					].join(`
`);
					console.warn(v$1);
				}
			}), n.value = Y(s);
		}), i.utilities.functional(t.slice(0, -2), (n) => {
			let s = structuredClone(r), a = n.value, p = n.modifier;
			if (a === null) return;
			let f$1 = !1, u$1 = !1, g$1 = !1, m = !1, d$1 = /* @__PURE__ */ new Map(), w$1 = !1;
			if (D([s], (v$1, { parent: y$1, replaceWith: x$1 }) => {
				if (y$1?.kind !== "rule" && y$1?.kind !== "at-rule" || v$1.kind !== "declaration" || !v$1.value) return;
				let N$1 = q(v$1.value);
				(ee(N$1, (S$1, { replaceWith: O$1 }) => {
					if (S$1.kind === "function") {
						if (S$1.value === "--value") {
							f$1 = !0;
							let K$1 = sr(a, S$1, i);
							return K$1 ? (u$1 = !0, K$1.ratio ? w$1 = !0 : d$1.set(v$1, y$1), O$1(K$1.nodes), 1) : (f$1 ||= !1, x$1([]), 2);
						} else if (S$1.value === "--modifier") {
							if (p === null) return x$1([]), 2;
							g$1 = !0;
							let K$1 = sr(p, S$1, i);
							return K$1 ? (m = !0, O$1(K$1.nodes), 1) : (g$1 ||= !1, x$1([]), 2);
						}
					}
				}) ?? 0) === 0 && (v$1.value = Y(N$1));
			}), f$1 && !u$1 || g$1 && !m || w$1 && m || p && !w$1 && !m) return null;
			if (w$1) for (let [v$1, y$1] of d$1) {
				let x$1 = y$1.nodes.indexOf(v$1);
				x$1 !== -1 && y$1.nodes.splice(x$1, 1);
			}
			return s.nodes;
		}), i.utilities.suggest(t.slice(0, -2), () => {
			let n = [], s = [];
			for (let [a, { literals: p, usedSpacingNumber: f$1, usedSpacingInteger: u$1, themeKeys: g$1 }] of [[n, e["--value"]], [s, e["--modifier"]]]) {
				for (let m of p) a.push(m);
				if (f$1) a.push(...Ze);
				else if (u$1) for (let m of Ze) u(m) && a.push(m);
				for (let m of i.theme.keysInNamespaces(g$1)) a.push(m.replace(fr, (d$1, w$1, v$1) => `${w$1}.${v$1}`));
			}
			return [{
				values: n,
				modifiers: s
			}];
		});
	} : Ci.test(t) ? (i) => {
		i.utilities.static(t, () => structuredClone(r.nodes));
	} : null;
}
function sr(r, t, i) {
	for (let e of t.nodes) {
		if (r.kind === "named" && e.kind === "word" && (e.value[0] === "'" || e.value[0] === "\"") && e.value[e.value.length - 1] === e.value[0] && e.value.slice(1, -1) === r.value) return { nodes: q(r.value) };
		if (r.kind === "named" && e.kind === "word" && e.value[0] === "-" && e.value[1] === "-") {
			let n = e.value;
			if (n.endsWith("-*")) {
				n = n.slice(0, -2);
				let s = i.theme.resolve(r.value, [n]);
				if (s) return { nodes: q(s) };
			} else {
				let s = n.split("-*");
				if (s.length <= 1) continue;
				let a = [s.shift()], p = i.theme.resolveWith(r.value, a, s);
				if (p) {
					let [, f$1 = {}] = p;
					{
						let u$1 = f$1[s.pop()];
						if (u$1) return { nodes: q(u$1) };
					}
				}
			}
		} else if (r.kind === "named" && e.kind === "word") {
			if (!bt.includes(e.value)) continue;
			let n = e.value === "ratio" && "fraction" in r ? r.fraction : r.value;
			if (!n) continue;
			let s = me(n, [e.value]);
			if (s === null) continue;
			if (s === "ratio") {
				let [a, p] = d(n, "/");
				if (!u(a) || !u(p)) continue;
			} else {
				if (s === "number" && !ge(n)) continue;
				if (s === "percentage" && !u(n.slice(0, -1))) continue;
			}
			return {
				nodes: q(n),
				ratio: s === "ratio"
			};
		} else if (r.kind === "arbitrary" && e.kind === "word" && e.value[0] === "[" && e.value[e.value.length - 1] === "]") {
			let n = e.value.slice(1, -1);
			if (n === "*") return { nodes: q(r.value) };
			if ("dataType" in r && r.dataType && r.dataType !== n) continue;
			if ("dataType" in r && r.dataType) return { nodes: q(r.value) };
			if (me(r.value, [n]) !== null) return { nodes: q(r.value) };
		}
	}
}
function ue$1(r, t, i, e, n = "") {
	let s = !1, a = Ee(t, (f$1) => i == null ? e(f$1) : f$1.startsWith("current") ? e(Q(f$1, i)) : ((f$1.startsWith("var(") || i.startsWith("var(")) && (s = !0), e(ur(f$1, i))));
	function p(f$1) {
		return n ? d(f$1, ",").map((u$1) => n + u$1).join(",") : f$1;
	}
	return s ? [l$1(r, p(Ee(t, e))), H("@supports (color: lab(from red l a b))", [l$1(r, p(a))])] : [l$1(r, p(a))];
}
function Ye(r, t, i, e, n = "") {
	let s = !1, a = d(t, ",").map((p) => Ee(p, (f$1) => i == null ? e(f$1) : f$1.startsWith("current") ? e(Q(f$1, i)) : ((f$1.startsWith("var(") || i.startsWith("var(")) && (s = !0), e(ur(f$1, i))))).map((p) => `drop-shadow(${p})`).join(" ");
	return s ? [l$1(r, n + d(t, ",").map((p) => `drop-shadow(${Ee(p, e)})`).join(" ")), H("@supports (color: lab(from red l a b))", [l$1(r, n + a)])] : [l$1(r, n + a)];
}
var kt = {
	"--alpha": Vi,
	"--spacing": Ni,
	"--theme": Si,
	theme: Ti
};
function Vi(r, t, i, ...e) {
	let [n, s] = d(i, "/").map((a) => a.trim());
	if (!n || !s) throw new Error(`The --alpha(\u2026) function requires a color and an alpha value, e.g.: \`--alpha(${n || "var(--my-color)"} / ${s || "50%"})\``);
	if (e.length > 0) throw new Error(`The --alpha(\u2026) function only accepts one argument, e.g.: \`--alpha(${n || "var(--my-color)"} / ${s || "50%"})\``);
	return Q(n, s);
}
function Ni(r, t, i, ...e) {
	if (!i) throw new Error("The --spacing(…) function requires an argument, but received none.");
	if (e.length > 0) throw new Error(`The --spacing(\u2026) function only accepts a single argument, but received ${e.length + 1}.`);
	let n = r.theme.resolve(null, ["--spacing"]);
	if (!n) throw new Error("The --spacing(…) function requires that the `--spacing` theme variable exists, but it was not found.");
	return `calc(${n} * ${i})`;
}
function Si(r, t, i, ...e) {
	if (!i.startsWith("--")) throw new Error("The --theme(…) function can only be used with CSS variables from your theme.");
	let n = !1;
	i.endsWith(" inline") && (n = !0, i = i.slice(0, -7)), t.kind === "at-rule" && (n = !0);
	let s = r.resolveThemeValue(i, n);
	if (!s) {
		if (e.length > 0) return e.join(", ");
		throw new Error(`Could not resolve value for theme function: \`theme(${i})\`. Consider checking if the variable name is correct or provide a fallback value to silence this error.`);
	}
	if (e.length === 0) return s;
	let a = e.join(", ");
	if (a === "initial") return s;
	if (s === "initial") return a;
	if (s.startsWith("var(") || s.startsWith("theme(") || s.startsWith("--theme(")) {
		let p = q(s);
		return Ri(p, a), Y(p);
	}
	return s;
}
function Ti(r, t, i, ...e) {
	i = Ei(i);
	let n = r.resolveThemeValue(i);
	if (!n && e.length > 0) return e.join(", ");
	if (!n) throw new Error(`Could not resolve value for theme function: \`theme(${i})\`. Consider checking if the path is correct or provide a fallback value to silence this error.`);
	return n;
}
var dr = new RegExp(Object.keys(kt).map((r) => `${r}\\(`).join("|"));
function xe(r, t) {
	let i = 0;
	return D(r, (e) => {
		if (e.kind === "declaration" && e.value && dr.test(e.value)) {
			i |= 8, e.value = mr(e.value, e, t);
			return;
		}
		e.kind === "at-rule" && (e.name === "@media" || e.name === "@custom-media" || e.name === "@container" || e.name === "@supports") && dr.test(e.params) && (i |= 8, e.params = mr(e.params, e, t));
	}), i;
}
function mr(r, t, i) {
	let e = q(r);
	return ee(e, (n, { replaceWith: s }) => {
		if (n.kind === "function" && n.value in kt) {
			let a = d(Y(n.nodes).trim(), ",").map((f$1) => f$1.trim()), p = kt[n.value](i, t, ...a);
			return s(q(p));
		}
	}), Y(e);
}
function Ei(r) {
	if (r[0] !== "'" && r[0] !== "\"") return r;
	let t = "", i = r[0];
	for (let e = 1; e < r.length - 1; e++) {
		let n = r[e], s = r[e + 1];
		n === "\\" && (s === i || s === "\\") ? (t += s, e++) : t += n;
	}
	return t;
}
function Ri(r, t) {
	ee(r, (i) => {
		if (i.kind === "function" && !(i.value !== "var" && i.value !== "theme" && i.value !== "--theme")) if (i.nodes.length === 1) i.nodes.push({
			kind: "word",
			value: `, ${t}`
		});
		else {
			let e = i.nodes[i.nodes.length - 1];
			e.kind === "word" && e.value === "initial" && (e.value = t);
		}
	});
}
function Qe(r, t) {
	let i = r.length, e = t.length, n = i < e ? i : e;
	for (let s = 0; s < n; s++) {
		let a = r.charCodeAt(s), p = t.charCodeAt(s);
		if (a >= 48 && a <= 57 && p >= 48 && p <= 57) {
			let f$1 = s, u$1 = s + 1, g$1 = s, m = s + 1;
			for (a = r.charCodeAt(u$1); a >= 48 && a <= 57;) a = r.charCodeAt(++u$1);
			for (p = t.charCodeAt(m); p >= 48 && p <= 57;) p = t.charCodeAt(++m);
			let d$1 = r.slice(f$1, u$1), w$1 = t.slice(g$1, m), v$1 = Number(d$1) - Number(w$1);
			if (v$1) return v$1;
			if (d$1 < w$1) return -1;
			if (d$1 > w$1) return 1;
			continue;
		}
		if (a !== p) return a - p;
	}
	return r.length - t.length;
}
var Pi = /^\d+\/\d+$/;
function gr(r) {
	let t = new M((n) => ({
		name: n,
		utility: n,
		fraction: !1,
		modifiers: []
	}));
	for (let n of r.utilities.keys("static")) {
		let s = t.get(n);
		s.fraction = !1, s.modifiers = [];
	}
	for (let n of r.utilities.keys("functional")) {
		let s = r.utilities.getCompletions(n);
		for (let a of s) for (let p of a.values) {
			let f$1 = p !== null && Pi.test(p), u$1 = p === null ? n : `${n}-${p}`, g$1 = t.get(u$1);
			if (g$1.utility = n, g$1.fraction ||= f$1, g$1.modifiers.push(...a.modifiers), a.supportsNegative) {
				let m = t.get(`-${u$1}`);
				m.utility = `-${n}`, m.fraction ||= f$1, m.modifiers.push(...a.modifiers);
			}
		}
	}
	if (t.size === 0) return [];
	let i = Array.from(t.values());
	return i.sort((n, s) => Qe(n.name, s.name)), Oi(i);
}
function Oi(r) {
	let t = [], i = null, e = /* @__PURE__ */ new Map(), n = new M(() => []);
	for (let a of r) {
		let { utility: p, fraction: f$1 } = a;
		i || (i = {
			utility: p,
			items: []
		}, e.set(p, i)), p !== i.utility && (t.push(i), i = {
			utility: p,
			items: []
		}, e.set(p, i)), f$1 ? n.get(p).push(a) : i.items.push(a);
	}
	i && t[t.length - 1] !== i && t.push(i);
	for (let [a, p] of n) {
		let f$1 = e.get(a);
		f$1 && f$1.items.push(...p);
	}
	let s = [];
	for (let a of t) for (let p of a.items) s.push([p.name, { modifiers: p.modifiers }]);
	return s;
}
function hr(r) {
	let t = [];
	for (let [e, n] of r.variants.entries()) {
		let p = function({ value: f$1, modifier: u$1 } = {}) {
			let g$1 = e;
			f$1 && (g$1 += s ? `-${f$1}` : f$1), u$1 && (g$1 += `/${u$1}`);
			let m = r.parseVariant(g$1);
			if (!m) return [];
			let d$1 = W(".__placeholder__", []);
			if (Ae(d$1, m, r.variants) === null) return [];
			let w$1 = [];
			return Ge(d$1.nodes, (v$1, { path: y$1 }) => {
				if (v$1.kind !== "rule" && v$1.kind !== "at-rule" || v$1.nodes.length > 0) return;
				y$1.sort((k, S$1) => {
					let O$1 = k.kind === "at-rule", K$1 = S$1.kind === "at-rule";
					return O$1 && !K$1 ? -1 : !O$1 && K$1 ? 1 : 0;
				});
				let x$1 = y$1.flatMap((k) => k.kind === "rule" ? k.selector === "&" ? [] : [k.selector] : k.kind === "at-rule" ? [`${k.name} ${k.params}`] : []), N$1 = "";
				for (let k = x$1.length - 1; k >= 0; k--) N$1 = N$1 === "" ? x$1[k] : `${x$1[k]} { ${N$1} }`;
				w$1.push(N$1);
			}), w$1;
		};
		if (n.kind === "arbitrary") continue;
		let s = e !== "@", a = r.variants.getCompletions(e);
		switch (n.kind) {
			case "static":
				t.push({
					name: e,
					values: a,
					isArbitrary: !1,
					hasDash: s,
					selectors: p
				});
				break;
			case "functional":
				t.push({
					name: e,
					values: a,
					isArbitrary: !0,
					hasDash: s,
					selectors: p
				});
				break;
			case "compound":
				t.push({
					name: e,
					values: a,
					isArbitrary: !0,
					hasDash: s,
					selectors: p
				});
				break;
		}
	}
	return t;
}
function vr(r, t) {
	let { astNodes: i, nodeSorting: e } = pe$1(Array.from(t), r), n = new Map(t.map((a) => [a, null])), s = 0n;
	for (let a of i) {
		let p = e.get(a)?.candidate;
		p && n.set(p, n.get(p) ?? s++);
	}
	return t.map((a) => [a, n.get(a) ?? null]);
}
var Xe = /^@?[a-z0-9][a-zA-Z0-9_-]*(?<![_-])$/;
var xt = class {
	compareFns = /* @__PURE__ */ new Map();
	variants = /* @__PURE__ */ new Map();
	completions = /* @__PURE__ */ new Map();
	groupOrder = null;
	lastOrder = 0;
	static(t, i, { compounds: e, order: n } = {}) {
		this.set(t, {
			kind: "static",
			applyFn: i,
			compoundsWith: 0,
			compounds: e ?? 2,
			order: n
		});
	}
	fromAst(t, i) {
		let e = [];
		D(i, (n) => {
			n.kind === "rule" ? e.push(n.selector) : n.kind === "at-rule" && n.name !== "@slot" && e.push(`${n.name} ${n.params}`);
		}), this.static(t, (n) => {
			let s = structuredClone(i);
			At(s, n.nodes), n.nodes = s;
		}, { compounds: ye(e) });
	}
	functional(t, i, { compounds: e, order: n } = {}) {
		this.set(t, {
			kind: "functional",
			applyFn: i,
			compoundsWith: 0,
			compounds: e ?? 2,
			order: n
		});
	}
	compound(t, i, e, { compounds: n, order: s } = {}) {
		this.set(t, {
			kind: "compound",
			applyFn: e,
			compoundsWith: i,
			compounds: n ?? 2,
			order: s
		});
	}
	group(t, i) {
		this.groupOrder = this.nextOrder(), i && this.compareFns.set(this.groupOrder, i), t(), this.groupOrder = null;
	}
	has(t) {
		return this.variants.has(t);
	}
	get(t) {
		return this.variants.get(t);
	}
	kind(t) {
		return this.variants.get(t)?.kind;
	}
	compoundsWith(t, i) {
		let e = this.variants.get(t), n = typeof i == "string" ? this.variants.get(i) : i.kind === "arbitrary" ? { compounds: ye([i.selector]) } : this.variants.get(i.root);
		return !(!e || !n || e.kind !== "compound" || n.compounds === 0 || e.compoundsWith === 0 || (e.compoundsWith & n.compounds) === 0);
	}
	suggest(t, i) {
		this.completions.set(t, i);
	}
	getCompletions(t) {
		return this.completions.get(t)?.() ?? [];
	}
	compare(t, i) {
		if (t === i) return 0;
		if (t === null) return -1;
		if (i === null) return 1;
		if (t.kind === "arbitrary" && i.kind === "arbitrary") return t.selector < i.selector ? -1 : 1;
		if (t.kind === "arbitrary") return 1;
		if (i.kind === "arbitrary") return -1;
		let e = this.variants.get(t.root).order, n = this.variants.get(i.root).order, s = e - n;
		if (s !== 0) return s;
		if (t.kind === "compound" && i.kind === "compound") {
			let u$1 = this.compare(t.variant, i.variant);
			return u$1 !== 0 ? u$1 : t.modifier && i.modifier ? t.modifier.value < i.modifier.value ? -1 : 1 : t.modifier ? 1 : i.modifier ? -1 : 0;
		}
		let a = this.compareFns.get(e);
		if (a !== void 0) return a(t, i);
		if (t.root !== i.root) return t.root < i.root ? -1 : 1;
		let p = t.value, f$1 = i.value;
		return p === null ? -1 : f$1 === null || p.kind === "arbitrary" && f$1.kind !== "arbitrary" ? 1 : p.kind !== "arbitrary" && f$1.kind === "arbitrary" || p.value < f$1.value ? -1 : 1;
	}
	keys() {
		return this.variants.keys();
	}
	entries() {
		return this.variants.entries();
	}
	set(t, { kind: i, applyFn: e, compounds: n, compoundsWith: s, order: a }) {
		let p = this.variants.get(t);
		p ? Object.assign(p, {
			kind: i,
			applyFn: e,
			compounds: n
		}) : (a === void 0 && (this.lastOrder = this.nextOrder(), a = this.lastOrder), this.variants.set(t, {
			kind: i,
			applyFn: e,
			order: a,
			compoundsWith: s,
			compounds: n
		}));
	}
	nextOrder() {
		return this.groupOrder ?? this.lastOrder + 1;
	}
};
function ye(r) {
	let t = 0;
	for (let i of r) {
		if (i[0] === "@") {
			if (!i.startsWith("@media") && !i.startsWith("@supports") && !i.startsWith("@container")) return 0;
			t |= 1;
			continue;
		}
		if (i.includes("::")) return 0;
		t |= 2;
	}
	return t;
}
function yr(r) {
	let t = new xt();
	function i(u$1, g$1, { compounds: m } = {}) {
		m = m ?? ye(g$1), t.static(u$1, (d$1) => {
			d$1.nodes = g$1.map((w$1) => H(w$1, d$1.nodes));
		}, { compounds: m });
	}
	i("*", [":is(& > *)"], { compounds: 0 }), i("**", [":is(& *)"], { compounds: 0 });
	function e(u$1, g$1) {
		return g$1.map((m) => {
			m = m.trim();
			let d$1 = d(m, " ");
			return d$1[0] === "not" ? d$1.slice(1).join(" ") : u$1 === "@container" ? d$1[0][0] === "(" ? `not ${m}` : d$1[1] === "not" ? `${d$1[0]} ${d$1.slice(2).join(" ")}` : `${d$1[0]} not ${d$1.slice(1).join(" ")}` : `not ${m}`;
		});
	}
	let n = [
		"@media",
		"@supports",
		"@container"
	];
	function s(u$1) {
		for (let g$1 of n) {
			if (g$1 !== u$1.name) continue;
			let m = d(u$1.params, ",");
			return m.length > 1 ? null : (m = e(u$1.name, m), z(u$1.name, m.join(", ")));
		}
		return null;
	}
	function a(u$1) {
		return u$1.includes("::") ? null : `&:not(${d(u$1, ",").map((m) => (m = m.replaceAll("&", "*"), m)).join(", ")})`;
	}
	t.compound("not", 3, (u$1, g$1) => {
		if (g$1.variant.kind === "arbitrary" && g$1.variant.relative || g$1.modifier) return null;
		let m = !1;
		if (D([u$1], (d$1, { path: w$1 }) => {
			if (d$1.kind !== "rule" && d$1.kind !== "at-rule") return 0;
			if (d$1.nodes.length > 0) return 0;
			let v$1 = [], y$1 = [];
			for (let N$1 of w$1) N$1.kind === "at-rule" ? v$1.push(N$1) : N$1.kind === "rule" && y$1.push(N$1);
			if (v$1.length > 1) return 2;
			if (y$1.length > 1) return 2;
			let x$1 = [];
			for (let N$1 of y$1) {
				let k = a(N$1.selector);
				if (!k) return m = !1, 2;
				x$1.push(W(k, []));
			}
			for (let N$1 of v$1) {
				let k = s(N$1);
				if (!k) return m = !1, 2;
				x$1.push(k);
			}
			return Object.assign(u$1, W("&", x$1)), m = !0, 1;
		}), u$1.kind === "rule" && u$1.selector === "&" && u$1.nodes.length === 1 && Object.assign(u$1, u$1.nodes[0]), !m) return null;
	}), t.suggest("not", () => Array.from(t.keys()).filter((u$1) => t.compoundsWith("not", u$1))), t.compound("group", 2, (u$1, g$1) => {
		if (g$1.variant.kind === "arbitrary" && g$1.variant.relative) return null;
		let m = g$1.modifier ? `:where(.${r.prefix ? `${r.prefix}\\:` : ""}group\\/${g$1.modifier.value})` : `:where(.${r.prefix ? `${r.prefix}\\:` : ""}group)`, d$1 = !1;
		if (D([u$1], (w$1, { path: v$1 }) => {
			if (w$1.kind !== "rule") return 0;
			for (let x$1 of v$1.slice(0, -1)) if (x$1.kind === "rule") return d$1 = !1, 2;
			let y$1 = w$1.selector.replaceAll("&", m);
			d(y$1, ",").length > 1 && (y$1 = `:is(${y$1})`), w$1.selector = `&:is(${y$1} *)`, d$1 = !0;
		}), !d$1) return null;
	}), t.suggest("group", () => Array.from(t.keys()).filter((u$1) => t.compoundsWith("group", u$1))), t.compound("peer", 2, (u$1, g$1) => {
		if (g$1.variant.kind === "arbitrary" && g$1.variant.relative) return null;
		let m = g$1.modifier ? `:where(.${r.prefix ? `${r.prefix}\\:` : ""}peer\\/${g$1.modifier.value})` : `:where(.${r.prefix ? `${r.prefix}\\:` : ""}peer)`, d$1 = !1;
		if (D([u$1], (w$1, { path: v$1 }) => {
			if (w$1.kind !== "rule") return 0;
			for (let x$1 of v$1.slice(0, -1)) if (x$1.kind === "rule") return d$1 = !1, 2;
			let y$1 = w$1.selector.replaceAll("&", m);
			d(y$1, ",").length > 1 && (y$1 = `:is(${y$1})`), w$1.selector = `&:is(${y$1} ~ *)`, d$1 = !0;
		}), !d$1) return null;
	}), t.suggest("peer", () => Array.from(t.keys()).filter((u$1) => t.compoundsWith("peer", u$1))), i("first-letter", ["&::first-letter"]), i("first-line", ["&::first-line"]), i("marker", [
		"& *::marker",
		"&::marker",
		"& *::-webkit-details-marker",
		"&::-webkit-details-marker"
	]), i("selection", ["& *::selection", "&::selection"]), i("file", ["&::file-selector-button"]), i("placeholder", ["&::placeholder"]), i("backdrop", ["&::backdrop"]), i("details-content", ["&::details-content"]);
	{
		let u$1 = function() {
			return F([z("@property", "--tw-content", [
				l$1("syntax", "\"*\""),
				l$1("initial-value", "\"\""),
				l$1("inherits", "false")
			])]);
		};
		t.static("before", (g$1) => {
			g$1.nodes = [W("&::before", [
				u$1(),
				l$1("content", "var(--tw-content)"),
				...g$1.nodes
			])];
		}, { compounds: 0 }), t.static("after", (g$1) => {
			g$1.nodes = [W("&::after", [
				u$1(),
				l$1("content", "var(--tw-content)"),
				...g$1.nodes
			])];
		}, { compounds: 0 });
	}
	i("first", ["&:first-child"]), i("last", ["&:last-child"]), i("only", ["&:only-child"]), i("odd", ["&:nth-child(odd)"]), i("even", ["&:nth-child(even)"]), i("first-of-type", ["&:first-of-type"]), i("last-of-type", ["&:last-of-type"]), i("only-of-type", ["&:only-of-type"]), i("visited", ["&:visited"]), i("target", ["&:target"]), i("open", ["&:is([open], :popover-open, :open)"]), i("default", ["&:default"]), i("checked", ["&:checked"]), i("indeterminate", ["&:indeterminate"]), i("placeholder-shown", ["&:placeholder-shown"]), i("autofill", ["&:autofill"]), i("optional", ["&:optional"]), i("required", ["&:required"]), i("valid", ["&:valid"]), i("invalid", ["&:invalid"]), i("user-valid", ["&:user-valid"]), i("user-invalid", ["&:user-invalid"]), i("in-range", ["&:in-range"]), i("out-of-range", ["&:out-of-range"]), i("read-only", ["&:read-only"]), i("empty", ["&:empty"]), i("focus-within", ["&:focus-within"]), t.static("hover", (u$1) => {
		u$1.nodes = [W("&:hover", [z("@media", "(hover: hover)", u$1.nodes)])];
	}), i("focus", ["&:focus"]), i("focus-visible", ["&:focus-visible"]), i("active", ["&:active"]), i("enabled", ["&:enabled"]), i("disabled", ["&:disabled"]), i("inert", ["&:is([inert], [inert] *)"]), t.compound("in", 2, (u$1, g$1) => {
		if (g$1.modifier) return null;
		let m = !1;
		if (D([u$1], (d$1, { path: w$1 }) => {
			if (d$1.kind !== "rule") return 0;
			for (let v$1 of w$1.slice(0, -1)) if (v$1.kind === "rule") return m = !1, 2;
			d$1.selector = `:where(${d$1.selector.replaceAll("&", "*")}) &`, m = !0;
		}), !m) return null;
	}), t.suggest("in", () => Array.from(t.keys()).filter((u$1) => t.compoundsWith("in", u$1))), t.compound("has", 2, (u$1, g$1) => {
		if (g$1.modifier) return null;
		let m = !1;
		if (D([u$1], (d$1, { path: w$1 }) => {
			if (d$1.kind !== "rule") return 0;
			for (let v$1 of w$1.slice(0, -1)) if (v$1.kind === "rule") return m = !1, 2;
			d$1.selector = `&:has(${d$1.selector.replaceAll("&", "*")})`, m = !0;
		}), !m) return null;
	}), t.suggest("has", () => Array.from(t.keys()).filter((u$1) => t.compoundsWith("has", u$1))), t.functional("aria", (u$1, g$1) => {
		if (!g$1.value || g$1.modifier) return null;
		g$1.value.kind === "arbitrary" ? u$1.nodes = [W(`&[aria-${wr(g$1.value.value)}]`, u$1.nodes)] : u$1.nodes = [W(`&[aria-${g$1.value.value}="true"]`, u$1.nodes)];
	}), t.suggest("aria", () => [
		"busy",
		"checked",
		"disabled",
		"expanded",
		"hidden",
		"pressed",
		"readonly",
		"required",
		"selected"
	]), t.functional("data", (u$1, g$1) => {
		if (!g$1.value || g$1.modifier) return null;
		u$1.nodes = [W(`&[data-${wr(g$1.value.value)}]`, u$1.nodes)];
	}), t.functional("nth", (u$1, g$1) => {
		if (!g$1.value || g$1.modifier || g$1.value.kind === "named" && !u(g$1.value.value)) return null;
		u$1.nodes = [W(`&:nth-child(${g$1.value.value})`, u$1.nodes)];
	}), t.functional("nth-last", (u$1, g$1) => {
		if (!g$1.value || g$1.modifier || g$1.value.kind === "named" && !u(g$1.value.value)) return null;
		u$1.nodes = [W(`&:nth-last-child(${g$1.value.value})`, u$1.nodes)];
	}), t.functional("nth-of-type", (u$1, g$1) => {
		if (!g$1.value || g$1.modifier || g$1.value.kind === "named" && !u(g$1.value.value)) return null;
		u$1.nodes = [W(`&:nth-of-type(${g$1.value.value})`, u$1.nodes)];
	}), t.functional("nth-last-of-type", (u$1, g$1) => {
		if (!g$1.value || g$1.modifier || g$1.value.kind === "named" && !u(g$1.value.value)) return null;
		u$1.nodes = [W(`&:nth-last-of-type(${g$1.value.value})`, u$1.nodes)];
	}), t.functional("supports", (u$1, g$1) => {
		if (!g$1.value || g$1.modifier) return null;
		let m = g$1.value.value;
		if (m === null) return null;
		if (/^[\w-]*\s*\(/.test(m)) {
			let d$1 = m.replace(/\b(and|or|not)\b/g, " $1 ");
			u$1.nodes = [z("@supports", d$1, u$1.nodes)];
			return;
		}
		m.includes(":") || (m = `${m}: var(--tw)`), (m[0] !== "(" || m[m.length - 1] !== ")") && (m = `(${m})`), u$1.nodes = [z("@supports", m, u$1.nodes)];
	}, { compounds: 1 }), i("motion-safe", ["@media (prefers-reduced-motion: no-preference)"]), i("motion-reduce", ["@media (prefers-reduced-motion: reduce)"]), i("contrast-more", ["@media (prefers-contrast: more)"]), i("contrast-less", ["@media (prefers-contrast: less)"]);
	{
		let u$1 = function(g$1, m, d$1, w$1) {
			if (g$1 === m) return 0;
			let v$1 = w$1.get(g$1);
			if (v$1 === null) return d$1 === "asc" ? -1 : 1;
			let y$1 = w$1.get(m);
			return y$1 === null ? d$1 === "asc" ? 1 : -1 : we(v$1, y$1, d$1);
		};
		{
			let g$1 = r.namespace("--breakpoint"), m = new M((d$1) => {
				switch (d$1.kind) {
					case "static": return r.resolveValue(d$1.root, ["--breakpoint"]) ?? null;
					case "functional": {
						if (!d$1.value || d$1.modifier) return null;
						let w$1 = null;
						return d$1.value.kind === "arbitrary" ? w$1 = d$1.value.value : d$1.value.kind === "named" && (w$1 = r.resolveValue(d$1.value.value, ["--breakpoint"])), !w$1 || w$1.includes("var(") ? null : w$1;
					}
					case "arbitrary":
					case "compound": return null;
				}
			});
			t.group(() => {
				t.functional("max", (d$1, w$1) => {
					if (w$1.modifier) return null;
					let v$1 = m.get(w$1);
					if (v$1 === null) return null;
					d$1.nodes = [z("@media", `(width < ${v$1})`, d$1.nodes)];
				}, { compounds: 1 });
			}, (d$1, w$1) => u$1(d$1, w$1, "desc", m)), t.suggest("max", () => Array.from(g$1.keys()).filter((d$1) => d$1 !== null)), t.group(() => {
				for (let [d$1, w$1] of r.namespace("--breakpoint")) d$1 !== null && t.static(d$1, (v$1) => {
					v$1.nodes = [z("@media", `(width >= ${w$1})`, v$1.nodes)];
				}, { compounds: 1 });
				t.functional("min", (d$1, w$1) => {
					if (w$1.modifier) return null;
					let v$1 = m.get(w$1);
					if (v$1 === null) return null;
					d$1.nodes = [z("@media", `(width >= ${v$1})`, d$1.nodes)];
				}, { compounds: 1 });
			}, (d$1, w$1) => u$1(d$1, w$1, "asc", m)), t.suggest("min", () => Array.from(g$1.keys()).filter((d$1) => d$1 !== null));
		}
		{
			let g$1 = r.namespace("--container"), m = new M((d$1) => {
				switch (d$1.kind) {
					case "functional": {
						if (d$1.value === null) return null;
						let w$1 = null;
						return d$1.value.kind === "arbitrary" ? w$1 = d$1.value.value : d$1.value.kind === "named" && (w$1 = r.resolveValue(d$1.value.value, ["--container"])), !w$1 || w$1.includes("var(") ? null : w$1;
					}
					case "static":
					case "arbitrary":
					case "compound": return null;
				}
			});
			t.group(() => {
				t.functional("@max", (d$1, w$1) => {
					let v$1 = m.get(w$1);
					if (v$1 === null) return null;
					d$1.nodes = [z("@container", w$1.modifier ? `${w$1.modifier.value} (width < ${v$1})` : `(width < ${v$1})`, d$1.nodes)];
				}, { compounds: 1 });
			}, (d$1, w$1) => u$1(d$1, w$1, "desc", m)), t.suggest("@max", () => Array.from(g$1.keys()).filter((d$1) => d$1 !== null)), t.group(() => {
				t.functional("@", (d$1, w$1) => {
					let v$1 = m.get(w$1);
					if (v$1 === null) return null;
					d$1.nodes = [z("@container", w$1.modifier ? `${w$1.modifier.value} (width >= ${v$1})` : `(width >= ${v$1})`, d$1.nodes)];
				}, { compounds: 1 }), t.functional("@min", (d$1, w$1) => {
					let v$1 = m.get(w$1);
					if (v$1 === null) return null;
					d$1.nodes = [z("@container", w$1.modifier ? `${w$1.modifier.value} (width >= ${v$1})` : `(width >= ${v$1})`, d$1.nodes)];
				}, { compounds: 1 });
			}, (d$1, w$1) => u$1(d$1, w$1, "asc", m)), t.suggest("@min", () => Array.from(g$1.keys()).filter((d$1) => d$1 !== null)), t.suggest("@", () => Array.from(g$1.keys()).filter((d$1) => d$1 !== null));
		}
	}
	return i("portrait", ["@media (orientation: portrait)"]), i("landscape", ["@media (orientation: landscape)"]), i("ltr", ["&:where(:dir(ltr), [dir=\"ltr\"], [dir=\"ltr\"] *)"]), i("rtl", ["&:where(:dir(rtl), [dir=\"rtl\"], [dir=\"rtl\"] *)"]), i("dark", ["@media (prefers-color-scheme: dark)"]), i("starting", ["@starting-style"]), i("print", ["@media print"]), i("forced-colors", ["@media (forced-colors: active)"]), i("inverted-colors", ["@media (inverted-colors: inverted)"]), i("pointer-none", ["@media (pointer: none)"]), i("pointer-coarse", ["@media (pointer: coarse)"]), i("pointer-fine", ["@media (pointer: fine)"]), i("any-pointer-none", ["@media (any-pointer: none)"]), i("any-pointer-coarse", ["@media (any-pointer: coarse)"]), i("any-pointer-fine", ["@media (any-pointer: fine)"]), i("noscript", ["@media (scripting: none)"]), t;
}
function wr(r) {
	if (r.includes("=")) {
		let [t, ...i] = d(r, "="), e = i.join("=").trim();
		if (e[0] === "'" || e[0] === "\"") return r;
		if (e.length > 1) {
			let n = e[e.length - 1];
			if (e[e.length - 2] === " " && (n === "i" || n === "I" || n === "s" || n === "S")) return `${t}="${e.slice(0, -2)}" ${n}`;
		}
		return `${t}="${e}"`;
	}
	return r;
}
function At(r, t) {
	D(r, (i, { replaceWith: e }) => {
		if (i.kind === "at-rule" && i.name === "@slot") e(t);
		else if (i.kind === "at-rule" && (i.name === "@keyframes" || i.name === "@property")) return Object.assign(i, F([z(i.name, i.params, i.nodes)])), 1;
	});
}
function br(r) {
	let t = cr(r), i = yr(r), e = new M((f$1) => ir(f$1, p)), n = new M((f$1) => Array.from(rr(f$1, p))), s = new M((f$1) => new M((u$1) => {
		let g$1 = kr(u$1, p, f$1);
		try {
			xe(g$1.map(({ node: m }) => m), p);
		} catch {
			return [];
		}
		return g$1;
	})), a = new M((f$1) => {
		for (let u$1 of qe(f$1)) r.markUsedVariable(u$1);
	}), p = {
		theme: r,
		utilities: t,
		variants: i,
		invalidCandidates: /* @__PURE__ */ new Set(),
		important: !1,
		candidatesToCss(f$1) {
			let u$1 = [];
			for (let g$1 of f$1) {
				let m = !1, { astNodes: d$1 } = pe$1([g$1], this, { onInvalidCandidate() {
					m = !0;
				} });
				d$1 = ve(d$1, p, 0), d$1.length === 0 || m ? u$1.push(null) : u$1.push(ne(d$1));
			}
			return u$1;
		},
		getClassOrder(f$1) {
			return vr(this, f$1);
		},
		getClassList() {
			return gr(this);
		},
		getVariants() {
			return hr(this);
		},
		parseCandidate(f$1) {
			return n.get(f$1);
		},
		parseVariant(f$1) {
			return e.get(f$1);
		},
		compileAstNodes(f$1, u$1 = 1) {
			return s.get(u$1).get(f$1);
		},
		printCandidate(f$1) {
			return or(p, f$1);
		},
		printVariant(f$1) {
			return He(f$1);
		},
		getVariantOrder() {
			let f$1 = Array.from(e.values());
			f$1.sort((d$1, w$1) => this.variants.compare(d$1, w$1));
			let u$1 = /* @__PURE__ */ new Map(), g$1, m = 0;
			for (let d$1 of f$1) d$1 !== null && (g$1 !== void 0 && this.variants.compare(g$1, d$1) !== 0 && m++, u$1.set(d$1, m), g$1 = d$1);
			return u$1;
		},
		resolveThemeValue(f$1, u$1 = !0) {
			let g$1 = f$1.lastIndexOf("/"), m = null;
			g$1 !== -1 && (m = f$1.slice(g$1 + 1).trim(), f$1 = f$1.slice(0, g$1).trim());
			let d$1 = r.resolve(null, [f$1], u$1 ? 1 : 0) ?? void 0;
			return m && d$1 ? Q(d$1, m) : d$1;
		},
		trackUsedVariables(f$1) {
			a.get(f$1);
		}
	};
	return p;
}
var Ct = [
	"container-type",
	"pointer-events",
	"visibility",
	"position",
	"inset",
	"inset-inline",
	"inset-block",
	"inset-inline-start",
	"inset-inline-end",
	"top",
	"right",
	"bottom",
	"left",
	"isolation",
	"z-index",
	"order",
	"grid-column",
	"grid-column-start",
	"grid-column-end",
	"grid-row",
	"grid-row-start",
	"grid-row-end",
	"float",
	"clear",
	"--tw-container-component",
	"margin",
	"margin-inline",
	"margin-block",
	"margin-inline-start",
	"margin-inline-end",
	"margin-top",
	"margin-right",
	"margin-bottom",
	"margin-left",
	"box-sizing",
	"display",
	"field-sizing",
	"aspect-ratio",
	"height",
	"max-height",
	"min-height",
	"width",
	"max-width",
	"min-width",
	"flex",
	"flex-shrink",
	"flex-grow",
	"flex-basis",
	"table-layout",
	"caption-side",
	"border-collapse",
	"border-spacing",
	"transform-origin",
	"translate",
	"--tw-translate-x",
	"--tw-translate-y",
	"--tw-translate-z",
	"scale",
	"--tw-scale-x",
	"--tw-scale-y",
	"--tw-scale-z",
	"rotate",
	"--tw-rotate-x",
	"--tw-rotate-y",
	"--tw-rotate-z",
	"--tw-skew-x",
	"--tw-skew-y",
	"transform",
	"animation",
	"cursor",
	"touch-action",
	"--tw-pan-x",
	"--tw-pan-y",
	"--tw-pinch-zoom",
	"resize",
	"scroll-snap-type",
	"--tw-scroll-snap-strictness",
	"scroll-snap-align",
	"scroll-snap-stop",
	"scroll-margin",
	"scroll-margin-inline",
	"scroll-margin-block",
	"scroll-margin-inline-start",
	"scroll-margin-inline-end",
	"scroll-margin-top",
	"scroll-margin-right",
	"scroll-margin-bottom",
	"scroll-margin-left",
	"scroll-padding",
	"scroll-padding-inline",
	"scroll-padding-block",
	"scroll-padding-inline-start",
	"scroll-padding-inline-end",
	"scroll-padding-top",
	"scroll-padding-right",
	"scroll-padding-bottom",
	"scroll-padding-left",
	"list-style-position",
	"list-style-type",
	"list-style-image",
	"appearance",
	"columns",
	"break-before",
	"break-inside",
	"break-after",
	"grid-auto-columns",
	"grid-auto-flow",
	"grid-auto-rows",
	"grid-template-columns",
	"grid-template-rows",
	"flex-direction",
	"flex-wrap",
	"place-content",
	"place-items",
	"align-content",
	"align-items",
	"justify-content",
	"justify-items",
	"gap",
	"column-gap",
	"row-gap",
	"--tw-space-x-reverse",
	"--tw-space-y-reverse",
	"divide-x-width",
	"divide-y-width",
	"--tw-divide-y-reverse",
	"divide-style",
	"divide-color",
	"place-self",
	"align-self",
	"justify-self",
	"overflow",
	"overflow-x",
	"overflow-y",
	"overscroll-behavior",
	"overscroll-behavior-x",
	"overscroll-behavior-y",
	"scroll-behavior",
	"border-radius",
	"border-start-radius",
	"border-end-radius",
	"border-top-radius",
	"border-right-radius",
	"border-bottom-radius",
	"border-left-radius",
	"border-start-start-radius",
	"border-start-end-radius",
	"border-end-end-radius",
	"border-end-start-radius",
	"border-top-left-radius",
	"border-top-right-radius",
	"border-bottom-right-radius",
	"border-bottom-left-radius",
	"border-width",
	"border-inline-width",
	"border-block-width",
	"border-inline-start-width",
	"border-inline-end-width",
	"border-top-width",
	"border-right-width",
	"border-bottom-width",
	"border-left-width",
	"border-style",
	"border-inline-style",
	"border-block-style",
	"border-inline-start-style",
	"border-inline-end-style",
	"border-top-style",
	"border-right-style",
	"border-bottom-style",
	"border-left-style",
	"border-color",
	"border-inline-color",
	"border-block-color",
	"border-inline-start-color",
	"border-inline-end-color",
	"border-top-color",
	"border-right-color",
	"border-bottom-color",
	"border-left-color",
	"background-color",
	"background-image",
	"--tw-gradient-position",
	"--tw-gradient-stops",
	"--tw-gradient-via-stops",
	"--tw-gradient-from",
	"--tw-gradient-from-position",
	"--tw-gradient-via",
	"--tw-gradient-via-position",
	"--tw-gradient-to",
	"--tw-gradient-to-position",
	"mask-image",
	"--tw-mask-top",
	"--tw-mask-top-from-color",
	"--tw-mask-top-from-position",
	"--tw-mask-top-to-color",
	"--tw-mask-top-to-position",
	"--tw-mask-right",
	"--tw-mask-right-from-color",
	"--tw-mask-right-from-position",
	"--tw-mask-right-to-color",
	"--tw-mask-right-to-position",
	"--tw-mask-bottom",
	"--tw-mask-bottom-from-color",
	"--tw-mask-bottom-from-position",
	"--tw-mask-bottom-to-color",
	"--tw-mask-bottom-to-position",
	"--tw-mask-left",
	"--tw-mask-left-from-color",
	"--tw-mask-left-from-position",
	"--tw-mask-left-to-color",
	"--tw-mask-left-to-position",
	"--tw-mask-linear",
	"--tw-mask-linear-position",
	"--tw-mask-linear-from-color",
	"--tw-mask-linear-from-position",
	"--tw-mask-linear-to-color",
	"--tw-mask-linear-to-position",
	"--tw-mask-radial",
	"--tw-mask-radial-shape",
	"--tw-mask-radial-size",
	"--tw-mask-radial-position",
	"--tw-mask-radial-from-color",
	"--tw-mask-radial-from-position",
	"--tw-mask-radial-to-color",
	"--tw-mask-radial-to-position",
	"--tw-mask-conic",
	"--tw-mask-conic-position",
	"--tw-mask-conic-from-color",
	"--tw-mask-conic-from-position",
	"--tw-mask-conic-to-color",
	"--tw-mask-conic-to-position",
	"box-decoration-break",
	"background-size",
	"background-attachment",
	"background-clip",
	"background-position",
	"background-repeat",
	"background-origin",
	"mask-composite",
	"mask-mode",
	"mask-type",
	"mask-size",
	"mask-clip",
	"mask-position",
	"mask-repeat",
	"mask-origin",
	"fill",
	"stroke",
	"stroke-width",
	"object-fit",
	"object-position",
	"padding",
	"padding-inline",
	"padding-block",
	"padding-inline-start",
	"padding-inline-end",
	"padding-top",
	"padding-right",
	"padding-bottom",
	"padding-left",
	"text-align",
	"text-indent",
	"vertical-align",
	"font-family",
	"font-size",
	"line-height",
	"font-weight",
	"letter-spacing",
	"text-wrap",
	"overflow-wrap",
	"word-break",
	"text-overflow",
	"hyphens",
	"white-space",
	"color",
	"text-transform",
	"font-style",
	"font-stretch",
	"font-variant-numeric",
	"text-decoration-line",
	"text-decoration-color",
	"text-decoration-style",
	"text-decoration-thickness",
	"text-underline-offset",
	"-webkit-font-smoothing",
	"placeholder-color",
	"caret-color",
	"accent-color",
	"color-scheme",
	"opacity",
	"background-blend-mode",
	"mix-blend-mode",
	"box-shadow",
	"--tw-shadow",
	"--tw-shadow-color",
	"--tw-ring-shadow",
	"--tw-ring-color",
	"--tw-inset-shadow",
	"--tw-inset-shadow-color",
	"--tw-inset-ring-shadow",
	"--tw-inset-ring-color",
	"--tw-ring-offset-width",
	"--tw-ring-offset-color",
	"outline",
	"outline-width",
	"outline-offset",
	"outline-color",
	"--tw-blur",
	"--tw-brightness",
	"--tw-contrast",
	"--tw-drop-shadow",
	"--tw-grayscale",
	"--tw-hue-rotate",
	"--tw-invert",
	"--tw-saturate",
	"--tw-sepia",
	"filter",
	"--tw-backdrop-blur",
	"--tw-backdrop-brightness",
	"--tw-backdrop-contrast",
	"--tw-backdrop-grayscale",
	"--tw-backdrop-hue-rotate",
	"--tw-backdrop-invert",
	"--tw-backdrop-opacity",
	"--tw-backdrop-saturate",
	"--tw-backdrop-sepia",
	"backdrop-filter",
	"transition-property",
	"transition-behavior",
	"transition-delay",
	"transition-duration",
	"transition-timing-function",
	"will-change",
	"contain",
	"content",
	"forced-color-adjust"
];
function pe$1(r, t, { onInvalidCandidate: i, respectImportant: e } = {}) {
	let n = /* @__PURE__ */ new Map(), s = [], a = /* @__PURE__ */ new Map();
	for (let u$1 of r) {
		if (t.invalidCandidates.has(u$1)) {
			i?.(u$1);
			continue;
		}
		let g$1 = t.parseCandidate(u$1);
		if (g$1.length === 0) {
			i?.(u$1);
			continue;
		}
		a.set(u$1, g$1);
	}
	let p = 0;
	(e ?? !0) && (p |= 1);
	let f$1 = t.getVariantOrder();
	for (let [u$1, g$1] of a) {
		let m = !1;
		for (let d$1 of g$1) {
			let w$1 = t.compileAstNodes(d$1, p);
			if (w$1.length !== 0) {
				m = !0;
				for (let { node: v$1, propertySort: y$1 } of w$1) {
					let x$1 = 0n;
					for (let N$1 of d$1.variants) x$1 |= 1n << BigInt(f$1.get(N$1));
					n.set(v$1, {
						properties: y$1,
						variants: x$1,
						candidate: u$1
					}), s.push(v$1);
				}
			}
		}
		m || i?.(u$1);
	}
	return s.sort((u$1, g$1) => {
		let m = n.get(u$1), d$1 = n.get(g$1);
		if (m.variants - d$1.variants !== 0n) return Number(m.variants - d$1.variants);
		let w$1 = 0;
		for (; w$1 < m.properties.order.length && w$1 < d$1.properties.order.length && m.properties.order[w$1] === d$1.properties.order[w$1];) w$1 += 1;
		return (m.properties.order[w$1] ?? Infinity) - (d$1.properties.order[w$1] ?? Infinity) || d$1.properties.count - m.properties.count || Qe(m.candidate, d$1.candidate);
	}), {
		astNodes: s,
		nodeSorting: n
	};
}
function kr(r, t, i) {
	let e = Ki(r, t);
	if (e.length === 0) return [];
	let n = t.important && !!(i & 1), s = [], a = `.${fe(r.raw)}`;
	for (let p of e) {
		let f$1 = _i(p);
		(r.important || n) && Ar(p);
		let u$1 = {
			kind: "rule",
			selector: a,
			nodes: p
		};
		for (let g$1 of r.variants) if (Ae(u$1, g$1, t.variants) === null) return [];
		s.push({
			node: u$1,
			propertySort: f$1
		});
	}
	return s;
}
function Ae(r, t, i, e = 0) {
	if (t.kind === "arbitrary") {
		if (t.relative && e === 0) return null;
		r.nodes = [H(t.selector, r.nodes)];
		return;
	}
	let { applyFn: n } = i.get(t.root);
	if (t.kind === "compound") {
		let a = z("@slot");
		if (Ae(a, t.variant, i, e + 1) === null || t.root === "not" && a.nodes.length > 1) return null;
		for (let f$1 of a.nodes) if (f$1.kind !== "rule" && f$1.kind !== "at-rule" || n(f$1, t) === null) return null;
		D(a.nodes, (f$1) => {
			if ((f$1.kind === "rule" || f$1.kind === "at-rule") && f$1.nodes.length <= 0) return f$1.nodes = r.nodes, 1;
		}), r.nodes = a.nodes;
		return;
	}
	if (n(r, t) === null) return null;
}
function xr(r) {
	let t = r.options?.types ?? [];
	return t.length > 1 && t.includes("any");
}
function Ki(r, t) {
	if (r.kind === "arbitrary") {
		let a = r.value;
		return r.modifier && (a = X(a, r.modifier, t.theme)), a === null ? [] : [[l$1(r.property, a)]];
	}
	let i = t.utilities.get(r.root) ?? [], e = [], n = i.filter((a) => !xr(a));
	for (let a of n) {
		if (a.kind !== r.kind) continue;
		let p = a.compileFn(r);
		if (p !== void 0) {
			if (p === null) return e;
			e.push(p);
		}
	}
	if (e.length > 0) return e;
	let s = i.filter((a) => xr(a));
	for (let a of s) {
		if (a.kind !== r.kind) continue;
		let p = a.compileFn(r);
		if (p !== void 0) {
			if (p === null) return e;
			e.push(p);
		}
	}
	return e;
}
function Ar(r) {
	for (let t of r) t.kind !== "at-root" && (t.kind === "declaration" ? t.important = !0 : (t.kind === "rule" || t.kind === "at-rule") && Ar(t.nodes));
}
function _i(r) {
	let t = /* @__PURE__ */ new Set(), i = 0, e = r.slice(), n = !1;
	for (; e.length > 0;) {
		let s = e.shift();
		if (s.kind === "declaration") {
			if (s.value === void 0 || (i++, n)) continue;
			if (s.property === "--tw-sort") {
				let p = Ct.indexOf(s.value ?? "");
				if (p !== -1) {
					t.add(p), n = !0;
					continue;
				}
			}
			let a = Ct.indexOf(s.property);
			a !== -1 && t.add(a);
		} else if (s.kind === "rule" || s.kind === "at-rule") for (let a of s.nodes) e.push(a);
	}
	return {
		order: Array.from(t).sort((s, a) => s - a),
		count: i
	};
}
function Oe(r, t) {
	let i = 0, e = H("&", r), n = /* @__PURE__ */ new Set(), s = new M(() => /* @__PURE__ */ new Set()), a = new M(() => /* @__PURE__ */ new Set());
	D([e], (m, { parent: d$1, path: w$1 }) => {
		if (m.kind === "at-rule") {
			if (m.name === "@keyframes") return D(m.nodes, (v$1) => {
				if (v$1.kind === "at-rule" && v$1.name === "@apply") throw new Error("You cannot use `@apply` inside `@keyframes`.");
			}), 1;
			if (m.name === "@utility") {
				let v$1 = m.params.replace(/-\*$/, "");
				a.get(v$1).add(m), D(m.nodes, (y$1) => {
					if (!(y$1.kind !== "at-rule" || y$1.name !== "@apply")) {
						n.add(m);
						for (let x$1 of Cr(y$1, t)) s.get(m).add(x$1);
					}
				});
				return;
			}
			if (m.name === "@apply") {
				if (d$1 === null) return;
				i |= 1, n.add(d$1);
				for (let v$1 of Cr(m, t)) for (let y$1 of w$1) y$1 !== m && n.has(y$1) && s.get(y$1).add(v$1);
			}
		}
	});
	let p = /* @__PURE__ */ new Set(), f$1 = [], u$1 = /* @__PURE__ */ new Set();
	function g$1(m, d$1 = []) {
		if (!p.has(m)) {
			if (u$1.has(m)) {
				let w$1 = d$1[(d$1.indexOf(m) + 1) % d$1.length];
				throw m.kind === "at-rule" && m.name === "@utility" && w$1.kind === "at-rule" && w$1.name === "@utility" && D(m.nodes, (v$1) => {
					if (v$1.kind !== "at-rule" || v$1.name !== "@apply") return;
					let y$1 = v$1.params.split(/\s+/g);
					for (let x$1 of y$1) for (let N$1 of t.parseCandidate(x$1)) switch (N$1.kind) {
						case "arbitrary": break;
						case "static":
						case "functional":
							if (w$1.params.replace(/-\*$/, "") === N$1.root) throw new Error(`You cannot \`@apply\` the \`${x$1}\` utility here because it creates a circular dependency.`);
							break;
						default:
					}
				}), /* @__PURE__ */ new Error(`Circular dependency detected:

${ne([m])}
Relies on:

${ne([w$1])}`);
			}
			u$1.add(m);
			for (let w$1 of s.get(m)) for (let v$1 of a.get(w$1)) d$1.push(m), g$1(v$1, d$1), d$1.pop();
			p.add(m), u$1.delete(m), f$1.push(m);
		}
	}
	for (let m of n) g$1(m);
	for (let m of f$1) "nodes" in m && D(m.nodes, (d$1, { replaceWith: w$1 }) => {
		if (d$1.kind !== "at-rule" || d$1.name !== "@apply") return;
		let v$1 = d$1.params.split(/(\s+)/g), y$1 = {}, x$1 = 0;
		for (let [N$1, k] of v$1.entries()) N$1 % 2 === 0 && (y$1[k] = x$1), x$1 += k.length;
		{
			let N$1 = Object.keys(y$1), k = pe$1(N$1, t, {
				respectImportant: !1,
				onInvalidCandidate: (R$1) => {
					if (t.theme.prefix && !R$1.startsWith(t.theme.prefix)) throw new Error(`Cannot apply unprefixed utility class \`${R$1}\`. Did you mean \`${t.theme.prefix}:${R$1}\`?`);
					if (t.invalidCandidates.has(R$1)) throw new Error(`Cannot apply utility class \`${R$1}\` because it has been explicitly disabled: https://tailwindcss.com/docs/detecting-classes-in-source-files#explicitly-excluding-classes`);
					let j$1 = d(R$1, ":");
					if (j$1.length > 1) {
						let _$1 = j$1.pop();
						if (t.candidatesToCss([_$1])[0]) {
							let G$1 = t.candidatesToCss(j$1.map((B$1) => `${B$1}:[--tw-variant-check:1]`)), L$1 = j$1.filter((B$1, Z$1) => G$1[Z$1] === null);
							if (L$1.length > 0) {
								if (L$1.length === 1) throw new Error(`Cannot apply utility class \`${R$1}\` because the ${L$1.map((B$1) => `\`${B$1}\``)} variant does not exist.`);
								{
									let B$1 = new Intl.ListFormat("en", {
										style: "long",
										type: "conjunction"
									});
									throw new Error(`Cannot apply utility class \`${R$1}\` because the ${B$1.format(L$1.map((Z$1) => `\`${Z$1}\``))} variants do not exist.`);
								}
							}
						}
					}
					throw t.theme.size === 0 ? /* @__PURE__ */ new Error(`Cannot apply unknown utility class \`${R$1}\`. Are you using CSS modules or similar and missing \`@reference\`? https://tailwindcss.com/docs/functions-and-directives#reference-directive`) : /* @__PURE__ */ new Error(`Cannot apply unknown utility class \`${R$1}\``);
				}
			}), S$1 = d$1.src, O$1 = k.astNodes.map((R$1) => {
				let j$1 = k.nodeSorting.get(R$1)?.candidate, _$1 = j$1 ? y$1[j$1] : void 0;
				if (R$1 = structuredClone(R$1), !S$1 || !j$1 || _$1 === void 0) return D([R$1], (L$1) => {
					L$1.src = S$1;
				}), R$1;
				let G$1 = [
					S$1[0],
					S$1[1],
					S$1[2]
				];
				return G$1[1] += 7 + _$1, G$1[2] = G$1[1] + j$1.length, D([R$1], (L$1) => {
					L$1.src = G$1;
				}), R$1;
			}), K$1 = [];
			for (let R$1 of O$1) if (R$1.kind === "rule") for (let j$1 of R$1.nodes) K$1.push(j$1);
			else K$1.push(R$1);
			w$1(K$1);
		}
	});
	return i;
}
function* Cr(r, t) {
	for (let i of r.params.split(/\s+/g)) for (let e of t.parseCandidate(i)) switch (e.kind) {
		case "arbitrary": break;
		case "static":
		case "functional":
			yield e.root;
			break;
		default:
	}
}
async function $t(r, t, i, e = 0, n = !1) {
	let s = 0, a = [];
	return D(r, (p, { replaceWith: f$1 }) => {
		if (p.kind === "at-rule" && (p.name === "@import" || p.name === "@reference")) {
			let u$1 = ji(q(p.params));
			if (u$1 === null) return;
			p.name === "@reference" && (u$1.media = "reference"), s |= 2;
			let { uri: g$1, layer: m, media: d$1, supports: w$1 } = u$1;
			if (g$1.startsWith("data:") || g$1.startsWith("http://") || g$1.startsWith("https://")) return;
			let v$1 = le({}, []);
			return a.push((async () => {
				if (e > 100) throw new Error(`Exceeded maximum recursion depth while resolving \`${g$1}\` in \`${t}\`)`);
				let y$1 = await i(g$1, t), x$1 = me$1(y$1.content, { from: n ? y$1.path : void 0 });
				await $t(x$1, y$1.base, i, e + 1, n), v$1.nodes = Di(p, [le({ base: y$1.base }, x$1)], m, d$1, w$1);
			})()), f$1(v$1), 1;
		}
	}), a.length > 0 && await Promise.all(a), s;
}
function ji(r) {
	let t, i = null, e = null, n = null;
	for (let s = 0; s < r.length; s++) {
		let a = r[s];
		if (a.kind !== "separator") {
			if (a.kind === "word" && !t) {
				if (!a.value || a.value[0] !== "\"" && a.value[0] !== "'") return null;
				t = a.value.slice(1, -1);
				continue;
			}
			if (a.kind === "function" && a.value.toLowerCase() === "url" || !t) return null;
			if ((a.kind === "word" || a.kind === "function") && a.value.toLowerCase() === "layer") {
				if (i) return null;
				if (n) throw new Error("`layer(…)` in an `@import` should come before any other functions or conditions");
				"nodes" in a ? i = Y(a.nodes) : i = "";
				continue;
			}
			if (a.kind === "function" && a.value.toLowerCase() === "supports") {
				if (n) return null;
				n = Y(a.nodes);
				continue;
			}
			e = Y(r.slice(s));
			break;
		}
	}
	return t ? {
		uri: t,
		layer: i,
		media: e,
		supports: n
	} : null;
}
function Di(r, t, i, e, n) {
	let s = t;
	if (i !== null) {
		let a = z("@layer", i, s);
		a.src = r.src, s = [a];
	}
	if (e !== null) {
		let a = z("@media", e, s);
		a.src = r.src, s = [a];
	}
	if (n !== null) {
		let a = z("@supports", n[0] === "(" ? n : `(${n})`, s);
		a.src = r.src, s = [a];
	}
	return s;
}
function Ce(r, t = null) {
	return Array.isArray(r) && r.length === 2 && typeof r[1] == "object" && true ? t ? r[1][t] ?? null : r[0] : Array.isArray(r) && t === null ? r.join(", ") : typeof r == "string" && t === null ? r : null;
}
function $r(r, { theme: t }, i) {
	for (let e of i) {
		let n = et([e]);
		n && r.theme.clearNamespace(`--${n}`, 4);
	}
	for (let [e, n] of Ui(t)) {
		if (typeof n != "string" && typeof n != "number") continue;
		if (typeof n == "string" && (n = n.replace(/<alpha-value>/g, "1")), e[0] === "opacity" && (typeof n == "number" || typeof n == "string")) {
			let a = typeof n == "string" ? parseFloat(n) : n;
			a >= 0 && a <= 1 && (n = a * 100 + "%");
		}
		let s = et(e);
		s && r.theme.add(`--${s}`, "" + n, 7);
	}
	if (Object.hasOwn(t, "fontFamily")) {
		let e = 5;
		{
			let n = Ce(t.fontFamily.sans);
			n && r.theme.hasDefault("--font-sans") && (r.theme.add("--default-font-family", n, e), r.theme.add("--default-font-feature-settings", Ce(t.fontFamily.sans, "fontFeatureSettings") ?? "normal", e), r.theme.add("--default-font-variation-settings", Ce(t.fontFamily.sans, "fontVariationSettings") ?? "normal", e));
		}
		{
			let n = Ce(t.fontFamily.mono);
			n && r.theme.hasDefault("--font-mono") && (r.theme.add("--default-mono-font-family", n, e), r.theme.add("--default-mono-font-feature-settings", Ce(t.fontFamily.mono, "fontFeatureSettings") ?? "normal", e), r.theme.add("--default-mono-font-variation-settings", Ce(t.fontFamily.mono, "fontVariationSettings") ?? "normal", e));
		}
	}
	return t;
}
function Ui(r) {
	let t = [];
	return Vr(r, [], (i, e) => {
		if (Li(i)) return t.push([e, i]), 1;
		if (Fi(i)) {
			t.push([e, i[0]]);
			for (let n of Reflect.ownKeys(i[1])) t.push([[...e, `-${n}`], i[1][n]]);
			return 1;
		}
		if (Array.isArray(i) && i.every((n) => typeof n == "string")) return e[0] === "fontSize" ? (t.push([e, i[0]]), i.length >= 2 && t.push([[...e, "-line-height"], i[1]])) : t.push([e, i.join(", ")]), 1;
	}), t;
}
var Ii = /^[a-zA-Z0-9-_%/\.]+$/;
function et(r) {
	if (r[0] === "container") return null;
	r = structuredClone(r), r[0] === "animation" && (r[0] = "animate"), r[0] === "aspectRatio" && (r[0] = "aspect"), r[0] === "borderRadius" && (r[0] = "radius"), r[0] === "boxShadow" && (r[0] = "shadow"), r[0] === "colors" && (r[0] = "color"), r[0] === "containers" && (r[0] = "container"), r[0] === "fontFamily" && (r[0] = "font"), r[0] === "fontSize" && (r[0] = "text"), r[0] === "letterSpacing" && (r[0] = "tracking"), r[0] === "lineHeight" && (r[0] = "leading"), r[0] === "maxWidth" && (r[0] = "container"), r[0] === "screens" && (r[0] = "breakpoint"), r[0] === "transitionTimingFunction" && (r[0] = "ease");
	for (let t of r) if (!Ii.test(t)) return null;
	return r.map((t, i, e) => t === "1" && i !== e.length - 1 ? "" : t).map((t) => t.replaceAll(".", "_").replace(/([a-z])([A-Z])/g, (i, e, n) => `${e}-${n.toLowerCase()}`)).filter((t, i) => t !== "DEFAULT" || i !== r.length - 1).join("-");
}
function Li(r) {
	return typeof r == "number" || typeof r == "string";
}
function Fi(r) {
	if (!Array.isArray(r) || r.length !== 2 || typeof r[0] != "string" && typeof r[0] != "number" || r[1] === void 0 || r[1] === null || typeof r[1] != "object") return !1;
	for (let t of Reflect.ownKeys(r[1])) if (typeof t != "string" || typeof r[1][t] != "string" && typeof r[1][t] != "number") return !1;
	return !0;
}
function Vr(r, t = [], i) {
	for (let e of Reflect.ownKeys(r)) {
		let n = r[e];
		if (n == null) continue;
		let s = [...t, e], a = i(n, s) ?? 0;
		if (a !== 1) {
			if (a === 2) return 2;
			if (!(!Array.isArray(n) && typeof n != "object") && Vr(n, s, i) === 2) return 2;
		}
	}
}
function tt(r) {
	let t = [];
	for (let i of d(r, ".")) {
		if (!i.includes("[")) {
			t.push(i);
			continue;
		}
		let e = 0;
		for (;;) {
			let n = i.indexOf("[", e), s = i.indexOf("]", n);
			if (n === -1 || s === -1) break;
			n > e && t.push(i.slice(e, n)), t.push(i.slice(n + 1, s)), e = s + 1;
		}
		e <= i.length - 1 && t.push(i.slice(e));
	}
	return t;
}
function $e(r) {
	if (Object.prototype.toString.call(r) !== "[object Object]") return !1;
	let t = Object.getPrototypeOf(r);
	return t === null || Object.getPrototypeOf(t) === null;
}
function Ke(r, t, i, e = []) {
	for (let n of t) if (n != null) for (let s of Reflect.ownKeys(n)) {
		e.push(s);
		let a = i(r[s], n[s], e);
		a !== void 0 ? r[s] = a : !$e(r[s]) || !$e(n[s]) ? r[s] = n[s] : r[s] = Ke({}, [r[s], n[s]], i, e), e.pop();
	}
	return r;
}
function rt(r, t, i) {
	return function(n, s) {
		let a = n.lastIndexOf("/"), p = null;
		a !== -1 && (p = n.slice(a + 1).trim(), n = n.slice(0, a).trim());
		let f$1 = (() => {
			let u$1 = tt(n), [g$1, m] = zi(r.theme, u$1), d$1 = i(Nr(t() ?? {}, u$1) ?? null);
			if (typeof d$1 == "string" && (d$1 = d$1.replace("<alpha-value>", "1")), typeof g$1 != "object") return typeof m != "object" && m & 4 ? d$1 ?? g$1 : g$1;
			if (d$1 !== null && typeof d$1 == "object" && !Array.isArray(d$1)) {
				let w$1 = Ke({}, [d$1], (v$1, y$1) => y$1);
				if (g$1 === null && Object.hasOwn(d$1, "__CSS_VALUES__")) {
					let v$1 = {};
					for (let y$1 in d$1.__CSS_VALUES__) v$1[y$1] = d$1[y$1], delete w$1[y$1];
					g$1 = v$1;
				}
				for (let v$1 in g$1) v$1 !== "__CSS_VALUES__" && (d$1?.__CSS_VALUES__?.[v$1] & 4 && Nr(w$1, v$1.split("-")) !== void 0 || (w$1[ge$1(v$1)] = g$1[v$1]));
				return w$1;
			}
			if (Array.isArray(g$1) && Array.isArray(m) && Array.isArray(d$1)) {
				let w$1 = g$1[0], v$1 = g$1[1];
				m[0] & 4 && (w$1 = d$1[0] ?? w$1);
				for (let y$1 of Object.keys(v$1)) m[1][y$1] & 4 && (v$1[y$1] = d$1[1][y$1] ?? v$1[y$1]);
				return [w$1, v$1];
			}
			return g$1 ?? d$1;
		})();
		return p && typeof f$1 == "string" && (f$1 = Q(f$1, p)), f$1 ?? s;
	};
}
function zi(r, t) {
	if (t.length === 1 && t[0].startsWith("--")) return [r.get([t[0]]), r.getOptions(t[0])];
	let i = et(t), e = /* @__PURE__ */ new Map(), n = new M(() => /* @__PURE__ */ new Map()), s = r.namespace(`--${i}`);
	if (s.size === 0) return [null, 0];
	let a = /* @__PURE__ */ new Map();
	for (let [g$1, m] of s) {
		if (!g$1 || !g$1.includes("--")) {
			e.set(g$1, m), a.set(g$1, r.getOptions(g$1 ? `--${i}-${g$1}` : `--${i}`));
			continue;
		}
		let d$1 = g$1.indexOf("--"), w$1 = g$1.slice(0, d$1), v$1 = g$1.slice(d$1 + 2);
		v$1 = v$1.replace(/-([a-z])/g, (y$1, x$1) => x$1.toUpperCase()), n.get(w$1 === "" ? null : w$1).set(v$1, [m, r.getOptions(`--${i}${g$1}`)]);
	}
	let p = r.getOptions(`--${i}`);
	for (let [g$1, m] of n) {
		let d$1 = e.get(g$1);
		if (typeof d$1 != "string") continue;
		let w$1 = {}, v$1 = {};
		for (let [y$1, [x$1, N$1]] of m) w$1[y$1] = x$1, v$1[y$1] = N$1;
		e.set(g$1, [d$1, w$1]), a.set(g$1, [p, v$1]);
	}
	let f$1 = {}, u$1 = {};
	for (let [g$1, m] of e) Sr(f$1, [g$1 ?? "DEFAULT"], m);
	for (let [g$1, m] of a) Sr(u$1, [g$1 ?? "DEFAULT"], m);
	return t[t.length - 1] === "DEFAULT" ? [f$1?.DEFAULT ?? null, u$1.DEFAULT ?? 0] : "DEFAULT" in f$1 && Object.keys(f$1).length === 1 ? [f$1.DEFAULT, u$1.DEFAULT ?? 0] : (f$1.__CSS_VALUES__ = u$1, [f$1, u$1]);
}
function Nr(r, t) {
	for (let i = 0; i < t.length; ++i) {
		let e = t[i];
		if (r?.[e] === void 0) {
			if (t[i + 1] === void 0) return;
			t[i + 1] = `${e}-${t[i + 1]}`;
			continue;
		}
		r = r[e];
	}
	return r;
}
function Sr(r, t, i) {
	for (let e of t.slice(0, -1)) r[e] === void 0 && (r[e] = {}), r = r[e];
	r[t[t.length - 1]] = i;
}
function Mi(r) {
	return {
		kind: "combinator",
		value: r
	};
}
function Wi(r, t) {
	return {
		kind: "function",
		value: r,
		nodes: t
	};
}
function _e(r) {
	return {
		kind: "selector",
		value: r
	};
}
function Bi(r) {
	return {
		kind: "separator",
		value: r
	};
}
function qi(r) {
	return {
		kind: "value",
		value: r
	};
}
function je(r, t, i = null) {
	for (let e = 0; e < r.length; e++) {
		let n = r[e], s = !1, a = 0, p = t(n, {
			parent: i,
			replaceWith(f$1) {
				s || (s = !0, Array.isArray(f$1) ? f$1.length === 0 ? (r.splice(e, 1), a = 0) : f$1.length === 1 ? (r[e] = f$1[0], a = 1) : (r.splice(e, 1, ...f$1), a = f$1.length) : (r[e] = f$1, a = 1));
			}
		}) ?? 0;
		if (s) {
			p === 0 ? e-- : e += a - 1;
			continue;
		}
		if (p === 2) return 2;
		if (p !== 1 && n.kind === "function" && je(n.nodes, t, n) === 2) return 2;
	}
}
function De(r) {
	let t = "";
	for (let i of r) switch (i.kind) {
		case "combinator":
		case "selector":
		case "separator":
		case "value":
			t += i.value;
			break;
		case "function": t += i.value + "(" + De(i.nodes) + ")";
	}
	return t;
}
var Tr = 92, Gi = 93, Er = 41, Ji = 58, Rr = 44, Hi = 34, Yi = 46, Pr = 62, Or = 10, Zi = 35, Kr = 91, _r = 40, jr = 43, Qi = 39, Dr = 32, Ur = 9, Ir = 126;
function it(r) {
	r = r.replaceAll(`\r
`, `
`);
	let t = [], i = [], e = null, n = "", s;
	for (let a = 0; a < r.length; a++) {
		let p = r.charCodeAt(a);
		switch (p) {
			case Rr:
			case Pr:
			case Or:
			case Dr:
			case jr:
			case Ur:
			case Ir: {
				if (n.length > 0) {
					let d$1 = _e(n);
					e ? e.nodes.push(d$1) : t.push(d$1), n = "";
				}
				let f$1 = a, u$1 = a + 1;
				for (; u$1 < r.length && (s = r.charCodeAt(u$1), !(s !== Rr && s !== Pr && s !== Or && s !== Dr && s !== jr && s !== Ur && s !== Ir)); u$1++);
				a = u$1 - 1;
				let g$1 = r.slice(f$1, u$1), m = g$1.trim() === "," ? Bi(g$1) : Mi(g$1);
				e ? e.nodes.push(m) : t.push(m);
				break;
			}
			case _r: {
				let f$1 = Wi(n, []);
				if (n = "", f$1.value !== ":not" && f$1.value !== ":where" && f$1.value !== ":has" && f$1.value !== ":is") {
					let u$1 = a + 1, g$1 = 0;
					for (let d$1 = a + 1; d$1 < r.length; d$1++) {
						if (s = r.charCodeAt(d$1), s === _r) {
							g$1++;
							continue;
						}
						if (s === Er) {
							if (g$1 === 0) {
								a = d$1;
								break;
							}
							g$1--;
						}
					}
					let m = a;
					f$1.nodes.push(qi(r.slice(u$1, m))), n = "", a = m, e ? e.nodes.push(f$1) : t.push(f$1);
					break;
				}
				e ? e.nodes.push(f$1) : t.push(f$1), i.push(f$1), e = f$1;
				break;
			}
			case Er: {
				let f$1 = i.pop();
				if (n.length > 0) {
					let u$1 = _e(n);
					f$1.nodes.push(u$1), n = "";
				}
				i.length > 0 ? e = i[i.length - 1] : e = null;
				break;
			}
			case Yi:
			case Ji:
			case Zi:
				if (n.length > 0) {
					let f$1 = _e(n);
					e ? e.nodes.push(f$1) : t.push(f$1);
				}
				n = String.fromCharCode(p);
				break;
			case Kr: {
				if (n.length > 0) {
					let g$1 = _e(n);
					e ? e.nodes.push(g$1) : t.push(g$1);
				}
				n = "";
				let f$1 = a, u$1 = 0;
				for (let g$1 = a + 1; g$1 < r.length; g$1++) {
					if (s = r.charCodeAt(g$1), s === Kr) {
						u$1++;
						continue;
					}
					if (s === Gi) {
						if (u$1 === 0) {
							a = g$1;
							break;
						}
						u$1--;
					}
				}
				n += r.slice(f$1, a + 1);
				break;
			}
			case Qi:
			case Hi: {
				let f$1 = a;
				for (let u$1 = a + 1; u$1 < r.length; u$1++) if (s = r.charCodeAt(u$1), s === Tr) u$1 += 1;
				else if (s === p) {
					a = u$1;
					break;
				}
				n += r.slice(f$1, a + 1);
				break;
			}
			case Tr: {
				let f$1 = r.charCodeAt(a + 1);
				n += String.fromCharCode(p) + String.fromCharCode(f$1), a += 1;
				break;
			}
			default: n += String.fromCharCode(p);
		}
	}
	return n.length > 0 && t.push(_e(n)), t;
}
var Lr = /^[a-z@][a-zA-Z0-9/%._-]*$/;
function Vt({ designSystem: r, ast: t, resolvedConfig: i, featuresRef: e, referenceMode: n, src: s }) {
	let a = {
		addBase(p) {
			if (n) return;
			let f$1 = ae(p);
			e.current |= xe(f$1, r);
			let u$1 = z("@layer", "base", f$1);
			D([u$1], (g$1) => {
				g$1.src = s;
			}), t.push(u$1);
		},
		addVariant(p, f$1) {
			if (!Xe.test(p)) throw new Error(`\`addVariant('${p}')\` defines an invalid variant name. Variants should only contain alphanumeric, dashes, or underscore characters and start with a lowercase letter or number.`);
			if (typeof f$1 == "string") {
				if (f$1.includes(":merge(")) return;
			} else if (Array.isArray(f$1)) {
				if (f$1.some((g$1) => g$1.includes(":merge("))) return;
			} else if (typeof f$1 == "object") {
				let g$1 = function(m, d$1) {
					return Object.entries(m).some(([w$1, v$1]) => w$1.includes(d$1) || typeof v$1 == "object" && g$1(v$1, d$1));
				};
				if (g$1(f$1, ":merge(")) return;
			}
			typeof f$1 == "string" || Array.isArray(f$1) ? r.variants.static(p, (g$1) => {
				g$1.nodes = Fr(f$1, g$1.nodes);
			}, { compounds: ye(typeof f$1 == "string" ? [f$1] : f$1) }) : typeof f$1 == "object" && r.variants.fromAst(p, ae(f$1));
		},
		matchVariant(p, f$1, u$1) {
			function g$1(d$1, w$1, v$1) {
				let y$1 = f$1(d$1, { modifier: w$1?.value ?? null });
				return Fr(y$1, v$1);
			}
			try {
				let d$1 = f$1("a", { modifier: null });
				if (typeof d$1 == "string" && d$1.includes(":merge(")) return;
				if (Array.isArray(d$1) && d$1.some((w$1) => w$1.includes(":merge("))) return;
			} catch {}
			let m = Object.keys(u$1?.values ?? {});
			r.variants.group(() => {
				r.variants.functional(p, (d$1, w$1) => {
					if (!w$1.value) {
						if (u$1?.values && "DEFAULT" in u$1.values) {
							d$1.nodes = g$1(u$1.values.DEFAULT, w$1.modifier, d$1.nodes);
							return;
						}
						return null;
					}
					if (w$1.value.kind === "arbitrary") d$1.nodes = g$1(w$1.value.value, w$1.modifier, d$1.nodes);
					else if (w$1.value.kind === "named" && u$1?.values) {
						let v$1 = u$1.values[w$1.value.value];
						if (typeof v$1 != "string") return null;
						d$1.nodes = g$1(v$1, w$1.modifier, d$1.nodes);
					} else return null;
				});
			}, (d$1, w$1) => {
				if (d$1.kind !== "functional" || w$1.kind !== "functional") return 0;
				let v$1 = d$1.value ? d$1.value.value : "DEFAULT", y$1 = w$1.value ? w$1.value.value : "DEFAULT", x$1 = u$1?.values?.[v$1] ?? v$1, N$1 = u$1?.values?.[y$1] ?? y$1;
				if (u$1 && typeof u$1.sort == "function") return u$1.sort({
					value: x$1,
					modifier: d$1.modifier?.value ?? null
				}, {
					value: N$1,
					modifier: w$1.modifier?.value ?? null
				});
				let k = m.indexOf(v$1), S$1 = m.indexOf(y$1);
				return k = k === -1 ? m.length : k, S$1 = S$1 === -1 ? m.length : S$1, k !== S$1 ? k - S$1 : x$1 < N$1 ? -1 : 1;
			}), r.variants.suggest(p, () => Object.keys(u$1?.values ?? {}).filter((d$1) => d$1 !== "DEFAULT"));
		},
		addUtilities(p) {
			p = Array.isArray(p) ? p : [p];
			let f$1 = p.flatMap((g$1) => Object.entries(g$1));
			f$1 = f$1.flatMap(([g$1, m]) => d(g$1, ",").map((d$1) => [d$1.trim(), m]));
			let u$1 = new M(() => []);
			for (let [g$1, m] of f$1) {
				if (g$1.startsWith("@keyframes ")) {
					if (!n) {
						let v$1 = H(g$1, ae(m));
						D([v$1], (y$1) => {
							y$1.src = s;
						}), t.push(v$1);
					}
					continue;
				}
				let d$1 = it(g$1), w$1 = !1;
				if (je(d$1, (v$1) => {
					if (v$1.kind === "selector" && v$1.value[0] === "." && Lr.test(v$1.value.slice(1))) {
						let y$1 = v$1.value;
						v$1.value = "&";
						let x$1 = De(d$1), N$1 = y$1.slice(1), k = x$1 === "&" ? ae(m) : [H(x$1, ae(m))];
						u$1.get(N$1).push(...k), w$1 = !0, v$1.value = y$1;
						return;
					}
					if (v$1.kind === "function" && v$1.value === ":not") return 1;
				}), !w$1) throw new Error(`\`addUtilities({ '${g$1}' : \u2026 })\` defines an invalid utility selector. Utilities must be a single class name and start with a lowercase letter, eg. \`.scrollbar-none\`.`);
			}
			for (let [g$1, m] of u$1) r.theme.prefix && D(m, (d$1) => {
				if (d$1.kind === "rule") {
					let w$1 = it(d$1.selector);
					je(w$1, (v$1) => {
						v$1.kind === "selector" && v$1.value[0] === "." && (v$1.value = `.${r.theme.prefix}\\:${v$1.value.slice(1)}`);
					}), d$1.selector = De(w$1);
				}
			}), r.utilities.static(g$1, (d$1) => {
				let w$1 = structuredClone(m);
				return zr(w$1, g$1, d$1.raw), e.current |= Oe(w$1, r), w$1;
			});
		},
		matchUtilities(p, f$1) {
			let u$1 = f$1?.type ? Array.isArray(f$1?.type) ? f$1.type : [f$1.type] : ["any"];
			for (let [m, d$1] of Object.entries(p)) {
				let w$1 = function({ negative: v$1 }) {
					return (y$1) => {
						if (y$1.value?.kind === "arbitrary" && u$1.length > 0 && !u$1.includes("any") && (y$1.value.dataType && !u$1.includes(y$1.value.dataType) || !y$1.value.dataType && !me(y$1.value.value, u$1))) return;
						let x$1 = u$1.includes("color"), N$1 = null, k = !1;
						{
							let K$1 = f$1?.values ?? {};
							x$1 && (K$1 = Object.assign({
								inherit: "inherit",
								transparent: "transparent",
								current: "currentcolor"
							}, K$1)), y$1.value ? y$1.value.kind === "arbitrary" ? N$1 = y$1.value.value : y$1.value.fraction && K$1[y$1.value.fraction] ? (N$1 = K$1[y$1.value.fraction], k = !0) : K$1[y$1.value.value] ? N$1 = K$1[y$1.value.value] : K$1.__BARE_VALUE__ && (N$1 = K$1.__BARE_VALUE__(y$1.value) ?? null, k = (y$1.value.fraction !== null && N$1?.includes("/")) ?? !1) : N$1 = K$1.DEFAULT ?? null;
						}
						if (N$1 === null) return;
						let S$1;
						{
							let K$1 = f$1?.modifiers ?? null;
							y$1.modifier ? K$1 === "any" || y$1.modifier.kind === "arbitrary" ? S$1 = y$1.modifier.value : K$1?.[y$1.modifier.value] ? S$1 = K$1[y$1.modifier.value] : x$1 && !Number.isNaN(Number(y$1.modifier.value)) ? S$1 = `${y$1.modifier.value}%` : S$1 = null : S$1 = null;
						}
						if (y$1.modifier && S$1 === null && !k) return y$1.value?.kind === "arbitrary" ? null : void 0;
						x$1 && S$1 !== null && (N$1 = Q(N$1, S$1)), v$1 && (N$1 = `calc(${N$1} * -1)`);
						let O$1 = ae(d$1(N$1, { modifier: S$1 }));
						return zr(O$1, m, y$1.raw), e.current |= Oe(O$1, r), O$1;
					};
				};
				if (!Lr.test(m)) throw new Error(`\`matchUtilities({ '${m}' : \u2026 })\` defines an invalid utility name. Utilities should be alphanumeric and start with a lowercase letter, eg. \`scrollbar\`.`);
				f$1?.supportsNegativeValues && r.utilities.functional(`-${m}`, w$1({ negative: !0 }), { types: u$1 }), r.utilities.functional(m, w$1({ negative: !1 }), { types: u$1 }), r.utilities.suggest(m, () => {
					let v$1 = f$1?.values ?? {}, y$1 = new Set(Object.keys(v$1));
					y$1.delete("__BARE_VALUE__"), y$1.delete("__CSS_VALUES__"), y$1.has("DEFAULT") && (y$1.delete("DEFAULT"), y$1.add(null));
					let x$1 = f$1?.modifiers ?? {}, N$1 = x$1 === "any" ? [] : Object.keys(x$1);
					return [{
						supportsNegative: f$1?.supportsNegativeValues ?? !1,
						values: Array.from(y$1),
						modifiers: N$1
					}];
				});
			}
		},
		addComponents(p, f$1) {
			this.addUtilities(p, f$1);
		},
		matchComponents(p, f$1) {
			this.matchUtilities(p, f$1);
		},
		theme: rt(r, () => i.theme ?? {}, (p) => p),
		prefix(p) {
			return p;
		},
		config(p, f$1) {
			let u$1 = i;
			if (!p) return u$1;
			let g$1 = tt(p);
			for (let m = 0; m < g$1.length; ++m) {
				let d$1 = g$1[m];
				if (u$1[d$1] === void 0) return f$1;
				u$1 = u$1[d$1];
			}
			return u$1 ?? f$1;
		}
	};
	return a.addComponents = a.addComponents.bind(a), a.matchComponents = a.matchComponents.bind(a), a;
}
function ae(r) {
	let t = [];
	r = Array.isArray(r) ? r : [r];
	let i = r.flatMap((e) => Object.entries(e));
	for (let [e, n] of i) if (n != null && n !== !1) if (typeof n != "object") {
		if (!e.startsWith("--")) {
			if (n === "@slot") {
				t.push(H(e, [z("@slot")]));
				continue;
			}
			e = e.replace(/([A-Z])/g, "-$1").toLowerCase();
		}
		t.push(l$1(e, String(n)));
	} else if (Array.isArray(n)) for (let s of n) typeof s == "string" ? t.push(l$1(e, s)) : t.push(H(e, ae(s)));
	else t.push(H(e, ae(n)));
	return t;
}
function Fr(r, t) {
	return (typeof r == "string" ? [r] : r).flatMap((e) => {
		if (e.trim().endsWith("}")) {
			let n = e.replace("}", "{@slot}}"), s = me$1(n);
			return At(s, t), s;
		} else return H(e, t);
	});
}
function zr(r, t, i) {
	D(r, (e) => {
		if (e.kind === "rule") {
			let n = it(e.selector);
			je(n, (s) => {
				s.kind === "selector" && s.value === `.${t}` && (s.value = `.${fe(i)}`);
			}), e.selector = De(n);
		}
	});
}
function Mr(r, t, i) {
	for (let e of en(t)) r.theme.addKeyframes(e);
}
function en(r) {
	let t = [];
	if ("keyframes" in r.theme) for (let [i, e] of Object.entries(r.theme.keyframes)) t.push(z("@keyframes", i, ae(e)));
	return t;
}
function Wr(r) {
	return { theme: {
		...be,
		colors: ({ theme: t }) => t("color", {}),
		extend: {
			fontSize: ({ theme: t }) => ({ ...t("text", {}) }),
			boxShadow: ({ theme: t }) => ({ ...t("shadow", {}) }),
			animation: ({ theme: t }) => ({ ...t("animate", {}) }),
			aspectRatio: ({ theme: t }) => ({ ...t("aspect", {}) }),
			borderRadius: ({ theme: t }) => ({ ...t("radius", {}) }),
			screens: ({ theme: t }) => ({ ...t("breakpoint", {}) }),
			letterSpacing: ({ theme: t }) => ({ ...t("tracking", {}) }),
			lineHeight: ({ theme: t }) => ({ ...t("leading", {}) }),
			transitionDuration: { DEFAULT: r.get(["--default-transition-duration"]) ?? null },
			transitionTimingFunction: { DEFAULT: r.get(["--default-transition-timing-function"]) ?? null },
			maxWidth: ({ theme: t }) => ({ ...t("container", {}) })
		}
	} };
}
var tn = {
	blocklist: [],
	future: {},
	prefix: "",
	important: !1,
	darkMode: null,
	theme: {},
	plugins: [],
	content: { files: [] }
};
function St(r, t) {
	let i = {
		design: r,
		configs: [],
		plugins: [],
		content: { files: [] },
		theme: {},
		extend: {},
		result: structuredClone(tn)
	};
	for (let n of t) Nt(i, n);
	for (let n of i.configs) "darkMode" in n && n.darkMode !== void 0 && (i.result.darkMode = n.darkMode ?? null), "prefix" in n && n.prefix !== void 0 && (i.result.prefix = n.prefix ?? ""), "blocklist" in n && n.blocklist !== void 0 && (i.result.blocklist = n.blocklist ?? []), "important" in n && n.important !== void 0 && (i.result.important = n.important ?? !1);
	let e = nn(i);
	return {
		resolvedConfig: {
			...i.result,
			content: i.content,
			theme: i.theme,
			plugins: i.plugins
		},
		replacedThemeKeys: e
	};
}
function rn(r, t) {
	if (Array.isArray(r) && $e(r[0])) return r.concat(t);
	if (Array.isArray(t) && $e(t[0]) && $e(r)) return [r, ...t];
	if (Array.isArray(t)) return t;
}
function Nt(r, { config: t, base: i, path: e, reference: n, src: s }) {
	let a = [];
	for (let u$1 of t.plugins ?? []) "__isOptionsFunction" in u$1 ? a.push({
		...u$1(),
		reference: n,
		src: s
	}) : "handler" in u$1 ? a.push({
		...u$1,
		reference: n,
		src: s
	}) : a.push({
		handler: u$1,
		reference: n,
		src: s
	});
	if (Array.isArray(t.presets) && t.presets.length === 0) throw new Error("Error in the config file/plugin/preset. An empty preset (`preset: []`) is not currently supported.");
	for (let u$1 of t.presets ?? []) Nt(r, {
		path: e,
		base: i,
		config: u$1,
		reference: n,
		src: s
	});
	for (let u$1 of a) r.plugins.push(u$1), u$1.config && Nt(r, {
		path: e,
		base: i,
		config: u$1.config,
		reference: !!u$1.reference,
		src: u$1.src ?? s
	});
	let p = t.content ?? [], f$1 = Array.isArray(p) ? p : p.files;
	for (let u$1 of f$1) r.content.files.push(typeof u$1 == "object" ? u$1 : {
		base: i,
		pattern: u$1
	});
	r.configs.push(t);
}
function nn(r) {
	let t = /* @__PURE__ */ new Set(), i = rt(r.design, () => r.theme, n), e = Object.assign(i, {
		theme: i,
		colors: l
	});
	function n(s) {
		return typeof s == "function" ? s(e) ?? null : s ?? null;
	}
	for (let s of r.configs) {
		let a = s.theme ?? {}, p = a.extend ?? {};
		for (let f$1 in a) f$1 !== "extend" && t.add(f$1);
		Object.assign(r.theme, a);
		for (let f$1 in p) r.extend[f$1] ??= [], r.extend[f$1].push(p[f$1]);
	}
	delete r.theme.extend;
	for (let s in r.extend) {
		let a = [r.theme[s], ...r.extend[s]];
		r.theme[s] = () => {
			let p = a.map(n);
			return Ke({}, p, rn);
		};
	}
	for (let s in r.theme) r.theme[s] = n(r.theme[s]);
	if (r.theme.screens && typeof r.theme.screens == "object") for (let s of Object.keys(r.theme.screens)) {
		let a = r.theme.screens[s];
		a && typeof a == "object" && ("raw" in a || "max" in a || "min" in a && (r.theme.screens[s] = a.min));
	}
	return t;
}
function Br(r, t) {
	let i = r.theme.container || {};
	if (typeof i != "object" || i === null) return;
	let e = on(i, t);
	e.length !== 0 && t.utilities.static("container", () => structuredClone(e));
}
function on({ center: r, padding: t, screens: i }, e) {
	let n = [], s = null;
	if (r && n.push(l$1("margin-inline", "auto")), (typeof t == "string" || typeof t == "object" && t !== null && "DEFAULT" in t) && n.push(l$1("padding-inline", typeof t == "string" ? t : t.DEFAULT)), typeof i == "object" && i !== null) {
		s = /* @__PURE__ */ new Map();
		let a = Array.from(e.theme.namespace("--breakpoint").entries());
		if (a.sort((p, f$1) => we(p[1], f$1[1], "asc")), a.length > 0) {
			let [p] = a[0];
			n.push(z("@media", `(width >= --theme(--breakpoint-${p}))`, [l$1("max-width", "none")]));
		}
		for (let [p, f$1] of Object.entries(i)) {
			if (typeof f$1 == "object") if ("min" in f$1) f$1 = f$1.min;
			else continue;
			s.set(p, z("@media", `(width >= ${f$1})`, [l$1("max-width", f$1)]));
		}
	}
	if (typeof t == "object" && t !== null) {
		let a = Object.entries(t).filter(([p]) => p !== "DEFAULT").map(([p, f$1]) => [
			p,
			e.theme.resolveValue(p, ["--breakpoint"]),
			f$1
		]).filter(Boolean);
		a.sort((p, f$1) => we(p[1], f$1[1], "asc"));
		for (let [p, , f$1] of a) if (s && s.has(p)) s.get(p).nodes.push(l$1("padding-inline", f$1));
		else {
			if (s) continue;
			n.push(z("@media", `(width >= theme(--breakpoint-${p}))`, [l$1("padding-inline", f$1)]));
		}
	}
	if (s) for (let [, a] of s) n.push(a);
	return n;
}
function qr({ addVariant: r, config: t }) {
	let i = t("darkMode", null), [e, n = ".dark"] = Array.isArray(i) ? i : [i];
	if (e === "variant") {
		let s;
		if (Array.isArray(n) || typeof n == "function" ? s = n : typeof n == "string" && (s = [n]), Array.isArray(s)) for (let a of s) a === ".dark" ? (e = !1, console.warn("When using `variant` for `darkMode`, you must provide a selector.\nExample: `darkMode: [\"variant\", \".your-selector &\"]`")) : a.includes("&") || (e = !1, console.warn("When using `variant` for `darkMode`, your selector must contain `&`.\nExample `darkMode: [\"variant\", \".your-selector &\"]`"));
		n = s;
	}
	e === null || (e === "selector" ? r("dark", `&:where(${n}, ${n} *)`) : e === "media" ? r("dark", "@media (prefers-color-scheme: dark)") : e === "variant" ? r("dark", n) : e === "class" && r("dark", `&:is(${n} *)`));
}
function Gr(r) {
	for (let [t, i] of [
		["t", "top"],
		["tr", "top right"],
		["r", "right"],
		["br", "bottom right"],
		["b", "bottom"],
		["bl", "bottom left"],
		["l", "left"],
		["tl", "top left"]
	]) r.utilities.static(`bg-gradient-to-${t}`, () => [l$1("--tw-gradient-position", `to ${i} in oklab`), l$1("background-image", "linear-gradient(var(--tw-gradient-stops))")]);
	r.utilities.static("bg-left-top", () => [l$1("background-position", "left top")]), r.utilities.static("bg-right-top", () => [l$1("background-position", "right top")]), r.utilities.static("bg-left-bottom", () => [l$1("background-position", "left bottom")]), r.utilities.static("bg-right-bottom", () => [l$1("background-position", "right bottom")]), r.utilities.static("object-left-top", () => [l$1("object-position", "left top")]), r.utilities.static("object-right-top", () => [l$1("object-position", "right top")]), r.utilities.static("object-left-bottom", () => [l$1("object-position", "left bottom")]), r.utilities.static("object-right-bottom", () => [l$1("object-position", "right bottom")]), r.utilities.functional("max-w-screen", (t) => {
		if (!t.value || t.value.kind === "arbitrary") return;
		let i = r.theme.resolve(t.value.value, ["--breakpoint"]);
		if (i) return [l$1("max-width", i)];
	}), r.utilities.static("overflow-ellipsis", () => [l$1("text-overflow", "ellipsis")]), r.utilities.static("decoration-slice", () => [l$1("-webkit-box-decoration-break", "slice"), l$1("box-decoration-break", "slice")]), r.utilities.static("decoration-clone", () => [l$1("-webkit-box-decoration-break", "clone"), l$1("box-decoration-break", "clone")]), r.utilities.functional("flex-shrink", (t) => {
		if (!t.modifier) {
			if (!t.value) return [l$1("flex-shrink", "1")];
			if (t.value.kind === "arbitrary") return [l$1("flex-shrink", t.value.value)];
			if (u(t.value.value)) return [l$1("flex-shrink", t.value.value)];
		}
	}), r.utilities.functional("flex-grow", (t) => {
		if (!t.modifier) {
			if (!t.value) return [l$1("flex-grow", "1")];
			if (t.value.kind === "arbitrary") return [l$1("flex-grow", t.value.value)];
			if (u(t.value.value)) return [l$1("flex-grow", t.value.value)];
		}
	}), r.utilities.static("order-none", () => [l$1("order", "0")]);
}
function Jr(r, t) {
	let i = r.theme.screens || {}, e = t.variants.get("min")?.order ?? 0, n = [];
	for (let [a, p] of Object.entries(i)) {
		let d$1 = function(w$1) {
			t.variants.static(a, (v$1) => {
				v$1.nodes = [z("@media", m, v$1.nodes)];
			}, { order: w$1 });
		};
		let f$1 = t.variants.get(a), u$1 = t.theme.resolveValue(a, ["--breakpoint"]);
		if (f$1 && u$1 && !t.theme.hasDefault(`--breakpoint-${a}`)) continue;
		let g$1 = !0;
		typeof p == "string" && (g$1 = !1);
		let m = ln(p);
		g$1 ? n.push(d$1) : d$1(e);
	}
	if (n.length !== 0) {
		for (let [, a] of t.variants.variants) a.order > e && (a.order += n.length);
		t.variants.compareFns = new Map(Array.from(t.variants.compareFns).map(([a, p]) => (a > e && (a += n.length), [a, p])));
		for (let [a, p] of n.entries()) p(e + a + 1);
	}
}
function ln(r) {
	return (Array.isArray(r) ? r : [r]).map((i) => typeof i == "string" ? { min: i } : i && typeof i == "object" ? i : null).map((i) => {
		if (i === null) return null;
		if ("raw" in i) return i.raw;
		let e = "";
		return i.max !== void 0 && (e += `${i.max} >= `), e += "width", i.min !== void 0 && (e += ` >= ${i.min}`), `(${e})`;
	}).filter(Boolean).join(", ");
}
function Hr(r, t) {
	let i = r.theme.aria || {}, e = r.theme.supports || {}, n = r.theme.data || {};
	if (Object.keys(i).length > 0) {
		let s = t.variants.get("aria"), a = s?.applyFn, p = s?.compounds;
		t.variants.functional("aria", (f$1, u$1) => {
			let g$1 = u$1.value;
			return g$1 && g$1.kind === "named" && g$1.value in i ? a?.(f$1, {
				...u$1,
				value: {
					kind: "arbitrary",
					value: i[g$1.value]
				}
			}) : a?.(f$1, u$1);
		}, { compounds: p });
	}
	if (Object.keys(e).length > 0) {
		let s = t.variants.get("supports"), a = s?.applyFn, p = s?.compounds;
		t.variants.functional("supports", (f$1, u$1) => {
			let g$1 = u$1.value;
			return g$1 && g$1.kind === "named" && g$1.value in e ? a?.(f$1, {
				...u$1,
				value: {
					kind: "arbitrary",
					value: e[g$1.value]
				}
			}) : a?.(f$1, u$1);
		}, { compounds: p });
	}
	if (Object.keys(n).length > 0) {
		let s = t.variants.get("data"), a = s?.applyFn, p = s?.compounds;
		t.variants.functional("data", (f$1, u$1) => {
			let g$1 = u$1.value;
			return g$1 && g$1.kind === "named" && g$1.value in n ? a?.(f$1, {
				...u$1,
				value: {
					kind: "arbitrary",
					value: n[g$1.value]
				}
			}) : a?.(f$1, u$1);
		}, { compounds: p });
	}
}
var an = /^[a-z]+$/;
async function Zr({ designSystem: r, base: t, ast: i, loadModule: e, sources: n }) {
	let s = 0, a = [], p = [];
	D(i, (m, { parent: d$1, replaceWith: w$1, context: v$1 }) => {
		if (m.kind === "at-rule") {
			if (m.name === "@plugin") {
				if (d$1 !== null) throw new Error("`@plugin` cannot be nested.");
				let y$1 = m.params.slice(1, -1);
				if (y$1.length === 0) throw new Error("`@plugin` must have a path.");
				let x$1 = {};
				for (let N$1 of m.nodes ?? []) {
					if (N$1.kind !== "declaration") throw new Error(`Unexpected \`@plugin\` option:

${ne([N$1])}

\`@plugin\` options must be a flat list of declarations.`);
					if (N$1.value === void 0) continue;
					let k = N$1.value, S$1 = d(k, ",").map((O$1) => {
						if (O$1 = O$1.trim(), O$1 === "null") return null;
						if (O$1 === "true") return !0;
						if (O$1 === "false") return !1;
						if (Number.isNaN(Number(O$1))) {
							if (O$1[0] === "\"" && O$1[O$1.length - 1] === "\"" || O$1[0] === "'" && O$1[O$1.length - 1] === "'") return O$1.slice(1, -1);
							if (O$1[0] === "{" && O$1[O$1.length - 1] === "}") throw new Error(`Unexpected \`@plugin\` option: Value of declaration \`${ne([N$1]).trim()}\` is not supported.

Using an object as a plugin option is currently only supported in JavaScript configuration files.`);
						} else return Number(O$1);
						return O$1;
					});
					x$1[N$1.property] = S$1.length === 1 ? S$1[0] : S$1;
				}
				a.push([{
					id: y$1,
					base: v$1.base,
					reference: !!v$1.reference,
					src: m.src
				}, Object.keys(x$1).length > 0 ? x$1 : null]), w$1([]), s |= 4;
				return;
			}
			if (m.name === "@config") {
				if (m.nodes.length > 0) throw new Error("`@config` cannot have a body.");
				if (d$1 !== null) throw new Error("`@config` cannot be nested.");
				p.push({
					id: m.params.slice(1, -1),
					base: v$1.base,
					reference: !!v$1.reference,
					src: m.src
				}), w$1([]), s |= 4;
				return;
			}
		}
	}), Gr(r);
	let f$1 = r.resolveThemeValue;
	if (r.resolveThemeValue = function(d$1, w$1) {
		return d$1.startsWith("--") ? f$1(d$1, w$1) : (s |= Yr({
			designSystem: r,
			base: t,
			ast: i,
			sources: n,
			configs: [],
			pluginDetails: []
		}), r.resolveThemeValue(d$1, w$1));
	}, !a.length && !p.length) return 0;
	let [u$1, g$1] = await Promise.all([Promise.all(p.map(async ({ id: m, base: d$1, reference: w$1, src: v$1 }) => {
		let y$1 = await e(m, d$1, "config");
		return {
			path: m,
			base: y$1.base,
			config: y$1.module,
			reference: w$1,
			src: v$1
		};
	})), Promise.all(a.map(async ([{ id: m, base: d$1, reference: w$1, src: v$1 }, y$1]) => {
		let x$1 = await e(m, d$1, "plugin");
		return {
			path: m,
			base: x$1.base,
			plugin: x$1.module,
			options: y$1,
			reference: w$1,
			src: v$1
		};
	}))]);
	return s |= Yr({
		designSystem: r,
		base: t,
		ast: i,
		sources: n,
		configs: u$1,
		pluginDetails: g$1
	}), s;
}
function Yr({ designSystem: r, base: t, ast: i, sources: e, configs: n, pluginDetails: s }) {
	let a = 0, f$1 = [...s.map((y$1) => {
		if (!y$1.options) return {
			config: { plugins: [y$1.plugin] },
			base: y$1.base,
			reference: y$1.reference,
			src: y$1.src
		};
		if ("__isOptionsFunction" in y$1.plugin) return {
			config: { plugins: [y$1.plugin(y$1.options)] },
			base: y$1.base,
			reference: y$1.reference,
			src: y$1.src
		};
		throw new Error(`The plugin "${y$1.path}" does not accept options`);
	}), ...n], { resolvedConfig: u$1 } = St(r, [
		{
			config: Wr(r.theme),
			base: t,
			reference: !0,
			src: void 0
		},
		...f$1,
		{
			config: { plugins: [qr] },
			base: t,
			reference: !0,
			src: void 0
		}
	]), { resolvedConfig: g$1, replacedThemeKeys: m } = St(r, f$1), d$1 = {
		designSystem: r,
		ast: i,
		resolvedConfig: u$1,
		featuresRef: { set current(y$1) {
			a |= y$1;
		} }
	}, w$1 = Vt({
		...d$1,
		referenceMode: !1,
		src: void 0
	}), v$1 = r.resolveThemeValue;
	r.resolveThemeValue = function(x$1, N$1) {
		if (x$1[0] === "-" && x$1[1] === "-") return v$1(x$1, N$1);
		let k = w$1.theme(x$1, void 0);
		if (Array.isArray(k) && k.length === 2) return k[0];
		if (Array.isArray(k)) return k.join(", ");
		if (typeof k == "string") return k;
	};
	for (let { handler: y$1, reference: x$1, src: N$1 } of u$1.plugins) {
		let k = Vt({
			...d$1,
			referenceMode: x$1 ?? !1,
			src: N$1
		});
		y$1(k);
	}
	if ($r(r, g$1, m), Mr(r, g$1, m), Hr(g$1, r), Jr(g$1, r), Br(g$1, r), !r.theme.prefix && u$1.prefix) {
		if (u$1.prefix.endsWith("-") && (u$1.prefix = u$1.prefix.slice(0, -1), console.warn(`The prefix "${u$1.prefix}" is invalid. Prefixes must be lowercase ASCII letters (a-z) only and is written as a variant before all utilities. We have fixed up the prefix for you. Remove the trailing \`-\` to silence this warning.`)), !an.test(u$1.prefix)) throw new Error(`The prefix "${u$1.prefix}" is invalid. Prefixes must be lowercase ASCII letters (a-z) only.`);
		r.theme.prefix = u$1.prefix;
	}
	if (!r.important && u$1.important === !0 && (r.important = !0), typeof u$1.important == "string") {
		let y$1 = u$1.important;
		D(i, (x$1, { replaceWith: N$1, parent: k }) => {
			if (x$1.kind === "at-rule" && !(x$1.name !== "@tailwind" || x$1.params !== "utilities")) return k?.kind === "rule" && k.selector === y$1 ? 2 : (N$1(W(y$1, [x$1])), 2);
		});
	}
	for (let y$1 of u$1.blocklist) r.invalidCandidates.add(y$1);
	for (let y$1 of u$1.content.files) {
		if ("raw" in y$1) throw new Error(`Error in the config file/plugin/preset. The \`content\` key contains a \`raw\` entry:

${JSON.stringify(y$1, null, 2)}

This feature is not currently supported.`);
		let x$1 = !1;
		y$1.pattern[0] == "!" && (x$1 = !0, y$1.pattern = y$1.pattern.slice(1)), e.push({
			...y$1,
			negated: x$1
		});
	}
	return a;
}
function Qr(r) {
	let t = [0];
	for (let n = 0; n < r.length; n++) r.charCodeAt(n) === 10 && t.push(n + 1);
	function i(n) {
		let s = 0, a = t.length;
		for (; a > 0;) {
			let f$1 = (a | 0) >> 1, u$1 = s + f$1;
			t[u$1] <= n ? (s = u$1 + 1, a = a - f$1 - 1) : a = f$1;
		}
		s -= 1;
		let p = n - t[s];
		return {
			line: s + 1,
			column: p
		};
	}
	function e({ line: n, column: s }) {
		n -= 1, n = Math.min(Math.max(n, 0), t.length - 1);
		let a = t[n], p = t[n + 1] ?? a;
		return Math.min(Math.max(a + s, 0), p);
	}
	return {
		find: i,
		findOffset: e
	};
}
function Xr({ ast: r }) {
	let t = new M((n) => Qr(n.code)), i = new M((n) => ({
		url: n.file,
		content: n.code,
		ignore: !1
	})), e = {
		file: null,
		sources: [],
		mappings: []
	};
	D(r, (n) => {
		if (!n.src || !n.dst) return;
		let s = i.get(n.src[0]);
		if (!s.content) return;
		let a = t.get(n.src[0]), p = t.get(n.dst[0]), f$1 = s.content.slice(n.src[1], n.src[2]), u$1 = 0;
		for (let d$1 of f$1.split(`
`)) {
			if (d$1.trim() !== "") {
				let w$1 = a.find(n.src[1] + u$1), v$1 = p.find(n.dst[1]);
				e.mappings.push({
					name: null,
					originalPosition: {
						source: s,
						...w$1
					},
					generatedPosition: v$1
				});
			}
			u$1 += d$1.length, u$1 += 1;
		}
		let g$1 = a.find(n.src[2]), m = p.find(n.dst[2]);
		e.mappings.push({
			name: null,
			originalPosition: {
				source: s,
				...g$1
			},
			generatedPosition: m
		});
	});
	for (let n of t.keys()) e.sources.push(i.get(n));
	return e.mappings.sort((n, s) => n.generatedPosition.line - s.generatedPosition.line || n.generatedPosition.column - s.generatedPosition.column || (n.originalPosition?.line ?? 0) - (s.originalPosition?.line ?? 0) || (n.originalPosition?.column ?? 0) - (s.originalPosition?.column ?? 0)), e;
}
var ei = /^(-?\d+)\.\.(-?\d+)(?:\.\.(-?\d+))?$/;
function nt(r) {
	let t = r.indexOf("{");
	if (t === -1) return [r];
	let i = [], e = r.slice(0, t), n = r.slice(t), s = 0, a = n.lastIndexOf("}");
	for (let m = 0; m < n.length; m++) {
		let d$1 = n[m];
		if (d$1 === "{") s++;
		else if (d$1 === "}" && (s--, s === 0)) {
			a = m;
			break;
		}
	}
	if (a === -1) throw new Error(`The pattern \`${r}\` is not balanced.`);
	let p = n.slice(1, a), f$1 = n.slice(a + 1), u$1;
	sn(p) ? u$1 = un(p) : u$1 = d(p, ","), u$1 = u$1.flatMap((m) => nt(m));
	let g$1 = nt(f$1);
	for (let m of g$1) for (let d$1 of u$1) i.push(e + d$1 + m);
	return i;
}
function sn(r) {
	return ei.test(r);
}
function un(r) {
	let t = r.match(ei);
	if (!t) return [r];
	let [, i, e, n] = t, s = n ? parseInt(n, 10) : void 0, a = [];
	if (/^-?\d+$/.test(i) && /^-?\d+$/.test(e)) {
		let p = parseInt(i, 10), f$1 = parseInt(e, 10);
		if (s === void 0 && (s = p <= f$1 ? 1 : -1), s === 0) throw new Error("Step cannot be zero in sequence expansion.");
		let u$1 = p < f$1;
		u$1 && s < 0 && (s = -s), !u$1 && s > 0 && (s = -s);
		for (let g$1 = p; u$1 ? g$1 <= f$1 : g$1 >= f$1; g$1 += s) a.push(g$1.toString());
	}
	return a;
}
var fn = /^[a-z]+$/, dt = ((n) => (n[n.None = 0] = "None", n[n.AtProperty = 1] = "AtProperty", n[n.ColorMix = 2] = "ColorMix", n[n.All = 3] = "All", n))(dt || {});
function cn() {
	throw new Error("No `loadModule` function provided to `compile`");
}
function pn() {
	throw new Error("No `loadStylesheet` function provided to `compile`");
}
function dn(r) {
	let t = 0, i = null;
	for (let e of d(r, " ")) e === "reference" ? t |= 2 : e === "inline" ? t |= 1 : e === "default" ? t |= 4 : e === "static" ? t |= 8 : e.startsWith("prefix(") && e.endsWith(")") && (i = e.slice(7, -1));
	return [t, i];
}
var Re = ((p) => (p[p.None = 0] = "None", p[p.AtApply = 1] = "AtApply", p[p.AtImport = 2] = "AtImport", p[p.JsPluginCompat = 4] = "JsPluginCompat", p[p.ThemeFunction = 8] = "ThemeFunction", p[p.Utilities = 16] = "Utilities", p[p.Variants = 32] = "Variants", p))(Re || {});
async function ti(r, { base: t = "", from: i, loadModule: e = cn, loadStylesheet: n = pn } = {}) {
	let s = 0;
	r = [le({ base: t }, r)], s |= await $t(r, t, n, 0, i !== void 0);
	let a = null, p = new Be(), f$1 = [], u$1 = [], g$1 = null, m = null, d$1 = [], w$1 = [], v$1 = [], y$1 = [], x$1 = null;
	D(r, (k, { parent: S$1, replaceWith: O$1, context: K$1 }) => {
		if (k.kind === "at-rule") {
			if (k.name === "@tailwind" && (k.params === "utilities" || k.params.startsWith("utilities"))) {
				if (m !== null) {
					O$1([]);
					return;
				}
				if (K$1.reference) {
					O$1([]);
					return;
				}
				let R$1 = d(k.params, " ");
				for (let j$1 of R$1) if (j$1.startsWith("source(")) {
					let _$1 = j$1.slice(7, -1);
					if (_$1 === "none") {
						x$1 = _$1;
						continue;
					}
					if (_$1[0] === "\"" && _$1[_$1.length - 1] !== "\"" || _$1[0] === "'" && _$1[_$1.length - 1] !== "'" || _$1[0] !== "'" && _$1[0] !== "\"") throw new Error("`source(…)` paths must be quoted.");
					x$1 = {
						base: K$1.sourceBase ?? K$1.base,
						pattern: _$1.slice(1, -1)
					};
				}
				m = k, s |= 16;
			}
			if (k.name === "@utility") {
				if (S$1 !== null) throw new Error("`@utility` cannot be nested.");
				if (k.nodes.length === 0) throw new Error(`\`@utility ${k.params}\` is empty. Utilities should include at least one property.`);
				let R$1 = pr(k);
				if (R$1 === null) {
					if (!k.params.endsWith("-*")) {
						if (k.params.endsWith("*")) throw new Error(`\`@utility ${k.params}\` defines an invalid utility name. A functional utility must end in \`-*\`.`);
						if (k.params.includes("*")) throw new Error(`\`@utility ${k.params}\` defines an invalid utility name. The dynamic portion marked by \`-*\` must appear once at the end.`);
					}
					throw new Error(`\`@utility ${k.params}\` defines an invalid utility name. Utilities should be alphanumeric and start with a lowercase letter.`);
				}
				u$1.push(R$1);
			}
			if (k.name === "@source") {
				if (k.nodes.length > 0) throw new Error("`@source` cannot have a body.");
				if (S$1 !== null) throw new Error("`@source` cannot be nested.");
				let R$1 = !1, j$1 = !1, _$1 = k.params;
				if (_$1[0] === "n" && _$1.startsWith("not ") && (R$1 = !0, _$1 = _$1.slice(4)), _$1[0] === "i" && _$1.startsWith("inline(") && (j$1 = !0, _$1 = _$1.slice(7, -1)), _$1[0] === "\"" && _$1[_$1.length - 1] !== "\"" || _$1[0] === "'" && _$1[_$1.length - 1] !== "'" || _$1[0] !== "'" && _$1[0] !== "\"") throw new Error("`@source` paths must be quoted.");
				let G$1 = _$1.slice(1, -1);
				if (j$1) {
					let L$1 = R$1 ? y$1 : v$1, B$1 = d(G$1, " ");
					for (let Z$1 of B$1) for (let re$1 of nt(Z$1)) L$1.push(re$1);
				} else w$1.push({
					base: K$1.base,
					pattern: G$1,
					negated: R$1
				});
				O$1([]);
				return;
			}
			if (k.name === "@variant" && (S$1 === null ? k.nodes.length === 0 ? k.name = "@custom-variant" : (D(k.nodes, (R$1) => {
				if (R$1.kind === "at-rule" && R$1.name === "@slot") return k.name = "@custom-variant", 2;
			}), k.name === "@variant" && d$1.push(k)) : d$1.push(k)), k.name === "@custom-variant") {
				if (S$1 !== null) throw new Error("`@custom-variant` cannot be nested.");
				O$1([]);
				let [R$1, j$1] = d(k.params, " ");
				if (!Xe.test(R$1)) throw new Error(`\`@custom-variant ${R$1}\` defines an invalid variant name. Variants should only contain alphanumeric, dashes, or underscore characters and start with a lowercase letter or number.`);
				if (k.nodes.length > 0 && j$1) throw new Error(`\`@custom-variant ${R$1}\` cannot have both a selector and a body.`);
				if (k.nodes.length === 0) {
					if (!j$1) throw new Error(`\`@custom-variant ${R$1}\` has no selector or body.`);
					let _$1 = d(j$1.slice(1, -1), ",");
					if (_$1.length === 0 || _$1.some((B$1) => B$1.trim() === "")) throw new Error(`\`@custom-variant ${R$1} (${_$1.join(",")})\` selector is invalid.`);
					let G$1 = [], L$1 = [];
					for (let B$1 of _$1) B$1 = B$1.trim(), B$1[0] === "@" ? G$1.push(B$1) : L$1.push(B$1);
					f$1.push((B$1) => {
						B$1.variants.static(R$1, (Z$1) => {
							let re$1 = [];
							L$1.length > 0 && re$1.push(W(L$1.join(", "), Z$1.nodes));
							for (let o of G$1) re$1.push(H(o, Z$1.nodes));
							Z$1.nodes = re$1;
						}, { compounds: ye([...L$1, ...G$1]) });
					});
					return;
				} else {
					f$1.push((_$1) => {
						_$1.variants.fromAst(R$1, k.nodes);
					});
					return;
				}
			}
			if (k.name === "@media") {
				let R$1 = d(k.params, " "), j$1 = [];
				for (let _$1 of R$1) if (_$1.startsWith("source(")) {
					let G$1 = _$1.slice(7, -1);
					D(k.nodes, (L$1, { replaceWith: B$1 }) => {
						if (L$1.kind === "at-rule" && L$1.name === "@tailwind" && L$1.params === "utilities") return L$1.params += ` source(${G$1})`, B$1([le({ sourceBase: K$1.base }, [L$1])]), 2;
					});
				} else if (_$1.startsWith("theme(")) {
					let G$1 = _$1.slice(6, -1), L$1 = G$1.includes("reference");
					D(k.nodes, (B$1) => {
						if (B$1.kind !== "at-rule") {
							if (L$1) throw new Error("Files imported with `@import \"…\" theme(reference)` must only contain `@theme` blocks.\nUse `@reference \"…\";` instead.");
							return 0;
						}
						if (B$1.name === "@theme") return B$1.params += " " + G$1, 1;
					});
				} else if (_$1.startsWith("prefix(")) {
					let G$1 = _$1.slice(7, -1);
					D(k.nodes, (L$1) => {
						if (L$1.kind === "at-rule" && L$1.name === "@theme") return L$1.params += ` prefix(${G$1})`, 1;
					});
				} else _$1 === "important" ? a = !0 : _$1 === "reference" ? k.nodes = [le({ reference: !0 }, k.nodes)] : j$1.push(_$1);
				j$1.length > 0 ? k.params = j$1.join(" ") : R$1.length > 0 && O$1(k.nodes);
			}
			if (k.name === "@theme") {
				let [R$1, j$1] = dn(k.params);
				if (K$1.reference && (R$1 |= 2), j$1) {
					if (!fn.test(j$1)) throw new Error(`The prefix "${j$1}" is invalid. Prefixes must be lowercase ASCII letters (a-z) only.`);
					p.prefix = j$1;
				}
				return D(k.nodes, (_$1) => {
					if (_$1.kind === "at-rule" && _$1.name === "@keyframes") return p.addKeyframes(_$1), 1;
					if (_$1.kind === "comment") return;
					if (_$1.kind === "declaration" && _$1.property.startsWith("--")) {
						p.add(ge$1(_$1.property), _$1.value ?? "", R$1, _$1.src);
						return;
					}
					let G$1 = ne([z(k.name, k.params, [_$1])]).split(`
`).map((L$1, B$1, Z$1) => `${B$1 === 0 || B$1 >= Z$1.length - 2 ? " " : ">"} ${L$1}`).join(`
`);
					throw new Error(`\`@theme\` blocks must only contain custom properties or \`@keyframes\`.

${G$1}`);
				}), g$1 ? O$1([]) : (g$1 = W(":root, :host", []), g$1.src = k.src, O$1([g$1])), 1;
			}
		}
	});
	let N$1 = br(p);
	if (a && (N$1.important = a), y$1.length > 0) for (let k of y$1) N$1.invalidCandidates.add(k);
	s |= await Zr({
		designSystem: N$1,
		base: t,
		ast: r,
		loadModule: e,
		sources: w$1
	});
	for (let k of f$1) k(N$1);
	for (let k of u$1) k(N$1);
	if (g$1) {
		let k = [];
		for (let [O$1, K$1] of N$1.theme.entries()) {
			if (K$1.options & 2) continue;
			let R$1 = l$1(fe(O$1), K$1.value);
			R$1.src = K$1.src, k.push(R$1);
		}
		let S$1 = N$1.theme.getKeyframes();
		for (let O$1 of S$1) r.push(le({ theme: !0 }, [F([O$1])]));
		g$1.nodes = [le({ theme: !0 }, k)];
	}
	if (d$1.length > 0) {
		for (let k of d$1) {
			let S$1 = W("&", k.nodes), O$1 = k.params, K$1 = N$1.parseVariant(O$1);
			if (K$1 === null) throw new Error(`Cannot use \`@variant\` with unknown variant: ${O$1}`);
			if (Ae(S$1, K$1, N$1.variants) === null) throw new Error(`Cannot use \`@variant\` with variant: ${O$1}`);
			Object.assign(k, S$1);
		}
		s |= 32;
	}
	if (s |= xe(r, N$1), s |= Oe(r, N$1), m) {
		let k = m;
		k.kind = "context", k.context = {};
	}
	return D(r, (k, { replaceWith: S$1 }) => {
		if (k.kind === "at-rule") return k.name === "@utility" && S$1([]), 1;
	}), {
		designSystem: N$1,
		ast: r,
		sources: w$1,
		root: x$1,
		utilitiesNode: m,
		features: s,
		inlineCandidates: v$1
	};
}
async function mn(r, t = {}) {
	let { designSystem: i, ast: e, sources: n, root: s, utilitiesNode: a, features: p, inlineCandidates: f$1 } = await ti(r, t);
	e.unshift(We(`! tailwindcss v${Pt} | MIT License | https://tailwindcss.com `));
	function u$1(v$1) {
		i.invalidCandidates.add(v$1);
	}
	let g$1 = /* @__PURE__ */ new Set(), m = null, d$1 = 0, w$1 = !1;
	for (let v$1 of f$1) i.invalidCandidates.has(v$1) || (g$1.add(v$1), w$1 = !0);
	return {
		sources: n,
		root: s,
		features: p,
		build(v$1) {
			if (p === 0) return r;
			if (!a) return m ??= ve(e, i, t.polyfills), m;
			let y$1 = w$1, x$1 = !1;
			w$1 = !1;
			let N$1 = g$1.size;
			for (let S$1 of v$1) if (!i.invalidCandidates.has(S$1)) if (S$1[0] === "-" && S$1[1] === "-") {
				let O$1 = i.theme.markUsedVariable(S$1);
				y$1 ||= O$1, x$1 ||= O$1;
			} else g$1.add(S$1), y$1 ||= g$1.size !== N$1;
			if (!y$1) return m ??= ve(e, i, t.polyfills), m;
			let k = pe$1(g$1, i, { onInvalidCandidate: u$1 }).astNodes;
			return t.from && D(k, (S$1) => {
				S$1.src ??= a.src;
			}), !x$1 && d$1 === k.length ? (m ??= ve(e, i, t.polyfills), m) : (d$1 = k.length, a.nodes = k, m = ve(e, i, t.polyfills), m);
		}
	};
}
async function $a(r, t = {}) {
	let i = me$1(r, { from: t.from }), e = await mn(i, t), n = i, s = r;
	return {
		...e,
		build(a) {
			let p = e.build(a);
			return p === n || (s = ne(p, !!t.from), n = p), s;
		},
		buildSourceMap() {
			return Xr({ ast: n });
		}
	};
}
async function Va(r, t = {}) {
	return (await ti(me$1(r), t)).designSystem;
}
function gn() {
	throw new Error("It looks like you're trying to use `tailwindcss` directly as a PostCSS plugin. The PostCSS plugin has moved to a separate package, so to continue using Tailwind CSS with PostCSS you'll need to install `@tailwindcss/postcss` and update your PostCSS configuration.");
}

//#endregion
export { Re as Features, dt as Polyfills, Va as __unstable__loadDesignSystem, $a as compile, mn as compileAst, gn as default };
//# sourceMappingURL=tailwindcss.js.map